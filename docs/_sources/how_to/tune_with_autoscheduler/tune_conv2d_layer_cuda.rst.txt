
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 48-53

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 53-65

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 66-69

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 69-82

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 83-100

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 100-110

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 111-117

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 117-126

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 127-130

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 130-134

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      allocate(conv2d_nchw: Pointer(local float32), float32, [8]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [2592]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [2304]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [16], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[7] = 0f32
        for (rc.outer.outer: int32, 0, 16) {
          let cse_var_2: int32 = (rc.outer.outer*1568)
          let cse_var_1: int32 = (rc.outer.outer*288)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [2592], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else((((9 <= threadIdx.x_1) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[(((cse_var_2 + (floordiv(threadIdx.x_1, 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 49)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 49), 81)) && (floormod((threadIdx.x_1 + 49), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 49), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 49), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 8), 9)) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 98), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 17), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 147)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 66), 81)) && (floormod((threadIdx.x_1 + 66), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 147), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 66), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 34), 81)) && (floormod((threadIdx.x_1 + 34), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 196), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 34), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 245)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 2), 81)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 245), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 2), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 51), 81)) && (floormod((threadIdx.x_1 + 51), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 294), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 51), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 343)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 343), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 19), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 68), 81)) && (floormod((threadIdx.x_1 + 68), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 392), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 68), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 441)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 9) + 4), 9)) && (floormod((threadIdx.x_1 + 36), 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 441), 81)*49)) + (floormod((floordiv(threadIdx.x_1, 9) + 4), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 4), 81)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 490), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 4), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 539)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 53), 81)) && (floormod((threadIdx.x_1 + 53), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 539), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 53), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 3), 9)) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 588), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 21), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 637)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 70), 81)) && (floormod((threadIdx.x_1 + 70), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 637), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 70), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 38), 81)) && (floormod((threadIdx.x_1 + 38), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 686), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 38), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 735)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 6), 81)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 735), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 6), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 55), 81)) && (floormod((threadIdx.x_1 + 55), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 784), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 55), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 833)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 5), 9)) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 833), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 23), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 882)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 9) + 8), 9)) && (floormod((threadIdx.x_1 + 72), 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 882), 81)*49)) + (floormod((floordiv(threadIdx.x_1, 9) + 8), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 931)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 40), 81)) && (floormod((threadIdx.x_1 + 40), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 931), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 40), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 8), 81)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 980), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 8), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1029)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 57), 81)) && (floormod((threadIdx.x_1 + 57), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1029), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 57), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1078)] = @tir.if_then_else((((threadIdx.x_1 < 47) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1078), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 25), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1127)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 74), 81)) && (floormod((threadIdx.x_1 + 74), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1127), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 74), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 42), 81)) && (floormod((threadIdx.x_1 + 42), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1176), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 42), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1225)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1225), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 10), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1274)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 59), 81)) && (floormod((threadIdx.x_1 + 59), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1274), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 59), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1323)] = @tir.if_then_else((((threadIdx.x_1 < 45) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1323), 81)*49)) + ((floordiv(threadIdx.x_1, 9) + 3)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1372)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 76), 81)) && (floormod((threadIdx.x_1 + 76), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1372), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 76), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1421)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 44), 81)) && (floormod((threadIdx.x_1 + 44), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1421), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 44), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1470)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 3), 9)) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1470), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 12), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1519)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 61), 81)) && (floormod((threadIdx.x_1 + 61), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1519), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 61), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1568)] = @tir.if_then_else((((threadIdx.x_1 < 43) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1568), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 29), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1617)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 78), 81)) && (floormod((threadIdx.x_1 + 78), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1617), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 78), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1666)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 46), 81)) && (floormod((threadIdx.x_1 + 46), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1666), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 46), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1715)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 5), 9)) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1715), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 14), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1764)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 9) + 7), 9)) && (floormod((threadIdx.x_1 + 63), 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1764), 81)*49)) + (floormod((floordiv(threadIdx.x_1, 9) + 7), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1813)] = @tir.if_then_else((((threadIdx.x_1 < 41) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1813), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 31), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1862)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 80), 81)) && (floormod((threadIdx.x_1 + 80), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1862), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 80), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1911)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 48), 81)) && (floormod((threadIdx.x_1 + 48), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1911), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 48), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 1960)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 7), 9)) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 1960), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 16), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2009)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 65), 81)) && (floormod((threadIdx.x_1 + 65), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2009), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 65), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2058)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 33), 81)) && (floormod((threadIdx.x_1 + 33), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2058), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 33), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2107)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 1), 81)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2107), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 1), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2156)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 50), 81)) && (floormod((threadIdx.x_1 + 50), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2156), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 50), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2205)] = @tir.if_then_else(((1 <= floormod(threadIdx.x_1, 9)) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2205), 81)*49)) + ((floordiv(threadIdx.x_1, 9) + 2)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2254)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 67), 81)) && (floormod((threadIdx.x_1 + 67), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2254), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 67), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2303)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 35), 81)) && (floormod((threadIdx.x_1 + 35), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2303), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 35), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2352)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 3), 81)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2352), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 3), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2401)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 52), 81)) && (floormod((threadIdx.x_1 + 52), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2401), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 52), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2450)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 2), 9)) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2450), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 20), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            pad_temp.shared_1[(threadIdx.x_1 + 2499)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 69), 81)) && (floormod((threadIdx.x_1 + 69), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2499), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 69), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            if @tir.likely((threadIdx.x_1 < 44), dtype=bool) {
              pad_temp.shared_1[(threadIdx.x_1 + 2548)] = @tir.if_then_else((((threadIdx.x_1 < 35) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1 + 2548), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 37), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1: Buffer(kernel.shared, float32, [2304], [], scope="shared")[threadIdx.x_2] = kernel[(((blockIdx.x*36864) + cse_var_1) + threadIdx.x_2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 49)] = kernel[((((blockIdx.x*36864) + cse_var_1) + (floordiv((threadIdx.x_2 + 49), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[((((blockIdx.x*36864) + cse_var_1) + (floordiv((threadIdx.x_2 + 98), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 147)] = kernel[((((blockIdx.x*36864) + cse_var_1) + threadIdx.x_2) + 147)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[((((blockIdx.x*36864) + cse_var_1) + (floordiv((threadIdx.x_2 + 196), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 245)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 245), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 245), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 294)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 294), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 2)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 343)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 343), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 55), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 392), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 104), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 441)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 441), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 51)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 490)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 490), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 202), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 539)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 539), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 251), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 588)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 588), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 4)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 637)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 637), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 61), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 686)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 686), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 110), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 735)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 735), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 53)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 784), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 208), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 833)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 833), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 257), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 882)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 882), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 6)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 931)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 931), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 67), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 980)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 980), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 116), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1029)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1029), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 55)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1078)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1078), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 214), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1127)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1127), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 263), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1176), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 8)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1225)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1225), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 73), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1274)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1274), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 122), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1323)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1323), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 57)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1372)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1372), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 220), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1421)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1421), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 269), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1470)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1470), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 10)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1519)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1519), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 79), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1568), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 128), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1617)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1617), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 59)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1666)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1666), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 226), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1715)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1715), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 275), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1764)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1764), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 12)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1813)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1813), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 85), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1862)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1862), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 134), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1911)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1911), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 61)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 1960)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1960), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 232), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 2009)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2009), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 281), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 2058)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2058), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 14)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 2107)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2107), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 91), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 2156)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2156), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 140), 288), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 2205)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2205), 288)*4608)) + cse_var_1) + ((floordiv(threadIdx.x_2, 3) + 63)*3)) + floormod(threadIdx.x_2, 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            kernel.shared_1[(threadIdx.x_2 + 2254)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2254), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 238), 288), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
            if @tir.likely((threadIdx.x_2 < 1), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 2303)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2303), 288)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 287), 288), 3)*3)) + (threadIdx.x_2 + 2))]
            }
            for (rx.outer.inner: int32, 0, 3) {
              for (ff.outer.inner: int32, 0, 2) {
                let cse_var_7: int32 = (ff.outer.inner*2)
                let cse_var_6: int32 = ((ff.outer.inner*576) + rx.outer.inner)
                let cse_var_5: int32 = (cse_var_7 + 5)
                let cse_var_4: int32 = (cse_var_7 + 4)
                let cse_var_3: int32 = (cse_var_7 + 1)
                 {
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[(((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7))]*kernel.shared_1[cse_var_6]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[(((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_6 + 1152)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[(((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_6 + 288)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[(((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_6 + 1440)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(cse_var_6 + 3)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(cse_var_6 + 1155)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(cse_var_6 + 291)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(cse_var_6 + 1443)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(cse_var_6 + 6)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(cse_var_6 + 1158)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(cse_var_6 + 294)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(cse_var_6 + 1446)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(cse_var_6 + 9)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(cse_var_6 + 1161)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(cse_var_6 + 297)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(cse_var_6 + 1449)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(cse_var_6 + 12)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(cse_var_6 + 1164)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(cse_var_6 + 300)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(cse_var_6 + 1452)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(cse_var_6 + 15)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(cse_var_6 + 1167)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(cse_var_6 + 303)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(cse_var_6 + 1455)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(cse_var_6 + 18)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(cse_var_6 + 1170)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(cse_var_6 + 306)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(cse_var_6 + 1458)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(cse_var_6 + 21)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(cse_var_6 + 1173)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(cse_var_6 + 309)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(cse_var_6 + 1461)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(cse_var_6 + 24)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(cse_var_6 + 1176)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(cse_var_6 + 312)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(cse_var_6 + 1464)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(cse_var_6 + 27)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(cse_var_6 + 1179)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(cse_var_6 + 315)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(cse_var_6 + 1467)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_6 + 30)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_6 + 1182)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_6 + 318)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_6 + 1470)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(cse_var_6 + 33)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(cse_var_6 + 1185)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(cse_var_6 + 321)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(cse_var_6 + 1473)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(cse_var_6 + 36)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(cse_var_6 + 1188)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(cse_var_6 + 324)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(cse_var_6 + 1476)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(cse_var_6 + 39)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(cse_var_6 + 1191)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(cse_var_6 + 327)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(cse_var_6 + 1479)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(cse_var_6 + 42)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(cse_var_6 + 1194)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(cse_var_6 + 330)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(cse_var_6 + 1482)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(cse_var_6 + 45)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(cse_var_6 + 1197)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(cse_var_6 + 333)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(cse_var_6 + 1485)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(cse_var_6 + 48)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(cse_var_6 + 1200)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(cse_var_6 + 336)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(cse_var_6 + 1488)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(cse_var_6 + 51)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(cse_var_6 + 1203)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(cse_var_6 + 339)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(cse_var_6 + 1491)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(cse_var_6 + 54)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(cse_var_6 + 1206)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(cse_var_6 + 342)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(cse_var_6 + 1494)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(cse_var_6 + 57)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(cse_var_6 + 1209)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(cse_var_6 + 345)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(cse_var_6 + 1497)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_6 + 60)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_6 + 1212)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_6 + 348)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_6 + 1500)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_6 + 63)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_6 + 1215)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_6 + 351)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_6 + 1503)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(cse_var_6 + 66)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(cse_var_6 + 1218)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(cse_var_6 + 354)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 576)]*kernel.shared_1[(cse_var_6 + 1506)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(cse_var_6 + 69)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(cse_var_6 + 1221)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(cse_var_6 + 357)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 585)]*kernel.shared_1[(cse_var_6 + 1509)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(cse_var_6 + 72)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(cse_var_6 + 1224)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(cse_var_6 + 360)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 648)]*kernel.shared_1[(cse_var_6 + 1512)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(cse_var_6 + 75)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(cse_var_6 + 1227)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(cse_var_6 + 363)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 657)]*kernel.shared_1[(cse_var_6 + 1515)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(cse_var_6 + 78)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(cse_var_6 + 1230)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(cse_var_6 + 366)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 666)]*kernel.shared_1[(cse_var_6 + 1518)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(cse_var_6 + 81)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(cse_var_6 + 1233)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(cse_var_6 + 369)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 729)]*kernel.shared_1[(cse_var_6 + 1521)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(cse_var_6 + 84)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(cse_var_6 + 1236)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(cse_var_6 + 372)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 738)]*kernel.shared_1[(cse_var_6 + 1524)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(cse_var_6 + 87)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(cse_var_6 + 1239)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(cse_var_6 + 375)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 747)]*kernel.shared_1[(cse_var_6 + 1527)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(cse_var_6 + 90)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(cse_var_6 + 1242)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(cse_var_6 + 378)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 810)]*kernel.shared_1[(cse_var_6 + 1530)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_6 + 93)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_6 + 1245)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_6 + 381)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_6 + 1533)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(cse_var_6 + 96)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(cse_var_6 + 1248)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(cse_var_6 + 384)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 828)]*kernel.shared_1[(cse_var_6 + 1536)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(cse_var_6 + 99)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(cse_var_6 + 1251)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(cse_var_6 + 387)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 891)]*kernel.shared_1[(cse_var_6 + 1539)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(cse_var_6 + 102)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(cse_var_6 + 1254)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(cse_var_6 + 390)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 900)]*kernel.shared_1[(cse_var_6 + 1542)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(cse_var_6 + 105)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(cse_var_6 + 1257)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(cse_var_6 + 393)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 909)]*kernel.shared_1[(cse_var_6 + 1545)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(cse_var_6 + 108)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(cse_var_6 + 1260)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(cse_var_6 + 396)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 972)]*kernel.shared_1[(cse_var_6 + 1548)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(cse_var_6 + 111)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(cse_var_6 + 1263)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(cse_var_6 + 399)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 981)]*kernel.shared_1[(cse_var_6 + 1551)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(cse_var_6 + 114)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(cse_var_6 + 1266)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(cse_var_6 + 402)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 990)]*kernel.shared_1[(cse_var_6 + 1554)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1053)]*kernel.shared_1[(cse_var_6 + 117)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1053)]*kernel.shared_1[(cse_var_6 + 1269)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1053)]*kernel.shared_1[(cse_var_6 + 405)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1053)]*kernel.shared_1[(cse_var_6 + 1557)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1062)]*kernel.shared_1[(cse_var_6 + 120)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1062)]*kernel.shared_1[(cse_var_6 + 1272)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1062)]*kernel.shared_1[(cse_var_6 + 408)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1062)]*kernel.shared_1[(cse_var_6 + 1560)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1071)]*kernel.shared_1[(cse_var_6 + 123)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1071)]*kernel.shared_1[(cse_var_6 + 1275)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1071)]*kernel.shared_1[(cse_var_6 + 411)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1071)]*kernel.shared_1[(cse_var_6 + 1563)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1134)]*kernel.shared_1[(cse_var_6 + 126)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1134)]*kernel.shared_1[(cse_var_6 + 1278)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1134)]*kernel.shared_1[(cse_var_6 + 414)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1134)]*kernel.shared_1[(cse_var_6 + 1566)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1143)]*kernel.shared_1[(cse_var_6 + 129)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1143)]*kernel.shared_1[(cse_var_6 + 1281)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1143)]*kernel.shared_1[(cse_var_6 + 417)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1143)]*kernel.shared_1[(cse_var_6 + 1569)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1152)]*kernel.shared_1[(cse_var_6 + 132)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1152)]*kernel.shared_1[(cse_var_6 + 1284)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1152)]*kernel.shared_1[(cse_var_6 + 420)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1152)]*kernel.shared_1[(cse_var_6 + 1572)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1215)]*kernel.shared_1[(cse_var_6 + 135)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1215)]*kernel.shared_1[(cse_var_6 + 1287)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1215)]*kernel.shared_1[(cse_var_6 + 423)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1215)]*kernel.shared_1[(cse_var_6 + 1575)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1224)]*kernel.shared_1[(cse_var_6 + 138)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1224)]*kernel.shared_1[(cse_var_6 + 1290)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1224)]*kernel.shared_1[(cse_var_6 + 426)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1224)]*kernel.shared_1[(cse_var_6 + 1578)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1233)]*kernel.shared_1[(cse_var_6 + 141)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1233)]*kernel.shared_1[(cse_var_6 + 1293)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1233)]*kernel.shared_1[(cse_var_6 + 429)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1233)]*kernel.shared_1[(cse_var_6 + 1581)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1296)]*kernel.shared_1[(cse_var_6 + 144)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1296)]*kernel.shared_1[(cse_var_6 + 1296)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1296)]*kernel.shared_1[(cse_var_6 + 432)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1296)]*kernel.shared_1[(cse_var_6 + 1584)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1305)]*kernel.shared_1[(cse_var_6 + 147)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1305)]*kernel.shared_1[(cse_var_6 + 1299)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1305)]*kernel.shared_1[(cse_var_6 + 435)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1305)]*kernel.shared_1[(cse_var_6 + 1587)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1314)]*kernel.shared_1[(cse_var_6 + 150)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1314)]*kernel.shared_1[(cse_var_6 + 1302)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1314)]*kernel.shared_1[(cse_var_6 + 438)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1314)]*kernel.shared_1[(cse_var_6 + 1590)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1377)]*kernel.shared_1[(cse_var_6 + 153)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1377)]*kernel.shared_1[(cse_var_6 + 1305)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1377)]*kernel.shared_1[(cse_var_6 + 441)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1377)]*kernel.shared_1[(cse_var_6 + 1593)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1386)]*kernel.shared_1[(cse_var_6 + 156)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1386)]*kernel.shared_1[(cse_var_6 + 1308)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1386)]*kernel.shared_1[(cse_var_6 + 444)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1386)]*kernel.shared_1[(cse_var_6 + 1596)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1395)]*kernel.shared_1[(cse_var_6 + 159)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1395)]*kernel.shared_1[(cse_var_6 + 1311)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1395)]*kernel.shared_1[(cse_var_6 + 447)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1395)]*kernel.shared_1[(cse_var_6 + 1599)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1458)]*kernel.shared_1[(cse_var_6 + 162)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1458)]*kernel.shared_1[(cse_var_6 + 1314)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1458)]*kernel.shared_1[(cse_var_6 + 450)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1458)]*kernel.shared_1[(cse_var_6 + 1602)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1467)]*kernel.shared_1[(cse_var_6 + 165)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1467)]*kernel.shared_1[(cse_var_6 + 1317)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1467)]*kernel.shared_1[(cse_var_6 + 453)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1467)]*kernel.shared_1[(cse_var_6 + 1605)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1476)]*kernel.shared_1[(cse_var_6 + 168)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1476)]*kernel.shared_1[(cse_var_6 + 1320)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1476)]*kernel.shared_1[(cse_var_6 + 456)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1476)]*kernel.shared_1[(cse_var_6 + 1608)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1539)]*kernel.shared_1[(cse_var_6 + 171)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1539)]*kernel.shared_1[(cse_var_6 + 1323)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1539)]*kernel.shared_1[(cse_var_6 + 459)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1539)]*kernel.shared_1[(cse_var_6 + 1611)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1548)]*kernel.shared_1[(cse_var_6 + 174)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1548)]*kernel.shared_1[(cse_var_6 + 1326)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1548)]*kernel.shared_1[(cse_var_6 + 462)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1548)]*kernel.shared_1[(cse_var_6 + 1614)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1557)]*kernel.shared_1[(cse_var_6 + 177)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1557)]*kernel.shared_1[(cse_var_6 + 1329)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1557)]*kernel.shared_1[(cse_var_6 + 465)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1557)]*kernel.shared_1[(cse_var_6 + 1617)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1620)]*kernel.shared_1[(cse_var_6 + 180)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1620)]*kernel.shared_1[(cse_var_6 + 1332)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1620)]*kernel.shared_1[(cse_var_6 + 468)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1620)]*kernel.shared_1[(cse_var_6 + 1620)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1629)]*kernel.shared_1[(cse_var_6 + 183)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1629)]*kernel.shared_1[(cse_var_6 + 1335)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1629)]*kernel.shared_1[(cse_var_6 + 471)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1629)]*kernel.shared_1[(cse_var_6 + 1623)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1638)]*kernel.shared_1[(cse_var_6 + 186)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1638)]*kernel.shared_1[(cse_var_6 + 1338)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1638)]*kernel.shared_1[(cse_var_6 + 474)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1638)]*kernel.shared_1[(cse_var_6 + 1626)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1701)]*kernel.shared_1[(cse_var_6 + 189)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1701)]*kernel.shared_1[(cse_var_6 + 1341)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1701)]*kernel.shared_1[(cse_var_6 + 477)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1701)]*kernel.shared_1[(cse_var_6 + 1629)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1710)]*kernel.shared_1[(cse_var_6 + 192)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1710)]*kernel.shared_1[(cse_var_6 + 1344)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1710)]*kernel.shared_1[(cse_var_6 + 480)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1710)]*kernel.shared_1[(cse_var_6 + 1632)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1719)]*kernel.shared_1[(cse_var_6 + 195)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1719)]*kernel.shared_1[(cse_var_6 + 1347)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1719)]*kernel.shared_1[(cse_var_6 + 483)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1719)]*kernel.shared_1[(cse_var_6 + 1635)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1782)]*kernel.shared_1[(cse_var_6 + 198)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1782)]*kernel.shared_1[(cse_var_6 + 1350)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1782)]*kernel.shared_1[(cse_var_6 + 486)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1782)]*kernel.shared_1[(cse_var_6 + 1638)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1791)]*kernel.shared_1[(cse_var_6 + 201)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1791)]*kernel.shared_1[(cse_var_6 + 1353)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1791)]*kernel.shared_1[(cse_var_6 + 489)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1791)]*kernel.shared_1[(cse_var_6 + 1641)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1800)]*kernel.shared_1[(cse_var_6 + 204)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1800)]*kernel.shared_1[(cse_var_6 + 1356)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1800)]*kernel.shared_1[(cse_var_6 + 492)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1800)]*kernel.shared_1[(cse_var_6 + 1644)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1863)]*kernel.shared_1[(cse_var_6 + 207)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1863)]*kernel.shared_1[(cse_var_6 + 1359)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1863)]*kernel.shared_1[(cse_var_6 + 495)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1863)]*kernel.shared_1[(cse_var_6 + 1647)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1872)]*kernel.shared_1[(cse_var_6 + 210)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1872)]*kernel.shared_1[(cse_var_6 + 1362)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1872)]*kernel.shared_1[(cse_var_6 + 498)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1872)]*kernel.shared_1[(cse_var_6 + 1650)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1881)]*kernel.shared_1[(cse_var_6 + 213)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1881)]*kernel.shared_1[(cse_var_6 + 1365)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1881)]*kernel.shared_1[(cse_var_6 + 501)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1881)]*kernel.shared_1[(cse_var_6 + 1653)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1944)]*kernel.shared_1[(cse_var_6 + 216)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1944)]*kernel.shared_1[(cse_var_6 + 1368)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1944)]*kernel.shared_1[(cse_var_6 + 504)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1944)]*kernel.shared_1[(cse_var_6 + 1656)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1953)]*kernel.shared_1[(cse_var_6 + 219)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1953)]*kernel.shared_1[(cse_var_6 + 1371)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1953)]*kernel.shared_1[(cse_var_6 + 507)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1953)]*kernel.shared_1[(cse_var_6 + 1659)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1962)]*kernel.shared_1[(cse_var_6 + 222)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1962)]*kernel.shared_1[(cse_var_6 + 1374)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1962)]*kernel.shared_1[(cse_var_6 + 510)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 1962)]*kernel.shared_1[(cse_var_6 + 1662)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2025)]*kernel.shared_1[(cse_var_6 + 225)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2025)]*kernel.shared_1[(cse_var_6 + 1377)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2025)]*kernel.shared_1[(cse_var_6 + 513)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2025)]*kernel.shared_1[(cse_var_6 + 1665)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2034)]*kernel.shared_1[(cse_var_6 + 228)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2034)]*kernel.shared_1[(cse_var_6 + 1380)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2034)]*kernel.shared_1[(cse_var_6 + 516)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2034)]*kernel.shared_1[(cse_var_6 + 1668)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2043)]*kernel.shared_1[(cse_var_6 + 231)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2043)]*kernel.shared_1[(cse_var_6 + 1383)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2043)]*kernel.shared_1[(cse_var_6 + 519)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2043)]*kernel.shared_1[(cse_var_6 + 1671)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2106)]*kernel.shared_1[(cse_var_6 + 234)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2106)]*kernel.shared_1[(cse_var_6 + 1386)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2106)]*kernel.shared_1[(cse_var_6 + 522)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2106)]*kernel.shared_1[(cse_var_6 + 1674)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2115)]*kernel.shared_1[(cse_var_6 + 237)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2115)]*kernel.shared_1[(cse_var_6 + 1389)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2115)]*kernel.shared_1[(cse_var_6 + 525)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2115)]*kernel.shared_1[(cse_var_6 + 1677)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2124)]*kernel.shared_1[(cse_var_6 + 240)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2124)]*kernel.shared_1[(cse_var_6 + 1392)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2124)]*kernel.shared_1[(cse_var_6 + 528)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2124)]*kernel.shared_1[(cse_var_6 + 1680)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2187)]*kernel.shared_1[(cse_var_6 + 243)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2187)]*kernel.shared_1[(cse_var_6 + 1395)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2187)]*kernel.shared_1[(cse_var_6 + 531)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2187)]*kernel.shared_1[(cse_var_6 + 1683)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2196)]*kernel.shared_1[(cse_var_6 + 246)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2196)]*kernel.shared_1[(cse_var_6 + 1398)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2196)]*kernel.shared_1[(cse_var_6 + 534)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2196)]*kernel.shared_1[(cse_var_6 + 1686)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2205)]*kernel.shared_1[(cse_var_6 + 249)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2205)]*kernel.shared_1[(cse_var_6 + 1401)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2205)]*kernel.shared_1[(cse_var_6 + 537)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2205)]*kernel.shared_1[(cse_var_6 + 1689)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2268)]*kernel.shared_1[(cse_var_6 + 252)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2268)]*kernel.shared_1[(cse_var_6 + 1404)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2268)]*kernel.shared_1[(cse_var_6 + 540)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2268)]*kernel.shared_1[(cse_var_6 + 1692)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2277)]*kernel.shared_1[(cse_var_6 + 255)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2277)]*kernel.shared_1[(cse_var_6 + 1407)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2277)]*kernel.shared_1[(cse_var_6 + 543)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2277)]*kernel.shared_1[(cse_var_6 + 1695)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2286)]*kernel.shared_1[(cse_var_6 + 258)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2286)]*kernel.shared_1[(cse_var_6 + 1410)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2286)]*kernel.shared_1[(cse_var_6 + 546)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2286)]*kernel.shared_1[(cse_var_6 + 1698)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2349)]*kernel.shared_1[(cse_var_6 + 261)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2349)]*kernel.shared_1[(cse_var_6 + 1413)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2349)]*kernel.shared_1[(cse_var_6 + 549)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2349)]*kernel.shared_1[(cse_var_6 + 1701)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2358)]*kernel.shared_1[(cse_var_6 + 264)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2358)]*kernel.shared_1[(cse_var_6 + 1416)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2358)]*kernel.shared_1[(cse_var_6 + 552)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2358)]*kernel.shared_1[(cse_var_6 + 1704)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2367)]*kernel.shared_1[(cse_var_6 + 267)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2367)]*kernel.shared_1[(cse_var_6 + 1419)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2367)]*kernel.shared_1[(cse_var_6 + 555)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2367)]*kernel.shared_1[(cse_var_6 + 1707)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2430)]*kernel.shared_1[(cse_var_6 + 270)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2430)]*kernel.shared_1[(cse_var_6 + 1422)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2430)]*kernel.shared_1[(cse_var_6 + 558)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2430)]*kernel.shared_1[(cse_var_6 + 1710)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2439)]*kernel.shared_1[(cse_var_6 + 273)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2439)]*kernel.shared_1[(cse_var_6 + 1425)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2439)]*kernel.shared_1[(cse_var_6 + 561)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2439)]*kernel.shared_1[(cse_var_6 + 1713)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2448)]*kernel.shared_1[(cse_var_6 + 276)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2448)]*kernel.shared_1[(cse_var_6 + 1428)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2448)]*kernel.shared_1[(cse_var_6 + 564)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2448)]*kernel.shared_1[(cse_var_6 + 1716)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2511)]*kernel.shared_1[(cse_var_6 + 279)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2511)]*kernel.shared_1[(cse_var_6 + 1431)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2511)]*kernel.shared_1[(cse_var_6 + 567)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2511)]*kernel.shared_1[(cse_var_6 + 1719)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2520)]*kernel.shared_1[(cse_var_6 + 282)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2520)]*kernel.shared_1[(cse_var_6 + 1434)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2520)]*kernel.shared_1[(cse_var_6 + 570)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2520)]*kernel.shared_1[(cse_var_6 + 1722)]))
                  conv2d_nchw_1[cse_var_7] = (conv2d_nchw_1[cse_var_7] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2529)]*kernel.shared_1[(cse_var_6 + 285)]))
                  conv2d_nchw_1[cse_var_4] = (conv2d_nchw_1[cse_var_4] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2529)]*kernel.shared_1[(cse_var_6 + 1437)]))
                  conv2d_nchw_1[cse_var_3] = (conv2d_nchw_1[cse_var_3] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2529)]*kernel.shared_1[(cse_var_6 + 573)]))
                  conv2d_nchw_1[cse_var_5] = (conv2d_nchw_1[cse_var_5] + (pad_temp.shared_1[((((floordiv(threadIdx.x, 7)*9) + rx.outer.inner) + floormod(threadIdx.x, 7)) + 2529)]*kernel.shared_1[(cse_var_6 + 1725)]))
                }
              }
            }
          }
        }
        for (i1.inner: int32, 0, 4) {
          compute[(((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x)] = max((conv2d_nchw_1[i1.inner] + bias[((blockIdx.x*8) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x) + 196)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((blockIdx.x*8) + i1.inner) + 4)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 135-138

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 138-165

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.339 ms




.. GENERATED FROM PYTHON SOURCE LINES 166-171

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 173-176

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 176-183

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=32)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=4)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[8];
      __shared__ float pad_temp_shared[2592];
      __shared__ float kernel_shared[2304];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = ((((9 <= ((int)threadIdx.x)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 49)] = (((((9 <= ((((int)threadIdx.x) + 49) % 81)) && (((((int)threadIdx.x) + 49) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 49) / 81) * 49)) + ((((((int)threadIdx.x) + 49) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 98)] = (((1 <= ((((int)threadIdx.x) + 8) % 9)) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 98) / 81) * 49)) + (((((int)threadIdx.x) + 17) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 147)] = (((((9 <= ((((int)threadIdx.x) + 66) % 81)) && (((((int)threadIdx.x) + 66) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 147) / 81) * 49)) + ((((((int)threadIdx.x) + 66) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 196) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 245)] = ((((7 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 245) / 81) * 49)) + (((((int)threadIdx.x) + 2) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((9 <= ((((int)threadIdx.x) + 51) % 81)) && (((((int)threadIdx.x) + 51) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 294) / 81) * 49)) + ((((((int)threadIdx.x) + 51) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 343)] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 343) / 81) * 49)) + (((((int)threadIdx.x) + 19) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((9 <= ((((int)threadIdx.x) + 68) % 81)) && (((((int)threadIdx.x) + 68) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 392) / 81) * 49)) + ((((((int)threadIdx.x) + 68) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 441)] = (((((1 <= (((((int)threadIdx.x) / 9) + 4) % 9)) && (((((int)threadIdx.x) + 36) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 441) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 4) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 490)] = ((((5 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 490) / 81) * 49)) + (((((int)threadIdx.x) + 4) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 539)] = (((((9 <= ((((int)threadIdx.x) + 53) % 81)) && (((((int)threadIdx.x) + 53) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 539) / 81) * 49)) + ((((((int)threadIdx.x) + 53) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 588)] = (((1 <= ((((int)threadIdx.x) + 3) % 9)) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 588) / 81) * 49)) + (((((int)threadIdx.x) + 21) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 637)] = (((((9 <= ((((int)threadIdx.x) + 70) % 81)) && (((((int)threadIdx.x) + 70) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 637) / 81) * 49)) + ((((((int)threadIdx.x) + 70) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((9 <= ((((int)threadIdx.x) + 38) % 81)) && (((((int)threadIdx.x) + 38) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 686) / 81) * 49)) + ((((((int)threadIdx.x) + 38) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 735)] = ((((3 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 735) / 81) * 49)) + (((((int)threadIdx.x) + 6) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((9 <= ((((int)threadIdx.x) + 55) % 81)) && (((((int)threadIdx.x) + 55) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 784) / 81) * 49)) + ((((((int)threadIdx.x) + 55) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 833)] = (((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 833) / 81) * 49)) + (((((int)threadIdx.x) + 23) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 882)] = (((((1 <= (((((int)threadIdx.x) / 9) + 8) % 9)) && (((((int)threadIdx.x) + 72) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 882) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 8) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 931)] = (((((9 <= ((((int)threadIdx.x) + 40) % 81)) && (((((int)threadIdx.x) + 40) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 931) / 81) * 49)) + ((((((int)threadIdx.x) + 40) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 980)] = ((((1 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 980) / 81) * 49)) + (((((int)threadIdx.x) + 8) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((((9 <= ((((int)threadIdx.x) + 57) % 81)) && (((((int)threadIdx.x) + 57) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1029) / 81) * 49)) + ((((((int)threadIdx.x) + 57) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1078)] = ((((((int)threadIdx.x) < 47) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1078) / 81) * 49)) + (((((int)threadIdx.x) + 25) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((((9 <= ((((int)threadIdx.x) + 74) % 81)) && (((((int)threadIdx.x) + 74) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1127) / 81) * 49)) + ((((((int)threadIdx.x) + 74) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((9 <= ((((int)threadIdx.x) + 42) % 81)) && (((((int)threadIdx.x) + 42) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1176) / 81) * 49)) + ((((((int)threadIdx.x) + 42) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1225) / 81) * 49)) + (((((int)threadIdx.x) + 10) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1274)] = (((((9 <= ((((int)threadIdx.x) + 59) % 81)) && (((((int)threadIdx.x) + 59) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1274) / 81) * 49)) + ((((((int)threadIdx.x) + 59) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((((int)threadIdx.x) < 45) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1323) / 81) * 49)) + ((((int)threadIdx.x) / 9) * 7)) + (((int)threadIdx.x) % 9)) + 13)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((9 <= ((((int)threadIdx.x) + 76) % 81)) && (((((int)threadIdx.x) + 76) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1372) / 81) * 49)) + ((((((int)threadIdx.x) + 76) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1421)] = (((((9 <= ((((int)threadIdx.x) + 44) % 81)) && (((((int)threadIdx.x) + 44) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1421) / 81) * 49)) + ((((((int)threadIdx.x) + 44) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((1 <= ((((int)threadIdx.x) + 3) % 9)) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1470) / 81) * 49)) + (((((int)threadIdx.x) + 12) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1519)] = (((((9 <= ((((int)threadIdx.x) + 61) % 81)) && (((((int)threadIdx.x) + 61) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1519) / 81) * 49)) + ((((((int)threadIdx.x) + 61) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1568)] = ((((((int)threadIdx.x) < 43) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1568) / 81) * 49)) + (((((int)threadIdx.x) + 29) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1617)] = (((((9 <= ((((int)threadIdx.x) + 78) % 81)) && (((((int)threadIdx.x) + 78) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1617) / 81) * 49)) + ((((((int)threadIdx.x) + 78) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1666)] = (((((9 <= ((((int)threadIdx.x) + 46) % 81)) && (((((int)threadIdx.x) + 46) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1666) / 81) * 49)) + ((((((int)threadIdx.x) + 46) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1715)] = (((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1715) / 81) * 49)) + (((((int)threadIdx.x) + 14) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1764)] = (((((1 <= (((((int)threadIdx.x) / 9) + 7) % 9)) && (((((int)threadIdx.x) + 63) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1764) / 81) * 49)) + ((((((int)threadIdx.x) / 9) + 7) % 9) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1813)] = ((((((int)threadIdx.x) < 41) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1813) / 81) * 49)) + (((((int)threadIdx.x) + 31) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1862)] = (((((9 <= ((((int)threadIdx.x) + 80) % 81)) && (((((int)threadIdx.x) + 80) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1862) / 81) * 49)) + ((((((int)threadIdx.x) + 80) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1911)] = (((((9 <= ((((int)threadIdx.x) + 48) % 81)) && (((((int)threadIdx.x) + 48) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1911) / 81) * 49)) + ((((((int)threadIdx.x) + 48) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((1 <= ((((int)threadIdx.x) + 7) % 9)) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1960) / 81) * 49)) + (((((int)threadIdx.x) + 16) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2009)] = (((((9 <= ((((int)threadIdx.x) + 65) % 81)) && (((((int)threadIdx.x) + 65) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2009) / 81) * 49)) + ((((((int)threadIdx.x) + 65) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2058)] = (((((9 <= ((((int)threadIdx.x) + 33) % 81)) && (((((int)threadIdx.x) + 33) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2058) / 81) * 49)) + ((((((int)threadIdx.x) + 33) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2107)] = ((((8 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2107) / 81) * 49)) + (((((int)threadIdx.x) + 1) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2156)] = (((((9 <= ((((int)threadIdx.x) + 50) % 81)) && (((((int)threadIdx.x) + 50) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2156) / 81) * 49)) + ((((((int)threadIdx.x) + 50) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2205)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2205) / 81) * 49)) + ((((int)threadIdx.x) / 9) * 7)) + (((int)threadIdx.x) % 9)) + 6)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2254)] = (((((9 <= ((((int)threadIdx.x) + 67) % 81)) && (((((int)threadIdx.x) + 67) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2254) / 81) * 49)) + ((((((int)threadIdx.x) + 67) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2303)] = (((((9 <= ((((int)threadIdx.x) + 35) % 81)) && (((((int)threadIdx.x) + 35) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2303) / 81) * 49)) + ((((((int)threadIdx.x) + 35) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2352)] = ((((6 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2352) / 81) * 49)) + (((((int)threadIdx.x) + 3) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2401)] = (((((9 <= ((((int)threadIdx.x) + 52) % 81)) && (((((int)threadIdx.x) + 52) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2401) / 81) * 49)) + ((((((int)threadIdx.x) + 52) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2450)] = (((1 <= ((((int)threadIdx.x) + 2) % 9)) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2450) / 81) * 49)) + (((((int)threadIdx.x) + 20) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 2499)] = (((((9 <= ((((int)threadIdx.x) + 69) % 81)) && (((((int)threadIdx.x) + 69) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2499) / 81) * 49)) + ((((((int)threadIdx.x) + 69) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 44) {
          pad_temp_shared[(((int)threadIdx.x) + 2548)] = ((((((int)threadIdx.x) < 35) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 2548) / 81) * 49)) + (((((int)threadIdx.x) + 37) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[(((((int)blockIdx.x) * 36864) + (rc_outer_outer * 288)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 49)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 49) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 98)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 98) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 147)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 147)];
        kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 196) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 245)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 245) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 245) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 294)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 294) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 6)];
        kernel_shared[(((int)threadIdx.x) + 343)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 343) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 55) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 392) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 104) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 441)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 441) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 153)];
        kernel_shared[(((int)threadIdx.x) + 490)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 490) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 202) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 539)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 539) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 251) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 588)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 588) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 12)];
        kernel_shared[(((int)threadIdx.x) + 637)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 637) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 61) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 686)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 686) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 110) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 735)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 735) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 159)];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 784) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 208) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 833)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 833) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 257) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 882)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 882) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 18)];
        kernel_shared[(((int)threadIdx.x) + 931)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 931) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 67) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 980)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 980) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 116) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1029)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1029) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 165)];
        kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1078) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 214) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1127)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1127) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 263) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1176) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 1225)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1225) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 73) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1274) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 122) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1323)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1323) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 171)];
        kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1372) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 220) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1421)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1421) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 269) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1470) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 30)];
        kernel_shared[(((int)threadIdx.x) + 1519)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1519) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 79) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1568) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 128) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1617)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1617) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 177)];
        kernel_shared[(((int)threadIdx.x) + 1666)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1666) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 226) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1715)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1715) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 275) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1764)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1764) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 36)];
        kernel_shared[(((int)threadIdx.x) + 1813)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1813) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 85) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1862)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1862) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 134) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 1911)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1911) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 183)];
        kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1960) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 232) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2009)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2009) / 288) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 281) % 288) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2058)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2058) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 42)];
        kernel_shared[(((int)threadIdx.x) + 2107)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2107) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 91) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2156)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2156) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 140) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 2205)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2205) / 288) * 4608)) + (rc_outer_outer * 288)) + ((int)threadIdx.x)) + 189)];
        kernel_shared[(((int)threadIdx.x) + 2254)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2254) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 238) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        if (((int)threadIdx.x) < 1) {
          kernel_shared[(((int)threadIdx.x) + 2303)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2303) / 288) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 287) / 3) * 3)) + ((int)threadIdx.x)) + 2)];
        }
        __syncthreads();
        for (int rx_outer_inner = 0; rx_outer_inner < 3; ++rx_outer_inner) {
          for (int ff_outer_inner = 0; ff_outer_inner < 2; ++ff_outer_inner) {
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7))] * kernel_shared[((ff_outer_inner * 576) + rx_outer_inner)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7))] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1152)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7))] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 288)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7))] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1440)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 3)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1155)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 291)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1443)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 6)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1158)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 294)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1446)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 9)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1161)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 297)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1449)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 12)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1164)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 300)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1452)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 15)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1167)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 303)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1455)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 18)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1170)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 306)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1458)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 21)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1173)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 309)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1461)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 24)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1176)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 312)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1464)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 27)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1179)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 315)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1467)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 30)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1182)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 318)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1470)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 33)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1185)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 321)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1473)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 36)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1188)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 324)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1476)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 39)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1191)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 327)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1479)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 42)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1194)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 330)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1482)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 45)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1197)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 333)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1485)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 48)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1200)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 336)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1488)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 51)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1203)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 339)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1491)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 54)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1206)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 342)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1494)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 57)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1209)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 345)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1497)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 60)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1212)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 348)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1500)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 63)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1215)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 351)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1503)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 66)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1218)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 354)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 576)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1506)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 69)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1221)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 357)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 585)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1509)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 72)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1224)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 360)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 648)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1512)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 75)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1227)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 363)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 657)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1515)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 78)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1230)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 366)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 666)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1518)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 81)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1233)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 369)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 729)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1521)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 84)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1236)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 372)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 738)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1524)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 87)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1239)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 375)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 747)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1527)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 90)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1242)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 378)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 810)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1530)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 93)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1245)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 381)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1533)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 96)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1248)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 384)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 828)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1536)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 99)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1251)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 387)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 891)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1539)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 102)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1254)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 390)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 900)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1542)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 105)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1257)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 393)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 909)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1545)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 108)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1260)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 396)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 972)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1548)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 111)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1263)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 399)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 981)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1551)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 114)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1266)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 402)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 990)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1554)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 117)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1269)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 405)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1053)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1557)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 120)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1272)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 408)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1062)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1560)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 123)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1275)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 411)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1563)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 126)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1278)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 414)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1566)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 129)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1281)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 417)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1143)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1569)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 132)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1284)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 420)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1152)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1572)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 135)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1287)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 423)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1215)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1575)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 138)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1290)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 426)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1224)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1578)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 141)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1293)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 429)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1233)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1581)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1296)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 144)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1296)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1296)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1296)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 432)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1296)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1584)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1305)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 147)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1305)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1299)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1305)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 435)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1305)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1587)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1314)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 150)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1314)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1302)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1314)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 438)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1314)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1590)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1377)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 153)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1377)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1305)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1377)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 441)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1377)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1593)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1386)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 156)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1386)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1308)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1386)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 444)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1386)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1596)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1395)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 159)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1395)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1311)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1395)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 447)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1395)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1599)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1458)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 162)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1458)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1314)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1458)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 450)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1458)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1602)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1467)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 165)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1467)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1317)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1467)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 453)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1467)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1605)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1476)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 168)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1476)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1320)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1476)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 456)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1476)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1608)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1539)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 171)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1539)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1323)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1539)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 459)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1539)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1611)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1548)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 174)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1548)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1326)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1548)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 462)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1548)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1614)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1557)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 177)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1557)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1329)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1557)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 465)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1557)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1617)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1620)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 180)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1620)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1332)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1620)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 468)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1620)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1620)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1629)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 183)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1629)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1335)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1629)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 471)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1629)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1623)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1638)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 186)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1638)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1338)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1638)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 474)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1638)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1626)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1701)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 189)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1701)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1341)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1701)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 477)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1701)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1629)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1710)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 192)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1710)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1344)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1710)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 480)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1710)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1632)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1719)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 195)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1719)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1347)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1719)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 483)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1719)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1635)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1782)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 198)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1782)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1350)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1782)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 486)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1782)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1638)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1791)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 201)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1791)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1353)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1791)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 489)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1791)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1641)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1800)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 204)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1800)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1356)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1800)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 492)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1800)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1644)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1863)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 207)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1863)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1359)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1863)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 495)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1863)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1647)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1872)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 210)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1872)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1362)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1872)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 498)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1872)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1650)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1881)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 213)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1881)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1365)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1881)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 501)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1881)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1653)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1944)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 216)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1944)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1368)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1944)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 504)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1944)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1656)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1953)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 219)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1953)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1371)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1953)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 507)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1953)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1659)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1962)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 222)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1962)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1374)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1962)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 510)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 1962)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1662)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2025)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 225)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2025)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1377)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2025)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 513)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2025)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1665)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2034)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 228)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2034)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1380)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2034)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 516)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2034)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1668)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2043)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 231)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2043)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1383)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2043)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 519)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2043)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1671)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2106)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 234)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2106)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1386)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2106)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 522)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2106)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1674)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2115)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 237)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2115)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1389)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2115)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 525)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2115)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1677)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2124)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 240)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2124)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1392)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2124)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 528)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2124)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1680)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2187)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 243)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2187)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1395)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2187)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 531)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2187)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1683)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2196)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 246)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2196)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1398)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2196)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 534)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2196)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1686)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2205)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 249)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2205)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1401)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2205)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 537)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2205)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1689)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2268)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 252)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2268)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1404)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2268)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 540)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2268)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1692)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2277)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 255)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2277)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1407)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2277)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 543)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2277)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1695)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2286)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 258)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2286)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1410)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2286)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 546)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2286)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1698)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2349)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 261)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2349)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1413)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2349)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 549)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2349)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1701)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2358)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 264)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2358)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1416)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2358)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 552)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2358)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1704)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2367)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 267)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2367)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1419)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2367)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 555)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2367)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1707)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2430)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 270)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2430)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1422)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2430)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 558)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2430)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1710)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2439)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 273)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2439)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1425)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2439)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 561)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2439)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1713)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2448)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 276)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2448)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1428)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2448)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 564)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2448)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1716)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2511)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 279)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2511)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1431)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2511)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 567)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2511)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1719)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2520)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 282)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2520)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1434)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2520)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 570)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2520)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1722)]));
            conv2d_nchw[(ff_outer_inner * 2)] = (conv2d_nchw[(ff_outer_inner * 2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2529)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 285)]));
            conv2d_nchw[((ff_outer_inner * 2) + 4)] = (conv2d_nchw[((ff_outer_inner * 2) + 4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2529)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1437)]));
            conv2d_nchw[((ff_outer_inner * 2) + 1)] = (conv2d_nchw[((ff_outer_inner * 2) + 1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2529)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 573)]));
            conv2d_nchw[((ff_outer_inner * 2) + 5)] = (conv2d_nchw[((ff_outer_inner * 2) + 5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 7) * 9) + rx_outer_inner) + (((int)threadIdx.x) % 7)) + 2529)] * kernel_shared[(((ff_outer_inner * 576) + rx_outer_inner) + 1725)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 4; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 392) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 8) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 392) + (i1_inner * 49)) + ((int)threadIdx.x)) + 196)] = max((conv2d_nchw[(i1_inner + 4)] + bias[(((((int)blockIdx.x) * 8) + i1_inner) + 4)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 184-188

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 188-210

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  42.181 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
