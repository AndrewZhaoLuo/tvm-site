.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 16;
      allocate(conv2d_nchw: Pointer(local float32), float32, [16]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1008]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1536]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [64], [], scope="local", align=32)[0] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[15] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          for (rx.outer.outer: int32, 0, 3) {
            let cse_var_2: int32 = (rc.outer.outer*784)
            let cse_var_1: int32 = (rc.outer.outer*144)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1008], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((7 <= floormod(threadIdx.x_1, 63)) && (floormod(threadIdx.x_1, 63) < 56)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 63)*49)) + rx.outer.outer) + floormod(threadIdx.x_1, 63)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 14), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 1), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 1), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 28), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 42), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 2), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 2), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 56), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 70), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 84), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 98), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 112), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              pad_temp.shared_1[(threadIdx.x_1 + 882)] = @tir.if_then_else(((((7 <= floormod(threadIdx.x_1, 63)) && (floormod(threadIdx.x_1, 63) < 56)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(floordiv(threadIdx.x_1, 7), 9)*49)) + rx.outer.outer) + floormod(threadIdx.x_1, 63)) + 678)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              if @tir.likely((threadIdx.x_1 < 28), dtype=bool) {
                pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 140), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1: Buffer(kernel.shared, float32, [1536], [], scope="shared")[threadIdx.x_2] = kernel[(((((blockIdx.x*147456) + (floordiv(threadIdx.x_2, 48)*4608)) + cse_var_1) + (floormod(threadIdx.x_2, 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 49), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 2), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 98), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 4), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 294)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 147), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 6), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 196), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 8), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 490)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 245), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 10), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 588)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 294), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 12), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 686)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 343), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 14), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 392), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 16), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 882)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 441), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 18), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 980)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 490), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 20), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 1078)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 539), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 22), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 588), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 24), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 1274)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 637), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 26), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              kernel.shared_1[(threadIdx.x_2 + 1372)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 686), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 28), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 98;
              if @tir.likely((threadIdx.x_2 < 66), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 1470)] = kernel[(((((blockIdx.x*147456) + (floordiv((floordiv(threadIdx.x_2, 2) + 735), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 30), 48)*3)) + rx.outer.outer)]
              }
              for (rc.outer.inner: int32, 0, 2) {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 768)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 48)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 816)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 96)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 864)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 144)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 912)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 960)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 240)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1008)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 288)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1056)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 336)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 49))]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1104)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 769)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 49)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 817)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 97)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 865)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 145)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 913)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 961)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 241)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1009)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 289)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1057)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 337)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1105)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 770)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 50)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 818)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 98)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 866)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 146)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 914)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 962)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 242)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1010)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 290)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1058)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 338)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1106)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 771)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 51)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 819)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 99)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 867)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 147)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 915)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 963)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 243)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1011)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 291)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1059)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 339)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1107)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 772)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 52)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 820)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 100)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 868)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 148)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 916)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 964)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 244)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1012)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 292)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1060)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 340)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1108)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 773)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 53)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 821)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 101)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 869)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 149)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 917)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 965)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 245)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1013)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 293)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1061)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 341)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1109)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 774)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 54)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 822)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 102)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 870)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 150)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 918)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 966)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 246)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1014)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 294)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1062)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 342)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1110)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 775)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 55)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 823)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 103)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 871)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 151)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 919)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 967)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 247)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1015)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 295)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1063)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 343)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1111)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 776)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 56)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 824)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 104)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 872)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 152)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 920)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 968)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 248)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1016)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 296)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1064)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 344)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1112)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 777)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 57)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 825)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 105)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 873)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 153)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 921)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 969)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 249)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1017)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 297)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1065)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 345)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1113)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 778)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 58)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 826)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 106)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 874)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 154)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 922)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 970)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 250)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1018)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 298)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1066)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 346)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1114)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 779)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 59)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 827)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 107)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 875)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 155)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 923)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 971)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 251)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1019)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 299)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1067)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 347)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1115)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 780)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 60)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 828)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 108)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 876)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 156)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 924)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 972)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 252)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1020)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 300)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1068)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 348)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1116)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 781)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 61)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 829)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 109)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 877)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 157)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 925)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 973)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 253)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1021)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 301)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1069)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 349)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 259)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1117)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 782)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 62)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 830)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 110)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 878)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 158)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 926)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 974)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 254)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1022)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 302)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1070)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 350)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1118)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 783)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 63)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 831)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 111)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 879)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 159)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 927)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 975)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 255)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1023)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 303)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1071)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 351)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1119)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 784)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 64)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 832)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 112)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 880)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 160)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 928)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 976)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 256)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1024)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 304)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1072)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 352)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 322)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1120)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 785)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 65)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 833)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 113)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 881)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 161)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 929)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 977)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 257)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1025)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 305)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1073)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 353)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 329)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1121)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 786)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 66)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 834)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 114)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 882)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 162)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 930)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 978)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 258)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1026)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 306)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1074)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 354)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1122)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 787)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 67)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 835)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 115)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 883)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 163)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 931)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 979)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 259)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1027)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 307)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1075)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 355)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 385)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1123)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 788)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 68)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 836)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 116)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 884)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 164)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 932)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 980)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 260)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1028)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 308)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1076)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 356)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 392)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1124)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 789)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 69)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 837)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 117)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 885)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 165)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 933)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 981)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 261)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1029)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 309)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1077)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 357)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1125)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 790)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 70)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 838)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 118)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 886)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 166)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 934)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 982)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 262)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1030)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 310)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1078)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 358)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 448)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1126)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 791)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 71)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 839)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 119)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 887)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 167)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 935)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 983)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 263)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1031)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 311)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1079)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 359)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 49)) + 455)]*kernel.shared_1[(((floordiv(threadIdx.x, 49)*384) + (rc.outer.inner*24)) + 1127)]))
              }
            }
          }
        }
        for (i1.inner: int32, 0, 8) {
          compute[((((blockIdx.x*1568) + (floordiv(threadIdx.x, 49)*392)) + (i1.inner*49)) + floormod(threadIdx.x, 49))] = max((conv2d_nchw_1[i1.inner] + bias[(((blockIdx.x*32) + (floordiv(threadIdx.x, 49)*8)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*1568) + (floordiv(threadIdx.x, 49)*392)) + (i1.inner*49)) + floormod(threadIdx.x, 49)) + 784)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[((((blockIdx.x*32) + (floordiv(threadIdx.x, 49)*8)) + i1.inner) + 16)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.416 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=8)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=2)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=8)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=2)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=98)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(98) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[16];
      __shared__ float pad_temp_shared[1008];
      __shared__ float kernel_shared[1536];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((7 <= (((int)threadIdx.x) % 63)) && ((((int)threadIdx.x) % 63) < 56)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 63) * 49)) + rx_outer_outer) + (((int)threadIdx.x) % 63)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 98) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((1 <= (((((int)threadIdx.x) / 7) + 1) % 9)) && ((((((int)threadIdx.x) / 7) + 1) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 196) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 294) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((1 <= (((((int)threadIdx.x) / 7) + 2) % 9)) && ((((((int)threadIdx.x) / 7) + 2) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 392) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 490) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 588) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 686) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = (((((7 <= (((int)threadIdx.x) % 63)) && ((((int)threadIdx.x) % 63) < 56)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 63) * 49)) + rx_outer_outer) + (((int)threadIdx.x) % 63)) + 678)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 28) {
            pad_temp_shared[(((int)threadIdx.x) + 980)] = ((((((int)threadIdx.x) < 21) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 980) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          }
          kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) * 147456) + ((((int)threadIdx.x) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 98)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 98) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 2) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 196)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 196) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 4) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 294)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 294) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 6) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 392) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 8) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 490)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 490) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 10) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 588)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 588) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 12) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 686)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 686) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 14) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 784) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 882)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 882) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 18) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 980)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 980) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 20) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1078) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 22) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1176) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 24) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1274) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 26) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1372) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 28) % 48) * 3)) + rx_outer_outer)];
          if (((int)threadIdx.x) < 66) {
            kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[(((((((int)blockIdx.x) * 147456) + (((((int)threadIdx.x) + 1470) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 30) % 48) * 3)) + rx_outer_outer)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[(((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 768)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 48)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 816)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 96)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 864)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 144)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 912)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 960)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 240)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1008)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 288)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1056)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 336)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 49))] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1104)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 769)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 49)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 817)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 97)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 865)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 145)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 913)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 961)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 241)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1009)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 289)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1057)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 337)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1105)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 770)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 50)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 818)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 98)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 866)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 146)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 914)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 962)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 242)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1010)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 290)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1058)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 338)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1106)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 771)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 51)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 819)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 99)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 867)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 147)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 915)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 963)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 243)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1011)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 291)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1059)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 339)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1107)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 772)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 52)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 820)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 100)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 868)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 148)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 916)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 964)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 244)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1012)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 292)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1060)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 340)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1108)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 773)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 53)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 821)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 101)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 869)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 149)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 917)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 965)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 245)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1013)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 293)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1061)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 341)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1109)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 774)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 54)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 822)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 102)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 870)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 150)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 918)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 966)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 246)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1014)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 294)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1062)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 342)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1110)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 775)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 55)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 823)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 103)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 871)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 151)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 919)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 967)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 247)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1015)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 295)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1063)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 343)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1111)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 776)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 56)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 824)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 104)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 872)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 152)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 920)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 968)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 248)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1016)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 296)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1064)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 344)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1112)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 777)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 57)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 825)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 105)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 873)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 153)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 921)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 969)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 249)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1017)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 297)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1065)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 345)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1113)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 778)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 58)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 826)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 106)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 874)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 154)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 922)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 970)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 250)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1018)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 298)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1066)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 346)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1114)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 779)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 59)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 827)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 107)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 875)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 155)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 923)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 971)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 251)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1019)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 299)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1067)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 347)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1115)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 780)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 60)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 828)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 108)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 876)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 156)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 924)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 972)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 252)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1020)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 300)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1068)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 348)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1116)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 781)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 61)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 829)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 109)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 877)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 157)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 925)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 973)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 253)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1021)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 301)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1069)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 349)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 259)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1117)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 782)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 62)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 830)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 110)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 878)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 158)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 926)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 974)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 254)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1022)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 302)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1070)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 350)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 266)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1118)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 783)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 63)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 831)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 111)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 879)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 159)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 927)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 975)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 255)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1023)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 303)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1071)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 351)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1119)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 784)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 64)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 832)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 112)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 880)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 160)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 928)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 976)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 256)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1024)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 304)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1072)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 352)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 322)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1120)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 785)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 65)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 833)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 113)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 881)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 161)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 929)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 977)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 257)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1025)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 305)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1073)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 353)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 329)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1121)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 786)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 66)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 834)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 114)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 882)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 162)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 930)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 978)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 258)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1026)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 306)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1074)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 354)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1122)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 787)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 67)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 835)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 115)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 883)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 163)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 931)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 979)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 259)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1027)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 307)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1075)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 355)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 385)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1123)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 788)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 68)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 836)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 116)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 884)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 164)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 932)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 980)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 260)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1028)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 308)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1076)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 356)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 392)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1124)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 789)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 69)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 837)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 117)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 885)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 165)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 933)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 981)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 261)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1029)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 309)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1077)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 357)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1125)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 790)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 70)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 838)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 118)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 886)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 166)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 934)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 982)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 262)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1030)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 310)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1078)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 358)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 448)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1126)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 791)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 71)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 839)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 119)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 887)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 167)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 935)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 983)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 263)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1031)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 311)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1079)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 359)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 49)) + 455)] * kernel_shared[((((((int)threadIdx.x) / 49) * 384) + (rc_outer_inner * 24)) + 1127)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 49) * 392)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 32) + ((((int)threadIdx.x) / 49) * 8)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 49) * 392)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49)) + 784)] = max((conv2d_nchw[(i1_inner + 8)] + bias[((((((int)blockIdx.x) * 32) + ((((int)threadIdx.x) / 49) * 8)) + i1_inner) + 16)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!
    .T




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  38.237 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
