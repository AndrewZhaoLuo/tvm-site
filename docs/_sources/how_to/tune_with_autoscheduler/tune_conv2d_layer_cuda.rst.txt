.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 56;
      allocate(conv2d_nchw: Pointer(local float32), float32, [7]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [288]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [6144]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [1], [], scope="local", align=4)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        for (rc.outer.outer: int32, 0, 16) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*1568)
            let cse_var_3: int32 = (ry.outer.outer*7)
            let cse_var_2: int32 = (rc.outer.outer*288)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [288], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((1 <= (ry.outer.outer + floormod(blockIdx.x, 7))) && ((ry.outer.outer + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[(((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*49)) + cse_var_3) + (floormod(blockIdx.x, 7)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              pad_temp.shared_1[(threadIdx.x_1 + 64)] = @tir.if_then_else(((((1 <= (ry.outer.outer + floormod(blockIdx.x, 7))) && ((ry.outer.outer + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[(((((cse_var_4 + (floordiv((threadIdx.x_1 + 64), 9)*49)) + cse_var_3) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              pad_temp.shared_1[(threadIdx.x_1 + 128)] = @tir.if_then_else(((((1 <= (ry.outer.outer + floormod(blockIdx.x, 7))) && ((ry.outer.outer + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[(((((cse_var_4 + (floordiv((threadIdx.x_1 + 128), 9)*49)) + cse_var_3) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              pad_temp.shared_1[(threadIdx.x_1 + 192)] = @tir.if_then_else(((((1 <= (ry.outer.outer + floormod(blockIdx.x, 7))) && ((ry.outer.outer + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[(((((cse_var_4 + (floordiv((threadIdx.x_1 + 192), 9)*49)) + cse_var_3) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              if @tir.likely((threadIdx.x_1 < 32), dtype=bool) {
                pad_temp.shared_1[(threadIdx.x_1 + 256)] = @tir.if_then_else(((((1 <= (ry.outer.outer + floormod(blockIdx.x, 7))) && ((ry.outer.outer + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[(((((cse_var_4 + (floordiv((threadIdx.x_1 + 256), 9)*49)) + cse_var_3) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1: Buffer(kernel.shared, float32, [6144], [], scope="shared")[threadIdx.x_2] = kernel[(((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 64)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 2), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 64), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 128)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 4), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 128), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 192)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 9216)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 256)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 8), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 256), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 320)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 10), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 320), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 384)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 18432)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 14), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 448), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 512)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 16), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 512), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 576)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 27648)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 640)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 20), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 640), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 704)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 22), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 704), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 768)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 36864)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 832)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 26), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 832), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 28), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 896), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 960)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 46080)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1024)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 32), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1024), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1088)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 34), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1088), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1152)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 55296)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1216)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 38), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1216), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1280)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 40), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1280), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 64512)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1408)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 44), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1408), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1472)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 46), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1472), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1536)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 73728)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1600)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 50), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1600), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1664)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 52), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1664), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1728)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 82944)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 56), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1792), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1856)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 58), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1856), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1920)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 92160)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 1984)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 62), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 1984), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2048)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 64), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2048), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2112)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 101376)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2176)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 68), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2176), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 70), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2240), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2304)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 110592)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2368)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 74), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2368), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2432)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 76), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2432), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2496)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 119808)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2560)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 80), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2560), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2624)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 82), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2624), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 129024)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2752)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 86), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2752), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2816)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 88), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2816), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2880)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 138240)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 2944)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 92), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 2944), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3008)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 94), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3008), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3072)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 147456)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3136)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 98), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3136), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3200)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 100), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3200), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3264)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 156672)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3328)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 104), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3328), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3392)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 106), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3392), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3456)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 165888)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3520)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 110), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3520), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3584)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 112), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3584), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3648)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 175104)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3712)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 116), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3712), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3776)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 118), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3776), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3840)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 184320)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3904)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 122), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3904), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 3968)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 124), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 3968), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4032)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 193536)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4096)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 128), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4096), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4160)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 130), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4160), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4224)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 202752)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4288)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 134), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4288), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4352)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 136), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4352), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4416)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 211968)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4480)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 140), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4480), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4544)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 142), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4544), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4608)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 221184)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4672)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 146), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4672), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4736)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 148), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4736), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4800)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 230400)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4864)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 152), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4864), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4928)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 154), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 4928), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 4992)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 239616)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5056)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 158), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5056), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5120)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 160), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5120), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5184)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 248832)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5248)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 164), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5248), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5312)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 166), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5312), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5376)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 258048)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5440)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 170), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5440), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5504)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 172), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5504), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5568)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 267264)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5632)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 176), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5632), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5696)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 178), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5696), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5760)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 276480)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5824)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 182), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5824), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5888)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 184), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 5888), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 5952)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3)) + 285696)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 6016)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 188), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 6016), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 64;
              kernel.shared_1[(threadIdx.x_2 + 6080)] = kernel[((((((floordiv(blockIdx.x, 7)*294912) + (floordiv((floordiv(threadIdx.x_2, 32) + 190), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 6080), 96), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[0]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[1]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[2]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[3]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[4]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[5]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[6]*kernel.shared_1[(threadIdx.x*96)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*96) + 3)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*96) + 6)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[27]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*96) + 9)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[1]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*96) + 1)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*96) + 4)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*96) + 7)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*96) + 10)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*96) + 2)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*96) + 5)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[26]*kernel.shared_1[((threadIdx.x*96) + 8)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*96) + 11)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*96) + 12)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*96) + 15)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[54]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*96) + 18)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*96) + 21)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*96) + 13)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*96) + 16)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*96) + 19)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*96) + 22)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*96) + 14)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[53]*kernel.shared_1[((threadIdx.x*96) + 17)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*96) + 20)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*96) + 23)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*96) + 24)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[81]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*96) + 27)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*96) + 30)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*96) + 33)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*96) + 25)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*96) + 28)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*96) + 31)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*96) + 34)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[80]*kernel.shared_1[((threadIdx.x*96) + 26)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*96) + 29)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*96) + 32)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[107]*kernel.shared_1[((threadIdx.x*96) + 35)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[108]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[109]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*96) + 36)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[117]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[118]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*96) + 39)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[126]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[127]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*96) + 42)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[135]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[136]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*96) + 45)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[109]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[115]*kernel.shared_1[((threadIdx.x*96) + 37)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[118]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[124]*kernel.shared_1[((threadIdx.x*96) + 40)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[127]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[133]*kernel.shared_1[((threadIdx.x*96) + 43)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[136]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[142]*kernel.shared_1[((threadIdx.x*96) + 46)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[115]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[116]*kernel.shared_1[((threadIdx.x*96) + 38)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[124]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[125]*kernel.shared_1[((threadIdx.x*96) + 41)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[133]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[134]*kernel.shared_1[((threadIdx.x*96) + 44)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[142]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[143]*kernel.shared_1[((threadIdx.x*96) + 47)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[144]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[145]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*96) + 48)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[153]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[154]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*96) + 51)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[162]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[163]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*96) + 54)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[171]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[172]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*96) + 57)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[145]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[151]*kernel.shared_1[((threadIdx.x*96) + 49)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[154]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[160]*kernel.shared_1[((threadIdx.x*96) + 52)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[163]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[169]*kernel.shared_1[((threadIdx.x*96) + 55)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[172]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[178]*kernel.shared_1[((threadIdx.x*96) + 58)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[151]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[152]*kernel.shared_1[((threadIdx.x*96) + 50)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[160]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[161]*kernel.shared_1[((threadIdx.x*96) + 53)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[169]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[170]*kernel.shared_1[((threadIdx.x*96) + 56)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[178]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[179]*kernel.shared_1[((threadIdx.x*96) + 59)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[180]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[181]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*96) + 60)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[189]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[190]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*96) + 63)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[198]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[199]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*96) + 66)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[207]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[208]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*96) + 69)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[181]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[187]*kernel.shared_1[((threadIdx.x*96) + 61)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[190]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[196]*kernel.shared_1[((threadIdx.x*96) + 64)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[199]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[205]*kernel.shared_1[((threadIdx.x*96) + 67)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[208]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[214]*kernel.shared_1[((threadIdx.x*96) + 70)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[187]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[188]*kernel.shared_1[((threadIdx.x*96) + 62)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[196]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[197]*kernel.shared_1[((threadIdx.x*96) + 65)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[205]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[206]*kernel.shared_1[((threadIdx.x*96) + 68)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[214]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[215]*kernel.shared_1[((threadIdx.x*96) + 71)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[216]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[217]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[218]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[219]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[220]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[221]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[222]*kernel.shared_1[((threadIdx.x*96) + 72)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[225]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[226]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[227]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[228]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[229]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[230]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[231]*kernel.shared_1[((threadIdx.x*96) + 75)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[234]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[235]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[236]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[237]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[238]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[239]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[240]*kernel.shared_1[((threadIdx.x*96) + 78)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[243]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[244]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[245]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[246]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[247]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[248]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[249]*kernel.shared_1[((threadIdx.x*96) + 81)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[217]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[218]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[219]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[220]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[221]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[222]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[223]*kernel.shared_1[((threadIdx.x*96) + 73)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[226]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[227]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[228]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[229]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[230]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[231]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[232]*kernel.shared_1[((threadIdx.x*96) + 76)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[235]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[236]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[237]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[238]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[239]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[240]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[241]*kernel.shared_1[((threadIdx.x*96) + 79)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[244]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[245]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[246]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[247]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[248]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[249]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[250]*kernel.shared_1[((threadIdx.x*96) + 82)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[218]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[219]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[220]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[221]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[222]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[223]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[224]*kernel.shared_1[((threadIdx.x*96) + 74)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[227]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[228]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[229]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[230]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[231]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[232]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[233]*kernel.shared_1[((threadIdx.x*96) + 77)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[236]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[237]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[238]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[239]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[240]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[241]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[242]*kernel.shared_1[((threadIdx.x*96) + 80)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[245]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[246]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[247]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[248]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[249]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[250]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[251]*kernel.shared_1[((threadIdx.x*96) + 83)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[252]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[253]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[254]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[255]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[256]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[257]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[258]*kernel.shared_1[((threadIdx.x*96) + 84)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[261]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[262]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[263]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[264]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[265]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[266]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[267]*kernel.shared_1[((threadIdx.x*96) + 87)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[270]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[271]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[272]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[273]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[274]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[275]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[276]*kernel.shared_1[((threadIdx.x*96) + 90)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[279]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[280]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[281]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[282]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[283]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[284]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[285]*kernel.shared_1[((threadIdx.x*96) + 93)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[253]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[254]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[255]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[256]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[257]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[258]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[259]*kernel.shared_1[((threadIdx.x*96) + 85)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[262]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[263]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[264]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[265]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[266]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[267]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[268]*kernel.shared_1[((threadIdx.x*96) + 88)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[271]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[272]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[273]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[274]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[275]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[276]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[277]*kernel.shared_1[((threadIdx.x*96) + 91)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[280]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[281]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[282]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[283]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[284]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[285]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[286]*kernel.shared_1[((threadIdx.x*96) + 94)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[254]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[255]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[256]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[257]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[258]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[259]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[260]*kernel.shared_1[((threadIdx.x*96) + 86)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[263]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[264]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[265]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[266]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[267]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[268]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[269]*kernel.shared_1[((threadIdx.x*96) + 89)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[272]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[273]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[274]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[275]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[276]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[277]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[278]*kernel.shared_1[((threadIdx.x*96) + 92)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[281]*kernel.shared_1[((threadIdx.x*96) + 95)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[282]*kernel.shared_1[((threadIdx.x*96) + 95)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[283]*kernel.shared_1[((threadIdx.x*96) + 95)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[284]*kernel.shared_1[((threadIdx.x*96) + 95)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[285]*kernel.shared_1[((threadIdx.x*96) + 95)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[286]*kernel.shared_1[((threadIdx.x*96) + 95)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[287]*kernel.shared_1[((threadIdx.x*96) + 95)]))
            }
          }
        }
        compute[(((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7))] = max((conv2d_nchw_1[0] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
        compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7)) + 1)] = max((conv2d_nchw_1[1] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
        compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7)) + 2)] = max((conv2d_nchw_1[2] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
        compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7)) + 3)] = max((conv2d_nchw_1[3] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
        compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7)) + 4)] = max((conv2d_nchw_1[4] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
        compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7)) + 5)] = max((conv2d_nchw_1[5] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
        compute[((((floordiv(blockIdx.x, 7)*3136) + (threadIdx.x*49)) + (floormod(blockIdx.x, 7)*7)) + 6)] = max((conv2d_nchw_1[6] + bias[((floordiv(blockIdx.x, 7)*64) + threadIdx.x)]), 0f32)
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.360 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=64)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=7)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=8)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=64)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=7)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=64)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=64)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(64) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[7];
      __shared__ float pad_temp_shared[288];
      __shared__ float kernel_shared[6144];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (ry_outer_outer + (((int)blockIdx.x) % 7))) && ((ry_outer_outer + (((int)blockIdx.x) % 7)) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((((rc_outer_outer * 1568) + ((((int)threadIdx.x) / 9) * 49)) + (ry_outer_outer * 7)) + ((((int)blockIdx.x) % 7) * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 64)] = (((((1 <= (ry_outer_outer + (((int)blockIdx.x) % 7))) && ((ry_outer_outer + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 64) / 9) * 49)) + (ry_outer_outer * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 128)] = (((((1 <= (ry_outer_outer + (((int)blockIdx.x) % 7))) && ((ry_outer_outer + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 128) / 9) * 49)) + (ry_outer_outer * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 192)] = (((((1 <= (ry_outer_outer + (((int)blockIdx.x) % 7))) && ((ry_outer_outer + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 192) / 9) * 49)) + (ry_outer_outer * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 32) {
            pad_temp_shared[(((int)threadIdx.x) + 256)] = (((((1 <= (ry_outer_outer + (((int)blockIdx.x) % 7))) && ((ry_outer_outer + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 256) / 9) * 49)) + (ry_outer_outer * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          }
          kernel_shared[((int)threadIdx.x)] = kernel[((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 64)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 64) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 128)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 128) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 192)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 9216)];
          kernel_shared[(((int)threadIdx.x) + 256)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 256) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 320)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 320) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 384)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 18432)];
          kernel_shared[(((int)threadIdx.x) + 448)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 448) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 512)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 512) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 576)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 27648)];
          kernel_shared[(((int)threadIdx.x) + 640)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 640) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 704)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 704) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 768)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 36864)];
          kernel_shared[(((int)threadIdx.x) + 832)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 832) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 896)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 896) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 960)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 46080)];
          kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1024) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1088) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1152)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 55296)];
          kernel_shared[(((int)threadIdx.x) + 1216)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1216) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1280)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1280) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 64512)];
          kernel_shared[(((int)threadIdx.x) + 1408)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1408) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1472)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1472) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1536)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 73728)];
          kernel_shared[(((int)threadIdx.x) + 1600)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1600) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1664)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1664) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1728)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 82944)];
          kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1792) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1856)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1856) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1920)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 92160)];
          kernel_shared[(((int)threadIdx.x) + 1984)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 1984) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2048)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2048) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2112)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 101376)];
          kernel_shared[(((int)threadIdx.x) + 2176)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2176) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2240) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2304)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 110592)];
          kernel_shared[(((int)threadIdx.x) + 2368)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2368) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2432)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2432) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2496)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 119808)];
          kernel_shared[(((int)threadIdx.x) + 2560)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2560) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2624)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2624) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 129024)];
          kernel_shared[(((int)threadIdx.x) + 2752)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2752) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2816)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2816) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2880)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 138240)];
          kernel_shared[(((int)threadIdx.x) + 2944)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 2944) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3008)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3008) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3072)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 147456)];
          kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3136) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3200)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3200) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3264)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 156672)];
          kernel_shared[(((int)threadIdx.x) + 3328)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3328) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3392)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3392) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3456)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 165888)];
          kernel_shared[(((int)threadIdx.x) + 3520)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3520) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3584) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3648)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 175104)];
          kernel_shared[(((int)threadIdx.x) + 3712)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3712) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3776)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3776) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3840)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 184320)];
          kernel_shared[(((int)threadIdx.x) + 3904)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3904) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 3968)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 3968) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 193536)];
          kernel_shared[(((int)threadIdx.x) + 4096)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4096) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4160)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4160) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4224)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 202752)];
          kernel_shared[(((int)threadIdx.x) + 4288)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4288) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4352)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4352) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4416)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 211968)];
          kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4480) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4544)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4544) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4608)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 221184)];
          kernel_shared[(((int)threadIdx.x) + 4672)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4672) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4736)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4736) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4800)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 230400)];
          kernel_shared[(((int)threadIdx.x) + 4864)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4864) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4928)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 4928) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 4992)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 239616)];
          kernel_shared[(((int)threadIdx.x) + 5056)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5056) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5120)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5120) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5184)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 248832)];
          kernel_shared[(((int)threadIdx.x) + 5248)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5248) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5312)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5312) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5376)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 258048)];
          kernel_shared[(((int)threadIdx.x) + 5440)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5440) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5504)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5504) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5568)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 267264)];
          kernel_shared[(((int)threadIdx.x) + 5632)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5632) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5696)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5696) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5760)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 276480)];
          kernel_shared[(((int)threadIdx.x) + 5824)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5824) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5888)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 5888) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 5952)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (rc_outer_outer * 288)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 285696)];
          kernel_shared[(((int)threadIdx.x) + 6016)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 6016) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 64) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 6080)] = kernel[(((((((((int)blockIdx.x) / 7) * 294912) + (((((int)threadIdx.x) + 6080) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 32) % 96) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[0] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[1] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[2] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[3] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[4] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[5] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[6] * kernel_shared[(((int)threadIdx.x) * 96)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 96) + 3)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 96) + 6)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[27] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 96) + 9)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[1] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 96) + 1)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 96) + 4)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 96) + 7)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 96) + 10)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 96) + 2)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 96) + 5)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[26] * kernel_shared[((((int)threadIdx.x) * 96) + 8)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 96) + 11)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 96) + 12)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 96) + 15)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[54] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 96) + 18)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 96) + 21)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 96) + 13)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 96) + 16)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 96) + 19)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 96) + 22)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 96) + 14)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[53] * kernel_shared[((((int)threadIdx.x) * 96) + 17)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 96) + 20)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 96) + 23)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 96) + 24)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[81] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 96) + 27)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 96) + 30)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 96) + 33)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 96) + 25)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 96) + 28)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 96) + 31)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 96) + 34)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[80] * kernel_shared[((((int)threadIdx.x) * 96) + 26)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 96) + 29)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 96) + 32)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[107] * kernel_shared[((((int)threadIdx.x) * 96) + 35)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[108] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[109] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 96) + 36)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[117] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[118] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 96) + 39)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[126] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[127] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 96) + 42)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[135] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[136] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 96) + 45)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[109] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[115] * kernel_shared[((((int)threadIdx.x) * 96) + 37)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[118] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[124] * kernel_shared[((((int)threadIdx.x) * 96) + 40)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[127] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[133] * kernel_shared[((((int)threadIdx.x) * 96) + 43)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[136] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[142] * kernel_shared[((((int)threadIdx.x) * 96) + 46)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[115] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[116] * kernel_shared[((((int)threadIdx.x) * 96) + 38)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[124] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[125] * kernel_shared[((((int)threadIdx.x) * 96) + 41)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[133] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[134] * kernel_shared[((((int)threadIdx.x) * 96) + 44)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[142] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[143] * kernel_shared[((((int)threadIdx.x) * 96) + 47)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[144] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[145] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 96) + 48)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[153] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[154] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 96) + 51)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[162] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[163] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 96) + 54)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[171] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[172] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 96) + 57)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[145] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[151] * kernel_shared[((((int)threadIdx.x) * 96) + 49)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[154] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[160] * kernel_shared[((((int)threadIdx.x) * 96) + 52)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[163] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[169] * kernel_shared[((((int)threadIdx.x) * 96) + 55)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[172] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[178] * kernel_shared[((((int)threadIdx.x) * 96) + 58)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[151] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[152] * kernel_shared[((((int)threadIdx.x) * 96) + 50)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[160] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[161] * kernel_shared[((((int)threadIdx.x) * 96) + 53)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[169] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[170] * kernel_shared[((((int)threadIdx.x) * 96) + 56)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[178] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[179] * kernel_shared[((((int)threadIdx.x) * 96) + 59)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[180] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[181] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 96) + 60)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[189] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[190] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 96) + 63)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[198] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[199] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 96) + 66)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[207] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[208] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 96) + 69)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[181] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[187] * kernel_shared[((((int)threadIdx.x) * 96) + 61)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[190] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[196] * kernel_shared[((((int)threadIdx.x) * 96) + 64)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[199] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[205] * kernel_shared[((((int)threadIdx.x) * 96) + 67)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[208] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[214] * kernel_shared[((((int)threadIdx.x) * 96) + 70)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[187] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[188] * kernel_shared[((((int)threadIdx.x) * 96) + 62)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[196] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[197] * kernel_shared[((((int)threadIdx.x) * 96) + 65)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[205] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[206] * kernel_shared[((((int)threadIdx.x) * 96) + 68)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[214] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[215] * kernel_shared[((((int)threadIdx.x) * 96) + 71)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[216] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[217] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[218] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[219] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[220] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[221] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[222] * kernel_shared[((((int)threadIdx.x) * 96) + 72)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[225] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[226] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[227] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[228] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[229] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[230] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[231] * kernel_shared[((((int)threadIdx.x) * 96) + 75)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[234] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[235] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[236] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[237] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[238] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[239] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[240] * kernel_shared[((((int)threadIdx.x) * 96) + 78)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[243] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[244] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[245] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[246] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[247] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[248] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[249] * kernel_shared[((((int)threadIdx.x) * 96) + 81)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[217] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[218] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[219] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[220] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[221] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[222] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[223] * kernel_shared[((((int)threadIdx.x) * 96) + 73)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[226] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[227] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[228] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[229] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[230] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[231] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[232] * kernel_shared[((((int)threadIdx.x) * 96) + 76)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[235] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[236] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[237] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[238] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[239] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[240] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[241] * kernel_shared[((((int)threadIdx.x) * 96) + 79)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[244] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[245] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[246] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[247] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[248] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[249] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[250] * kernel_shared[((((int)threadIdx.x) * 96) + 82)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[218] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[219] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[220] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[221] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[222] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[223] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[224] * kernel_shared[((((int)threadIdx.x) * 96) + 74)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[227] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[228] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[229] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[230] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[231] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[232] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[233] * kernel_shared[((((int)threadIdx.x) * 96) + 77)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[236] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[237] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[238] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[239] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[240] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[241] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[242] * kernel_shared[((((int)threadIdx.x) * 96) + 80)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[245] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[246] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[247] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[248] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[249] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[250] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[251] * kernel_shared[((((int)threadIdx.x) * 96) + 83)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[252] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[253] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[254] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[255] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[256] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[257] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[258] * kernel_shared[((((int)threadIdx.x) * 96) + 84)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[261] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[262] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[263] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[264] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[265] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[266] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[267] * kernel_shared[((((int)threadIdx.x) * 96) + 87)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[270] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[271] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[272] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[273] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[274] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[275] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[276] * kernel_shared[((((int)threadIdx.x) * 96) + 90)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[279] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[280] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[281] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[282] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[283] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[284] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[285] * kernel_shared[((((int)threadIdx.x) * 96) + 93)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[253] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[254] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[255] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[256] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[257] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[258] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[259] * kernel_shared[((((int)threadIdx.x) * 96) + 85)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[262] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[263] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[264] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[265] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[266] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[267] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[268] * kernel_shared[((((int)threadIdx.x) * 96) + 88)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[271] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[272] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[273] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[274] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[275] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[276] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[277] * kernel_shared[((((int)threadIdx.x) * 96) + 91)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[280] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[281] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[282] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[283] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[284] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[285] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[286] * kernel_shared[((((int)threadIdx.x) * 96) + 94)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[254] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[255] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[256] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[257] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[258] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[259] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[260] * kernel_shared[((((int)threadIdx.x) * 96) + 86)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[263] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[264] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[265] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[266] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[267] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[268] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[269] * kernel_shared[((((int)threadIdx.x) * 96) + 89)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[272] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[273] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[274] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[275] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[276] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[277] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[278] * kernel_shared[((((int)threadIdx.x) * 96) + 92)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[281] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[282] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[283] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[284] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[285] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[286] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[287] * kernel_shared[((((int)threadIdx.x) * 96) + 95)]));
        }
      }
      compute[((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7))] = max((conv2d_nchw[0] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
      compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 1)] = max((conv2d_nchw[1] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
      compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 2)] = max((conv2d_nchw[2] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
      compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 3)] = max((conv2d_nchw[3] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
      compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 4)] = max((conv2d_nchw[4] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
      compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 5)] = max((conv2d_nchw[5] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
      compute[(((((((int)blockIdx.x) / 7) * 3136) + (((int)threadIdx.x) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 6)] = max((conv2d_nchw[6] + bias[(((((int)blockIdx.x) / 7) * 64) + ((int)threadIdx.x))]), 0.000000e+00f);
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  27.941 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
