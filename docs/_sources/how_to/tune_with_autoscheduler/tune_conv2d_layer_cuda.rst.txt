.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 32;
      allocate(conv2d_nchw: Pointer(local float32), float32, [14]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [4032]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [3072]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [4], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[13] = 0f32
        for (rc.outer.outer: int32, 0, 8) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*3136)
            let cse_var_3: int32 = (ry.outer.outer*7)
            let cse_var_2: int32 = (rc.outer.outer*576)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [4032], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 56)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 56), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 112), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 112), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 112), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 168)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 168), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 168), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 168), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 224), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 224), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 224), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 280)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 280), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 280), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 280), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 336)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 336), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 336), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 336), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 392), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 392), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 392), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 448)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 448), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 448), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 448), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 504)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 384)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 560)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 560), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 560), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 560), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 616)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 616), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 616), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 616), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 672)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 672), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 672), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 672), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 728)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 728), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 728), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 728), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 784), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 784), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 784), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 840)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 840), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 840), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 840), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 896)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 896), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 896), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 896), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 952)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 952), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 952), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 952), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1008)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 776)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1064)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1064), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1064), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1064), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1120)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1120), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1120), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1120), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1176), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1176), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1176), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1232)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1232), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1232), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1232), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1288)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1288), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1288), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1288), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1344)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1344), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1344), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1344), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1400)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1400), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1400), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1400), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1456)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1456), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1456), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1456), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1512)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1168)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1568)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1568), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1568), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1568), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1624)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1624), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1624), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1624), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1680)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1680), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1680), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1680), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1736)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1736), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1736), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1736), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1792)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1792), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1792), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1792), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1848)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1848), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1848), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1848), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1904)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1904), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1904), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1904), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 1960)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1960), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1960), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1960), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2016)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1560)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2072)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2072), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2072), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2072), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2128)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2128), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2128), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2128), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2184)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2184), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2184), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2184), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2240)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2240), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2240), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2240), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2296)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2296), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2296), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2296), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2352)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2352), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2352), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2352), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2408)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2408), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2408), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2408), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2464)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2464), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2464), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2464), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2520)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1952)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2576)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2576), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2576), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2576), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2632)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2632), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2632), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2632), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2688)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2688), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2688), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2688), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2744)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2744), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2744), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2744), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2800)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2800), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2800), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2800), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2856)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2856), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2856), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2856), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2912)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2912), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2912), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2912), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 2968)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2968), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2968), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2968), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3024)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 2344)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3080)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3080), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3080), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3080), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3136)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3136), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3136), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3136), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3192)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3192), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3192), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3192), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3248)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3248), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3248), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3248), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3304)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3304), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3304), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3304), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3360)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3360), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3360), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3360), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3416)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3416), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3416), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3416), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3472)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3472), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3472), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3472), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3528)] = @tir.if_then_else(((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && ((floordiv(threadIdx.x_1, 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 2736)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3584)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3584), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3584), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3584), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3640)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3640), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3640), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3640), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3696)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3696), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3696), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3696), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3752)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3752), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3752), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3752), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3808)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3808), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3808), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3808), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3864)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3864), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3864), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3864), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3920)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3920), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3920), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3920), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
              pad_temp.shared_1[(threadIdx.x_1 + 3976)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3976), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3976), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3976), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                kernel.shared_1: Buffer(kernel.shared, float32, [3072], [], scope="shared")[(threadIdx.x_2*8)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2*8), 192), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 3)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 1), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 4)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 4), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 5)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 5), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 6)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 2), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 7)] = kernel[((((((blockIdx.x*73728) + (floordiv(threadIdx.x_2, 24)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 7), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                kernel.shared_1[((threadIdx.x_2*8) + 448)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 448), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 449)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 449), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 450)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 22), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 451)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 448), 3) + 1), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 452)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 452), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 453)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 23), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 454)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 448), 3) + 2), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 455)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 7), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 455), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                kernel.shared_1[((threadIdx.x_2*8) + 896)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 896), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 897)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 43), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 898)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 898), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 899)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 896), 3) + 1), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 900)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 44), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 901)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 901), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 902)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 896), 3) + 2), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 903)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 14), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 45), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                kernel.shared_1[((threadIdx.x_2*8) + 1344)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2*8), 192), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1345)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1345), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1346)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1346), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1347)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 1), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1348)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1348), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1349)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1349), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1350)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 2), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3)) + 32256)]
                kernel.shared_1[((threadIdx.x_2*8) + 1351)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1351), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3)) + 32256)]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                kernel.shared_1[((threadIdx.x_2*8) + 1792)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1792), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1793)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1793), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1794)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 22), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1795)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 1792), 3) + 1), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1796)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1796), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1797)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 23), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1798)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 1792), 3) + 2), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 1799)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 28), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 1799), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                kernel.shared_1[((threadIdx.x_2*8) + 2240)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2240), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2241)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 43), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2242)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2242), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2243)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 2240), 3) + 1), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2244)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 44), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2245)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2245), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2246)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floormod((floordiv(((threadIdx.x_2*8) + 2240), 3) + 2), 64)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3))]
                kernel.shared_1[((threadIdx.x_2*8) + 2247)] = kernel[((((((blockIdx.x*73728) + (floordiv((floordiv(threadIdx.x_2, 8) + 35), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 45), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3))]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2688)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2*8), 192), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2689)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2689), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2690)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2690), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2691)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 1), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2692)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2692), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2693)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2693), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 2), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2694)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floormod((floordiv((threadIdx.x_2*8), 3) + 2), 64)*9)) + cse_var_1) + floormod((threadIdx.x_2*8), 3)) + 64512)]
                }
                if @tir.likely((threadIdx.x_2 < 48), dtype=bool) {
                  kernel.shared_1[((threadIdx.x_2*8) + 2695)] = kernel[(((((((blockIdx.x*73728) + (floordiv(floordiv(threadIdx.x_2, 8), 3)*4608)) + cse_var_2) + (floordiv(floormod(((threadIdx.x_2*8) + 2695), 192), 3)*9)) + cse_var_1) + floormod(((threadIdx.x_2*8) + 1), 3)) + 64512)]
                }
              }
              for (rc.outer.inner: int32, 0, 8) {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 36)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 45)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24))]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rc.outer.inner*504) + floormod(threadIdx.x, 7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 27)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 36)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 45)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 54)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 192)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 28)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 37)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 46)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 55)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 1)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 28)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 37)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 46)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 55)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 193)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 29)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 38)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 47)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 56)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 2)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 29)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 38)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 47)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 56)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 194)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 108)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 117)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 3)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 108)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 117)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 195)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 73)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 109)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 118)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 4)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 73)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 91)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 100)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 109)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 118)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 196)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 74)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 110)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 119)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 5)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 74)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 92)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 101)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 110)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 119)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 197)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 153)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 6)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 153)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 198)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 136)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 145)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 154)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 7)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 136)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 145)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 154)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 163)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 172)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 181)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 199)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 137)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 146)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 155)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 8)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 137)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 146)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 155)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 164)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 173)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 182)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 200)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 216)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 225)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 234)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 9)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 216)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 225)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 234)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 201)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 199)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 208)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 217)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 226)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 235)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 10)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 199)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 208)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 217)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 226)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 235)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 244)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 202)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 200)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 209)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 218)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 227)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 236)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 11)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 200)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 209)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 218)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 227)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 236)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 245)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 203)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 270)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 279)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 288)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 297)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 306)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 12)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 270)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 279)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 288)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 297)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 306)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 204)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 271)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 280)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 289)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 298)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 307)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 13)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 262)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 271)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 280)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 289)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 298)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 307)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 205)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 272)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 281)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 290)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 299)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 308)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 14)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 263)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 272)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 281)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 290)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 299)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 308)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 206)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 351)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 360)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 369)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 15)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 324)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 333)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 342)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 351)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 360)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 369)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 207)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 352)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 361)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 370)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 16)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 325)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 334)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 343)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 352)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 361)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 370)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 208)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 353)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 362)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 371)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 17)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 326)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 335)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 344)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 353)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 362)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 371)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 209)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 387)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 396)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 432)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 18)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 387)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 396)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 405)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 414)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 423)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 432)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 210)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 388)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 397)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 433)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 19)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 388)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 397)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 406)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 415)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 424)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 433)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 211)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 389)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 398)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 434)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 20)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 389)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 398)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 407)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 416)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 425)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 434)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 212)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 450)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 459)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 468)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 477)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 21)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 450)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 459)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 468)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 477)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 486)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 495)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 213)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 451)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 460)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 469)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 478)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 22)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 451)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 460)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 469)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 478)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 487)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 496)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 214)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 452)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 461)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 470)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 479)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 23)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 452)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 461)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 470)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 479)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 488)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + floormod(threadIdx.x, 7)) + 497)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*384) + (rc.outer.inner*24)) + 215)]))
              }
            }
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7))] = max((conv2d_nchw_1[i1.inner] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7)) + 7)] = max((conv2d_nchw_1[(i1.inner + 2)] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7)) + 14)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7)) + 21)] = max((conv2d_nchw_1[(i1.inner + 6)] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7)) + 28)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7)) + 35)] = max((conv2d_nchw_1[(i1.inner + 10)] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*784) + (floordiv(threadIdx.x, 7)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 7)) + 42)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[(((blockIdx.x*16) + (floordiv(threadIdx.x, 7)*2)) + i1.inner)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.224 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=7)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=8)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=8)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=7)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=8)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(56) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[14];
      __shared__ float pad_temp_shared[4032];
      __shared__ float kernel_shared[3072];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 56)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 56) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 112) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 168)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 168) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 224) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 280)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 280) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 336) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 392) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 448) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 504)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 384)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 560) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 616)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 616) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 672)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 672) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 728)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 728) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 784) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 840)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 840) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 896)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 896) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 952)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 952) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1008)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 776)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1064)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1064) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1120)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1120) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1176) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1232)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1232) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1288)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1288) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1344)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1344) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1400)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1400) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1456)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1456) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1512)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1168)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1568) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1624)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1624) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1680)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1680) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1736)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1736) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1792)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1792) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1848)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1848) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1904)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1904) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1960) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2016)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1560)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2072)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2072) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2128)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2128) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2184)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2184) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2240)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2240) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2296)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2296) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2352)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2352) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2408)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2408) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2464)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2464) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2520)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1952)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2576)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2576) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2632)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2632) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2688)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2688) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2744)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2744) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2800)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2800) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2856)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2856) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2912)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2912) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2968)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2968) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3024)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 2344)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3080)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3080) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3136)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3136) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3192)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3192) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3248)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3248) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3304)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3304) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3360)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3360) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3416)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3416) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3472)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3472) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3528)] = (((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (((((int)threadIdx.x) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 2736)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3584)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3584) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3640)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3640) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3696)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3696) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3752)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3752) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3808)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3808) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3864)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3864) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3920)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3920) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3976)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3976) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          kernel_shared[(((int)threadIdx.x) * 8)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) % 24) * 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) % 24) * 8) + 1) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) % 24) * 8) + 2) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 3)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 4)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) % 24) * 8) + 4) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 5)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) % 24) * 8) + 5) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 6)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 7)] = kernel[((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) % 24) * 8) + 7) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 448)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 64) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 449)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 65) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 450)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 22) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 451)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 448) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 452)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 68) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 453)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 23) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 454)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 448) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 455)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 56) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 71) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 896)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 128) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 897)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 43) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 898)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 130) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 899)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 896) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 900)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 44) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 901)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 133) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 902)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 896) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 903)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 112) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 45) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1344)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) % 24) * 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1345)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 1) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1346)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 2) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1347)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1348)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 4) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1349)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 5) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1350)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1351)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 7) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3)) + 32256)];
          kernel_shared[((((int)threadIdx.x) * 8) + 1792)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 64) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1793)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 65) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1794)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 22) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1795)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 1792) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1796)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 68) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1797)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 23) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1798)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 1792) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 1799)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 224) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 71) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2240)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 128) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2241)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 43) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2242)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 130) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2243)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 2240) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2244)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 44) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2245)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 133) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2246)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((((int)threadIdx.x) * 8) + 2240) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3))];
          kernel_shared[((((int)threadIdx.x) * 8) + 2247)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 280) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 45) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3))];
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2688)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) % 24) * 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2689)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 1) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2690)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 2) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2691)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 1) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2692)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 4) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2693)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 5) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 2) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2694)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) / 3) + 2) & 63) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) * 8) % 3)) + 64512)];
          }
          if (((int)threadIdx.x) < 48) {
            kernel_shared[((((int)threadIdx.x) * 8) + 2695)] = kernel[(((((((((int)blockIdx.x) * 73728) + ((((int)threadIdx.x) / 24) * 4608)) + (rc_outer_outer * 576)) + (((((((int)threadIdx.x) * 8) + 7) % 192) / 3) * 9)) + (ry_outer_outer * 3)) + (((((int)threadIdx.x) * 8) + 1) % 3)) + 64512)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 8; ++rc_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24))]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 504) + (((int)threadIdx.x) % 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 27)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 36)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 45)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 54)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 192)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 28)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 37)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 46)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 55)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 1)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 28)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 37)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 46)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 55)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 193)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 29)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 38)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 47)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 56)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 2)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 29)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 38)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 47)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 56)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 194)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 108)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 117)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 195)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 73)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 109)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 118)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 4)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 73)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 91)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 100)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 109)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 118)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 196)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 74)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 110)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 119)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 5)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 74)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 92)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 101)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 110)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 119)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 197)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 153)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 198)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 136)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 145)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 154)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 7)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 136)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 145)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 154)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 163)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 172)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 181)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 199)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 137)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 146)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 155)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 8)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 137)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 146)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 155)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 164)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 173)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 182)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 200)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 216)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 225)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 234)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 201)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 199)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 208)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 217)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 226)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 235)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 10)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 199)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 208)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 217)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 226)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 235)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 244)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 202)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 200)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 209)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 218)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 227)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 236)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 11)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 200)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 209)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 218)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 227)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 236)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 245)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 203)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 270)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 279)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 288)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 297)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 306)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 204)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 271)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 280)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 289)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 298)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 307)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 13)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 262)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 271)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 280)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 289)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 298)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 307)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 205)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 272)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 281)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 290)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 299)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 308)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 14)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 263)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 272)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 281)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 290)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 299)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 308)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 206)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 15)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 324)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 333)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 342)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 351)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 360)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 369)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 207)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 352)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 361)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 370)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 16)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 325)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 334)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 343)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 352)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 361)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 370)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 208)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 353)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 362)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 371)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 17)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 326)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 335)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 344)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 353)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 362)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 371)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 209)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 18)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 387)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 396)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 405)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 414)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 423)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 432)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 210)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 388)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 397)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 433)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 19)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 388)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 397)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 406)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 415)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 424)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 433)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 211)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 389)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 398)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 434)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 20)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 389)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 398)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 407)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 416)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 425)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 434)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 212)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 21)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 450)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 459)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 468)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 477)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 486)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 495)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 213)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 451)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 460)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 469)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 478)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 22)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 451)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 460)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 469)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 478)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 487)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 496)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 214)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 452)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 461)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 470)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 479)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 23)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 452)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 461)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 470)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 479)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 488)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + (((int)threadIdx.x) % 7)) + 497)] * kernel_shared[((((((int)threadIdx.x) / 7) * 384) + (rc_outer_inner * 24)) + 215)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7)) + 7)] = max((conv2d_nchw[(i1_inner + 2)] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7)) + 14)] = max((conv2d_nchw[(i1_inner + 4)] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7)) + 21)] = max((conv2d_nchw[(i1_inner + 6)] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7)) + 28)] = max((conv2d_nchw[(i1_inner + 8)] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7)) + 35)] = max((conv2d_nchw[(i1_inner + 10)] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 7)) + 42)] = max((conv2d_nchw[(i1_inner + 12)] + bias[(((((int)blockIdx.x) * 16) + ((((int)threadIdx.x) / 7) * 2)) + i1_inner)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  26.916 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
