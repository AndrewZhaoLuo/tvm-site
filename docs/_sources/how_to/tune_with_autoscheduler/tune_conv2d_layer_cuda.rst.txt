.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 32;
      allocate(conv2d_nchw: Pointer(local float32), float32, [16]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [2016]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1536]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [4], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[15] = 0f32
        for (rc.outer.outer: int32, 0, 16) {
          for (rx.outer.outer: int32, 0, 3) {
            let cse_var_2: int32 = (rc.outer.outer*1568)
            let cse_var_1: int32 = (rc.outer.outer*288)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [2016], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 49)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 7), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 14), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 147)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 21), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 28), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 245)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 35), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 42), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 343)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 49), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 2), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 56), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 441)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 335)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 70), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 539)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 77), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 84), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 637)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 91), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 98), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 735)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 105), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 112), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 833)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 2), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 119), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 882)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 678)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 931)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 133), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 140), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1029)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 147), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1078)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 154), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1127)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 161), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 168), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1225)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 175), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1274)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 2), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 182), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1323)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 1021)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1372)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 196), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1421)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 203), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1470)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 210), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1519)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 217), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1568)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 224), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1617)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 6), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 6), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 231), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1666)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 4), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 4), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 238), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1715)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 2), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 245), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1764)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 1364)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1813)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 7), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 259), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1862)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 5), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 5), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 266), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1911)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 3), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 3), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 273), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1960)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 280), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              if @tir.likely((threadIdx.x_1 < 7), dtype=bool) {
                pad_temp.shared_1[(threadIdx.x_1 + 2009)] = 0f32
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1: Buffer(kernel.shared, float32, [1536], [], scope="shared")[threadIdx.x_2] = kernel[((((blockIdx.x*73728) + cse_var_1) + (threadIdx.x_2*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 49)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 49), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 49), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 98), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 98), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 147)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 147), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 17), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 196), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 196), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 245)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 245), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 245), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 294)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 294), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 2), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 343)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 343), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 343), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 392), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 392), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 441)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 441), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 19), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 490)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 490), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 490), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 539)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 539), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 539), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 588)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 588), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 4), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 637)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 637), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 637), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 686)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 686), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 686), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 735)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 735), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 21), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 784), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 784), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 833)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 833), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 833), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 882)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 882), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 6), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 931)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 931), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 931), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 980)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 980), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 980), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1029)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1029), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 23), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1078)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1078), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1078), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1127)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1127), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1127), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1176), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 8), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1225)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1225), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1225), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1274)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1274), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1274), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1323)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1323), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 25), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1372)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1372), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1372), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1421)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1421), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1421), 96), 3)*9)) + (floormod((threadIdx.x_2 + 2), 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              kernel.shared_1[(threadIdx.x_2 + 1470)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1470), 96)*4608)) + cse_var_1) + (floormod((floordiv(threadIdx.x_2, 3) + 10), 32)*9)) + (floormod(threadIdx.x_2, 3)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              if @tir.likely((threadIdx.x_2 < 17), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 1519)] = kernel[((((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1519), 96)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 1519), 96), 3)*9)) + (floormod((threadIdx.x_2 + 1), 3)*3)) + rx.outer.outer)]
              }
              for (rc.outer.inner: int32, 0, 4) {
                let cse_var_3: int32 = (rc.outer.inner*24)
                 {
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[cse_var_3]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 192)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 384)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 576)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 768)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 960)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 1152)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 1344)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 96)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 288)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 480)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 672)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 864)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 1056)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 1248)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((rc.outer.inner*504) + threadIdx.x)]*kernel.shared_1[(cse_var_3 + 1440)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 193)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 385)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 577)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 769)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 961)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1153)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1345)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 97)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 289)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 481)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 673)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 865)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1057)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1249)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 7)]*kernel.shared_1[(cse_var_3 + 1441)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 2)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 194)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 386)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 578)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 770)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 962)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 1154)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 1346)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 98)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 290)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 482)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 674)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 866)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 1058)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 1250)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 14)]*kernel.shared_1[(cse_var_3 + 1442)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 3)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 195)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 387)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 579)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 771)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 963)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 1155)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 1347)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 99)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 291)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 483)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 675)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 867)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 1059)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 1251)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 63)]*kernel.shared_1[(cse_var_3 + 1443)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 4)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 196)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 388)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 580)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 772)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 964)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 1156)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 1348)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 100)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 292)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 484)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 676)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 868)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 1060)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 1252)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 70)]*kernel.shared_1[(cse_var_3 + 1444)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 5)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 197)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 389)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 581)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 773)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 965)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 1157)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 1349)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 101)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 293)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 485)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 677)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 869)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 1061)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 1253)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 77)]*kernel.shared_1[(cse_var_3 + 1445)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 6)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 198)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 390)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 582)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 774)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 966)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 1158)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 1350)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 102)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 294)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 486)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 678)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 870)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 1062)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 1254)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 126)]*kernel.shared_1[(cse_var_3 + 1446)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 7)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 199)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 391)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 583)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 775)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 967)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 1159)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 1351)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 103)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 295)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 487)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 679)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 871)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 1063)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 1255)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 133)]*kernel.shared_1[(cse_var_3 + 1447)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 8)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 200)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 392)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 584)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 776)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 968)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 1160)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 1352)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 104)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 296)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 488)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 680)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 872)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 1064)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 1256)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 140)]*kernel.shared_1[(cse_var_3 + 1448)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 9)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 201)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 393)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 585)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 777)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 969)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 1161)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 1353)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 105)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 297)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 489)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 681)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 873)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 1065)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 1257)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 189)]*kernel.shared_1[(cse_var_3 + 1449)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 10)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 202)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 394)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 586)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 778)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 970)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 1162)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 1354)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 106)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 298)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 490)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 682)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 874)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 1066)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 1258)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 196)]*kernel.shared_1[(cse_var_3 + 1450)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 11)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 203)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 395)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 587)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 779)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 971)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 1163)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 1355)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 107)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 299)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 491)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 683)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 875)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 1067)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 1259)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 203)]*kernel.shared_1[(cse_var_3 + 1451)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 12)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 204)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 396)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 588)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 780)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 972)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 1164)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 1356)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 108)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 300)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 492)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 684)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 876)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 1068)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 1260)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 252)]*kernel.shared_1[(cse_var_3 + 1452)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 13)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 205)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 397)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 589)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 781)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 973)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 1165)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 1357)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 109)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 301)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 493)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 685)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 877)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 1069)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 1261)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 259)]*kernel.shared_1[(cse_var_3 + 1453)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 14)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 206)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 398)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 590)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 782)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 974)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 1166)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 1358)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 110)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 302)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 494)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 686)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 878)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 1070)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 1262)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 266)]*kernel.shared_1[(cse_var_3 + 1454)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 15)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 207)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 399)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 591)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 783)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 975)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 1167)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 1359)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 111)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 303)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 495)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 687)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 879)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 1071)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 1263)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 315)]*kernel.shared_1[(cse_var_3 + 1455)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 16)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 208)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 400)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 592)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 784)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 976)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 1168)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 1360)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 112)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 304)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 496)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 688)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 880)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 1072)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 1264)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 322)]*kernel.shared_1[(cse_var_3 + 1456)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 17)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 209)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 401)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 593)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 785)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 977)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 1169)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 1361)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 113)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 305)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 497)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 689)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 881)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 1073)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 1265)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 329)]*kernel.shared_1[(cse_var_3 + 1457)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 18)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 210)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 402)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 594)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 786)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 978)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 1170)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 1362)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 114)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 306)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 498)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 690)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 882)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 1074)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 1266)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 378)]*kernel.shared_1[(cse_var_3 + 1458)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 19)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 211)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 403)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 595)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 787)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 979)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 1171)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 1363)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 115)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 307)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 499)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 691)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 883)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 1075)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 1267)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 385)]*kernel.shared_1[(cse_var_3 + 1459)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 20)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 212)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 404)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 596)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 788)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 980)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 1172)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 1364)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 116)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 308)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 500)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 692)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 884)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 1076)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 1268)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 392)]*kernel.shared_1[(cse_var_3 + 1460)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 21)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 213)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 405)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 597)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 789)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 981)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 1173)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 1365)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 117)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 309)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 501)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 693)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 885)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 1077)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 1269)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 441)]*kernel.shared_1[(cse_var_3 + 1461)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 22)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 214)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 406)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 598)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 790)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 982)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 1174)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 1366)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 118)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 310)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 502)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 694)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 886)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 1078)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 1270)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 448)]*kernel.shared_1[(cse_var_3 + 1462)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 23)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 215)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 407)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 599)]))
                  conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 791)]))
                  conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 983)]))
                  conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 1175)]))
                  conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 1367)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 119)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 311)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 503)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 695)]))
                  conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 887)]))
                  conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 1079)]))
                  conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 1271)]))
                  conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*504) + threadIdx.x) + 455)]*kernel.shared_1[(cse_var_3 + 1463)]))
                }
              }
            }
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[(((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x)] = max((conv2d_nchw_1[i1.inner] + bias[((blockIdx.x*16) + i1.inner)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 98)] = max((conv2d_nchw_1[(i1.inner + 2)] + bias[(((blockIdx.x*16) + i1.inner) + 2)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 196)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((blockIdx.x*16) + i1.inner) + 4)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 294)] = max((conv2d_nchw_1[(i1.inner + 6)] + bias[(((blockIdx.x*16) + i1.inner) + 6)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 392)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[(((blockIdx.x*16) + i1.inner) + 8)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 490)] = max((conv2d_nchw_1[(i1.inner + 10)] + bias[(((blockIdx.x*16) + i1.inner) + 10)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 588)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[(((blockIdx.x*16) + i1.inner) + 12)]), 0f32)
          compute[((((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x) + 686)] = max((conv2d_nchw_1[(i1.inner + 14)] + bias[(((blockIdx.x*16) + i1.inner) + 14)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.232 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=8)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=8)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[16];
      __shared__ float pad_temp_shared[2016];
      __shared__ float kernel_shared[1536];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 1568) + ((int)threadIdx.x)) + rx_outer_outer) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 49) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 98) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 147) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 196) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 245) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 294) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 343) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 392) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 1568) + ((int)threadIdx.x)) + rx_outer_outer) + 335)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 490) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 539) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 588) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 637) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 686) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 735) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 784) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 833) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 1568) + ((int)threadIdx.x)) + rx_outer_outer) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 931) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 980) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1029) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1078) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1127) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1176) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1225) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1274) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 1568) + ((int)threadIdx.x)) + rx_outer_outer) + 1021)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1372) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1421) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1470) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1519) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1568) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1617)] = (((((1 <= (((((int)threadIdx.x) / 7) + 6) % 9)) && ((((((int)threadIdx.x) / 7) + 6) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1617) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1666)] = (((((1 <= (((((int)threadIdx.x) / 7) + 4) % 9)) && ((((((int)threadIdx.x) / 7) + 4) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1666) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1715)] = ((((((int)threadIdx.x) < 42) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1715) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1764)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 1568) + ((int)threadIdx.x)) + rx_outer_outer) + 1364)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1813)] = (((((1 <= (((((int)threadIdx.x) / 7) + 7) % 9)) && ((((((int)threadIdx.x) / 7) + 7) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1813) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 7) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1862)] = (((((1 <= (((((int)threadIdx.x) / 7) + 5) % 9)) && ((((((int)threadIdx.x) / 7) + 5) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1862) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1911)] = (((((1 <= (((((int)threadIdx.x) / 7) + 3) % 9)) && ((((((int)threadIdx.x) / 7) + 3) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1911) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 1568) + (((((int)threadIdx.x) + 1960) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 7) {
            pad_temp_shared[(((int)threadIdx.x) + 2009)] = 0.000000e+00f;
          }
          kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 73728) + (rc_outer_outer * 288)) + (((int)threadIdx.x) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 49)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 49) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 49) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 98)] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 98) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) + 2) % 96) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 147)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 147) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 17) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 196) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 4) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 245)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 245) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 53) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 294)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 294) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) / 3) + 2) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 343)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 343) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 55) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 392) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 8) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 441)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 441) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 19) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 490)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 490) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 10) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 539)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 539) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 59) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 588)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 588) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) / 3) + 4) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 637)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 637) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 61) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 686)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 686) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 14) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 735)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 735) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 21) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 784) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 16) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 833)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 833) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 65) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 882)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 882) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) / 3) + 6) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 931)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 931) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 67) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 980) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 20) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1029)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1029) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 23) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1078)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1078) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 22) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1127)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1127) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 71) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1176) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) / 3) + 8) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1225)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1225) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 73) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1274)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1274) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 26) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1323)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1323) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) / 3) + 25) & 31) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1372) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 28) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1421)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1421) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 77) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 2) % 3) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 1470)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1470) / 96) * 4608)) + (rc_outer_outer * 288)) + (((((int)threadIdx.x) / 3) + 10) * 9)) + ((((int)threadIdx.x) % 3) * 3)) + rx_outer_outer)];
          if (((int)threadIdx.x) < 17) {
            kernel_shared[(((int)threadIdx.x) + 1519)] = kernel[((((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1519) / 96) * 4608)) + (rc_outer_outer * 288)) + ((((((int)threadIdx.x) + 79) % 96) / 3) * 9)) + (((((int)threadIdx.x) + 1) % 3) * 3)) + rx_outer_outer)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 4; ++rc_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[(rc_outer_inner * 24)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 192)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 384)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 576)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 768)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 960)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 1152)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 1344)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 96)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 288)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 480)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 672)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 864)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 1056)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 1248)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((rc_outer_inner * 504) + ((int)threadIdx.x))] * kernel_shared[((rc_outer_inner * 24) + 1440)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 1)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 193)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 385)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 577)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 769)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 961)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 1153)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 1345)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 97)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 289)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 481)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 673)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 865)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 1057)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 1249)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 7)] * kernel_shared[((rc_outer_inner * 24) + 1441)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 2)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 194)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 386)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 578)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 770)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 962)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 1154)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 1346)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 98)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 290)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 482)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 674)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 866)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 1058)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 1250)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 14)] * kernel_shared[((rc_outer_inner * 24) + 1442)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 195)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 387)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 579)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 771)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 963)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 1155)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 1347)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 99)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 291)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 483)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 675)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 867)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 1059)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 1251)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 63)] * kernel_shared[((rc_outer_inner * 24) + 1443)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 4)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 196)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 388)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 580)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 772)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 964)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 1156)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 1348)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 100)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 292)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 484)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 676)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 868)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 1060)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 1252)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 70)] * kernel_shared[((rc_outer_inner * 24) + 1444)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 5)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 197)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 389)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 581)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 773)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 965)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 1157)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 1349)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 101)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 293)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 485)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 677)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 869)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 1061)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 1253)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 77)] * kernel_shared[((rc_outer_inner * 24) + 1445)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 198)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 390)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 582)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 774)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 966)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 1158)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 1350)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 102)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 294)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 486)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 678)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 870)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 1062)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 1254)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 126)] * kernel_shared[((rc_outer_inner * 24) + 1446)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 7)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 199)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 391)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 583)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 775)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 967)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 1159)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 1351)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 103)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 295)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 487)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 679)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 871)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 1063)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 1255)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 133)] * kernel_shared[((rc_outer_inner * 24) + 1447)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 8)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 200)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 392)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 584)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 776)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 968)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 1160)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 1352)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 104)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 296)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 488)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 680)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 872)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 1064)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 1256)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 140)] * kernel_shared[((rc_outer_inner * 24) + 1448)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 201)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 393)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 585)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 777)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 969)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 1161)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 1353)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 105)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 297)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 489)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 681)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 873)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 1065)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 1257)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 189)] * kernel_shared[((rc_outer_inner * 24) + 1449)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 10)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 202)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 394)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 586)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 778)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 970)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 1162)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 1354)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 106)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 298)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 490)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 682)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 874)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 1066)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 1258)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 196)] * kernel_shared[((rc_outer_inner * 24) + 1450)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 11)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 203)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 395)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 587)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 779)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 971)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 1163)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 1355)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 107)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 299)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 491)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 683)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 875)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 1067)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 1259)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 203)] * kernel_shared[((rc_outer_inner * 24) + 1451)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 204)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 396)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 588)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 780)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 972)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 1164)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 1356)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 108)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 300)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 492)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 684)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 876)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 1068)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 1260)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 252)] * kernel_shared[((rc_outer_inner * 24) + 1452)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 13)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 205)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 397)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 589)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 781)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 973)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 1165)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 1357)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 109)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 301)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 493)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 685)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 877)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 1069)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 1261)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 259)] * kernel_shared[((rc_outer_inner * 24) + 1453)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 14)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 206)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 398)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 590)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 782)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 974)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 1166)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 1358)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 110)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 302)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 494)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 686)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 878)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 1070)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 1262)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 266)] * kernel_shared[((rc_outer_inner * 24) + 1454)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 207)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 399)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 591)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 783)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 975)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 1167)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 1359)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 111)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 303)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 495)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 687)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 879)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 1071)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 1263)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 315)] * kernel_shared[((rc_outer_inner * 24) + 1455)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 16)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 208)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 400)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 592)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 784)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 976)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 1168)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 1360)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 112)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 304)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 496)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 688)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 880)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 1072)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 1264)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 322)] * kernel_shared[((rc_outer_inner * 24) + 1456)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 17)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 209)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 401)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 593)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 785)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 977)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 1169)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 1361)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 113)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 305)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 497)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 689)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 881)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 1073)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 1265)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 329)] * kernel_shared[((rc_outer_inner * 24) + 1457)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 18)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 210)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 402)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 594)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 786)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 978)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 1170)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 1362)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 114)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 306)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 498)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 690)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 882)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 1074)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 1266)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 378)] * kernel_shared[((rc_outer_inner * 24) + 1458)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 19)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 211)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 403)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 595)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 787)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 979)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 1171)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 1363)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 115)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 307)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 499)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 691)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 883)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 1075)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 1267)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 385)] * kernel_shared[((rc_outer_inner * 24) + 1459)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 20)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 212)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 404)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 596)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 788)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 980)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 1172)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 1364)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 116)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 308)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 500)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 692)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 884)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 1076)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 1268)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 392)] * kernel_shared[((rc_outer_inner * 24) + 1460)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 21)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 213)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 405)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 597)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 789)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 981)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 1173)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 1365)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 117)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 309)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 501)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 693)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 885)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 1077)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 1269)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 441)] * kernel_shared[((rc_outer_inner * 24) + 1461)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 22)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 214)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 406)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 598)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 790)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 982)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 1174)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 1366)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 118)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 310)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 502)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 694)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 886)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 1078)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 1270)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 448)] * kernel_shared[((rc_outer_inner * 24) + 1462)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 23)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 215)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 407)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 599)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 791)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 983)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 1175)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 1367)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 119)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 311)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 503)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 695)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 887)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 1079)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 1271)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 504) + ((int)threadIdx.x)) + 455)] * kernel_shared[((rc_outer_inner * 24) + 1463)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 16) + i1_inner)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 98)] = max((conv2d_nchw[(i1_inner + 2)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 2)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 196)] = max((conv2d_nchw[(i1_inner + 4)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 4)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 294)] = max((conv2d_nchw[(i1_inner + 6)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 6)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 392)] = max((conv2d_nchw[(i1_inner + 8)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 8)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 490)] = max((conv2d_nchw[(i1_inner + 10)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 10)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 588)] = max((conv2d_nchw[(i1_inner + 12)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 12)]), 0.000000e+00f);
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)) + 686)] = max((conv2d_nchw[(i1_inner + 14)] + bias[(((((int)blockIdx.x) * 16) + i1_inner) + 14)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  42.020 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
