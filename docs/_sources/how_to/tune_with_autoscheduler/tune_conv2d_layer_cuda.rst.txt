.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      allocate(conv2d_nchw: Pointer(local float32), float32, [8]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [4032]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1536]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [8], [], scope="local", align=32)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[7] = 0f32
        for (rc.outer.outer: int32, 0, 8) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*3136)
            let cse_var_3: int32 = (ry.outer.outer*7)
            let cse_var_2: int32 = (rc.outer.outer*576)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [4032], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 49)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 49), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 98), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 98), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 98), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 147)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 147), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 147), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 147), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 196), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 196), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 196), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 245)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 245), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 245), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 245), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 294), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 294), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 294), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 343)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 343), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 343), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 343), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 392), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 392), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 441)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 335)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 490), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 490), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 490), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 539)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 539), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 539), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 539), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 588), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 588), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 588), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 637)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 637), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 637), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 637), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 686), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 686), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 686), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 735)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 735), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 735), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 735), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 784), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 784), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 784), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 833)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 833), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 833), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 882)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 678)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 931)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 931), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 931), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 931), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 980), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 980), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 980), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1029)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1029), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1029), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1029), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1078)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1078), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1078), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1078), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1127)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1127), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1127), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1127), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1176), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1176), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1176), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1225)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1225), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1225), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1225), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1274)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 1274), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1274), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1323)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1021)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1372)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1372), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1372), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1372), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1421)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1421), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1421), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1421), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1470)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1470), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1470), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1470), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1519)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1519), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1519), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1519), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1568)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1568), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1568), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1568), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1617)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1617), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1617), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1617), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1666)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1666), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1666), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1666), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1715)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 1715), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1715), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1764)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1364)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1813)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1813), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1813), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1813), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1862)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1862), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1862), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1862), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1911)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1911), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1911), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1911), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 1960)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 1960), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 1960), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1960), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2009)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2009), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2009), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2009), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2058)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2058), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2058), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2058), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2107)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2107), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2107), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2107), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2156)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 2156), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2156), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2205)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1707)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2254)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2254), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2254), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2254), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2303)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2303), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2303), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2303), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2352)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2352), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2352), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2352), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2401)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2401), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2401), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2401), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2450)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2450), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2450), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2450), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2499)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2499), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2499), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2499), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2548)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2548), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2548), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2548), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2597)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 2597), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2597), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2646)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 2050)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2695)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2695), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2695), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2695), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2744)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2744), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2744), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2744), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2793)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2793), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2793), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2793), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2842)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2842), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2842), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2842), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2891)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2891), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2891), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2891), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2940)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2940), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2940), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2940), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 2989)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 2989), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 2989), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2989), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3038)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 3038), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3038), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3087)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 2393)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3136)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3136), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3136), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3136), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3185)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3185), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3185), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3185), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3234)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3234), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3234), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3234), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3283)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3283), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3283), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3283), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3332)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3332), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3332), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3332), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3381)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3381), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3381), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3381), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3430)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3430), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3430), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3430), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3479)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 3479), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3479), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3528)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 2736)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3577)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3577), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3577), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3577), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3626)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3626), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3626), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3626), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3675)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3675), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3675), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3675), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3724)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3724), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3724), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3724), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3773)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3773), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3773), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3773), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3822)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3822), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3822), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3822), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3871)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 3871), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 3871), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3871), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3920)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 3920), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3920), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              pad_temp.shared_1[(threadIdx.x_1 + 3969)] = @tir.if_then_else((((1 <= (floordiv(threadIdx.x_1, 9) + ry.outer.outer)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 3079)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              if @tir.likely((threadIdx.x_1 < 14), dtype=bool) {
                pad_temp.shared_1[(threadIdx.x_1 + 4018)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 4018), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 4018), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
                kernel.shared_1: Buffer(kernel.shared, float32, [1536], [], scope="shared")[(threadIdx.x_2*12)] = kernel[(((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 2)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 3)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 9)]
                kernel.shared_1[((threadIdx.x_2*12) + 4)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 10)]
                kernel.shared_1[((threadIdx.x_2*12) + 5)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 11)]
                kernel.shared_1[((threadIdx.x_2*12) + 6)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 18)]
                kernel.shared_1[((threadIdx.x_2*12) + 7)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 19)]
                kernel.shared_1[((threadIdx.x_2*12) + 8)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 20)]
                kernel.shared_1[((threadIdx.x_2*12) + 9)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 27)]
                kernel.shared_1[((threadIdx.x_2*12) + 10)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 28)]
                kernel.shared_1[((threadIdx.x_2*12) + 11)] = kernel[((((((blockIdx.x*36864) + (floordiv(threadIdx.x_2, 16)*4608)) + cse_var_2) + (floormod(threadIdx.x_2, 16)*36)) + cse_var_1) + 29)]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
                kernel.shared_1[((threadIdx.x_2*12) + 588)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 4), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 589)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 4), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 590)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 4), 64)*9)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 591)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 5), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 592)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 5), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 593)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 5), 64)*9)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 594)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 6), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 595)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 6), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 596)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 6), 64)*9)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 597)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 7), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 598)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 7), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 599)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 49), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 7), 64)*9)) + cse_var_1) + 2)]
              }
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
              if @tir.likely((threadIdx.x_2 < 30), dtype=bool) {
                kernel.shared_1[((threadIdx.x_2*12) + 1176)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 8), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1177)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 8), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1178)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 8), 64)*9)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 1179)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 9), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1180)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 9), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1181)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 9), 64)*9)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 1182)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 10), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1183)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 10), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1184)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 10), 64)*9)) + cse_var_1) + 2)]
                kernel.shared_1[((threadIdx.x_2*12) + 1185)] = kernel[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 11), 64)*9)) + cse_var_1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1186)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 11), 64)*9)) + cse_var_1) + 1)]
                kernel.shared_1[((threadIdx.x_2*12) + 1187)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 98), 16)*4608)) + cse_var_2) + (floormod(((threadIdx.x_2*4) + 11), 64)*9)) + cse_var_1) + 2)]
              }
              for (rc.outer.inner: int32, 0, 4) {
                let cse_var_5: int32 = (rc.outer.inner*48)
                 {
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[cse_var_5]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 3)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 6)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 9)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 12)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 15)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 18)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 21)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 24)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 27)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 30)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 33)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 36)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 39)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 42)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 45)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 192)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 195)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 198)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 201)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 204)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 207)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 210)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 213)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 216)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 219)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 222)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 225)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 228)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 231)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 234)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 237)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 384)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 387)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 390)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 393)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 396)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 399)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 402)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 405)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 408)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 411)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 414)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 417)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 420)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 423)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 426)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 429)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 576)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 579)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 582)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 585)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 588)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 591)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 594)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 597)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 600)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 603)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 606)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 609)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 612)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 615)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 618)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 621)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 768)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 771)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 774)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 777)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 780)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 783)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 786)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 789)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 792)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 795)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 798)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 801)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 804)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 807)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 810)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 813)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 960)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 963)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 966)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 969)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 972)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 975)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 978)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 981)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 984)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 987)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 990)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 993)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 996)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 999)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 1002)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 1005)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 1152)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 1155)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 1158)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 1161)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 1164)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 1167)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 1170)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 1173)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 1176)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 1179)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 1182)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 1185)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 1188)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 1191)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 1194)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 1197)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*kernel.shared_1[(cse_var_5 + 1344)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[(cse_var_5 + 1347)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[(cse_var_5 + 1350)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[(cse_var_5 + 1353)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[(cse_var_5 + 1356)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[(cse_var_5 + 1359)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[(cse_var_5 + 1362)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[(cse_var_5 + 1365)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[(cse_var_5 + 1368)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[(cse_var_5 + 1371)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[(cse_var_5 + 1374)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[(cse_var_5 + 1377)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[(cse_var_5 + 1380)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[(cse_var_5 + 1383)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[(cse_var_5 + 1386)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[(cse_var_5 + 1389)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 1)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 4)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 7)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 10)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 13)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 16)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 19)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 22)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 25)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 28)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 31)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 34)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 37)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 40)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 43)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 46)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 193)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 196)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 199)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 202)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 205)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 208)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 211)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 214)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 217)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 220)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 223)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 226)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 229)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 232)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 235)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 238)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 385)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 388)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 391)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 394)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 397)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 400)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 403)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 406)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 409)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 412)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 415)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 418)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 421)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 424)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 427)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 430)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 577)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 580)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 583)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 586)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 589)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 592)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 595)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 598)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 601)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 604)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 607)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 610)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 613)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 616)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 619)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 622)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 769)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 772)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 775)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 778)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 781)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 784)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 787)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 790)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 793)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 796)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 799)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 802)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 805)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 808)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 811)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 814)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 961)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 964)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 967)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 970)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 973)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 976)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 979)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 982)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 985)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 988)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 991)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 994)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 997)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 1000)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 1003)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 1006)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 1153)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 1156)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 1159)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 1162)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 1165)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 1168)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 1171)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 1174)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 1177)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 1180)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 1183)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 1186)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 1189)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 1192)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 1195)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 1198)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[(cse_var_5 + 1345)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[(cse_var_5 + 1348)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[(cse_var_5 + 1351)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[(cse_var_5 + 1354)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[(cse_var_5 + 1357)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[(cse_var_5 + 1360)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[(cse_var_5 + 1363)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[(cse_var_5 + 1366)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[(cse_var_5 + 1369)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[(cse_var_5 + 1372)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[(cse_var_5 + 1375)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[(cse_var_5 + 1378)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[(cse_var_5 + 1381)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[(cse_var_5 + 1384)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[(cse_var_5 + 1387)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[(cse_var_5 + 1390)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 2)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 5)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 8)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 11)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 14)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 17)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 20)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 23)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 26)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 29)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 32)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 35)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 38)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 41)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 44)]))
                  conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 47)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 194)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 197)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 200)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 203)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 206)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 209)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 212)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 215)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 218)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 221)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 224)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 227)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 230)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 233)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 236)]))
                  conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 239)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 386)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 389)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 392)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 395)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 398)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 401)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 404)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 407)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 410)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 413)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 416)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 419)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 422)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 425)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 428)]))
                  conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 431)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 578)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 581)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 584)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 587)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 590)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 593)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 596)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 599)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 602)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 605)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 608)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 611)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 614)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 617)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 620)]))
                  conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 623)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 770)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 773)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 776)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 779)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 782)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 785)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 788)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 791)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 794)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 797)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 800)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 803)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 806)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 809)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 812)]))
                  conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 815)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 962)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 965)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 968)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 971)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 974)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 977)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 980)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 983)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 986)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 989)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 992)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 995)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 998)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 1001)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 1004)]))
                  conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 1007)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 1154)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 1157)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 1160)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 1163)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 1166)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 1169)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 1172)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 1175)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 1178)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 1181)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 1184)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 1187)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 1190)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 1193)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 1196)]))
                  conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 1199)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[(cse_var_5 + 1346)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[(cse_var_5 + 1349)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[(cse_var_5 + 1352)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[(cse_var_5 + 1355)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[(cse_var_5 + 1358)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[(cse_var_5 + 1361)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[(cse_var_5 + 1364)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[(cse_var_5 + 1367)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[(cse_var_5 + 1370)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[(cse_var_5 + 1373)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[(cse_var_5 + 1376)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[(cse_var_5 + 1379)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[(cse_var_5 + 1382)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[(cse_var_5 + 1385)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[(cse_var_5 + 1388)]))
                  conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((((rc.outer.inner*1008) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[(cse_var_5 + 1391)]))
                }
              }
            }
          }
        }
        for (i1.inner: int32, 0, 8) {
          compute[(((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x)] = max((conv2d_nchw_1[i1.inner] + bias[((blockIdx.x*8) + i1.inner)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.305 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=16)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=8)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=12)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(49) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[8];
      __shared__ float pad_temp_shared[4032];
      __shared__ float kernel_shared[1536];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 49)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 49) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 98) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 147)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 147) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 196) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 245)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 245) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 294) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 343)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 343) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 392) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 441)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 335)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 490) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 539)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 539) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 588) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 637)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 637) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 686) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 735)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 735) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 784) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 833)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 833) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 931)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 931) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 980) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1029)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1029) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1078)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1078) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1127)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1127) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1176) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1225)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1225) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1274)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1274) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1323)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1021)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1372) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1421)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1421) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1470)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1470) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1519)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1519) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1568) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1617)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1617) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1666)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1666) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1715)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1715) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1764)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1364)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1813)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1813) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1862)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1862) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1911)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1911) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 1960) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2009)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2009) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2058)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2058) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2107)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2107) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2156)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2156) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2205)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1707)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2254)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2254) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2303)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2303) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2352)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2352) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2401)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2401) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2450)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2450) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2499)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2499) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2548)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2548) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2597)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2597) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2646)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 2050)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2695)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2695) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2744)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2744) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2793)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2793) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2842)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2842) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2891)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2891) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2940)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2940) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2989)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 2989) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3038)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3038) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3087)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 2393)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3136)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3136) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3185)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3185) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3234)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3234) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3283)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3283) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3332)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3332) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3381)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3381) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3430)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3430) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3479)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3479) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3528)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 2736)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3577)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3577) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3626)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3626) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3675)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3675) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3724)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3724) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3773)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3773) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3822)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3822) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3871)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3871) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3920)] = ((((((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 3920) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3969)] = ((((1 <= ((((int)threadIdx.x) / 9) + ry_outer_outer)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 3079)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 14) {
            pad_temp_shared[(((int)threadIdx.x) + 4018)] = ((((((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 3136) + (((((int)threadIdx.x) + 4018) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          }
          kernel_shared[(((int)threadIdx.x) * 12)] = kernel[(((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3))];
          kernel_shared[((((int)threadIdx.x) * 12) + 1)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[((((int)threadIdx.x) * 12) + 2)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[((((int)threadIdx.x) * 12) + 3)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 9)];
          kernel_shared[((((int)threadIdx.x) * 12) + 4)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 10)];
          kernel_shared[((((int)threadIdx.x) * 12) + 5)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 11)];
          kernel_shared[((((int)threadIdx.x) * 12) + 6)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 18)];
          kernel_shared[((((int)threadIdx.x) * 12) + 7)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 19)];
          kernel_shared[((((int)threadIdx.x) * 12) + 8)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 20)];
          kernel_shared[((((int)threadIdx.x) * 12) + 9)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 27)];
          kernel_shared[((((int)threadIdx.x) * 12) + 10)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 28)];
          kernel_shared[((((int)threadIdx.x) * 12) + 11)] = kernel[((((((((int)blockIdx.x) * 36864) + ((((int)threadIdx.x) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((int)threadIdx.x) & 15) * 36)) + (ry_outer_outer * 3)) + 29)];
          kernel_shared[((((int)threadIdx.x) * 12) + 588)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 4) & 63) * 9)) + (ry_outer_outer * 3))];
          kernel_shared[((((int)threadIdx.x) * 12) + 589)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 4) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[((((int)threadIdx.x) * 12) + 590)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 4) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[((((int)threadIdx.x) * 12) + 591)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 5) & 63) * 9)) + (ry_outer_outer * 3))];
          kernel_shared[((((int)threadIdx.x) * 12) + 592)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 5) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[((((int)threadIdx.x) * 12) + 593)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 5) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[((((int)threadIdx.x) * 12) + 594)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 6) & 63) * 9)) + (ry_outer_outer * 3))];
          kernel_shared[((((int)threadIdx.x) * 12) + 595)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 6) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[((((int)threadIdx.x) * 12) + 596)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 6) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
          kernel_shared[((((int)threadIdx.x) * 12) + 597)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 7) & 63) * 9)) + (ry_outer_outer * 3))];
          kernel_shared[((((int)threadIdx.x) * 12) + 598)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 7) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
          kernel_shared[((((int)threadIdx.x) * 12) + 599)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 49) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 7) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
          if (((int)threadIdx.x) < 30) {
            kernel_shared[((((int)threadIdx.x) * 12) + 1176)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 8) & 63) * 9)) + (ry_outer_outer * 3))];
            kernel_shared[((((int)threadIdx.x) * 12) + 1177)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 8) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1178)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 8) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1179)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 9) & 63) * 9)) + (ry_outer_outer * 3))];
            kernel_shared[((((int)threadIdx.x) * 12) + 1180)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 9) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1181)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 9) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1182)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 10) & 63) * 9)) + (ry_outer_outer * 3))];
            kernel_shared[((((int)threadIdx.x) * 12) + 1183)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 10) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1184)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 10) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1185)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 11) & 63) * 9)) + (ry_outer_outer * 3))];
            kernel_shared[((((int)threadIdx.x) * 12) + 1186)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 11) & 63) * 9)) + (ry_outer_outer * 3)) + 1)];
            kernel_shared[((((int)threadIdx.x) * 12) + 1187)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) >> 4) * 4608)) + (rc_outer_outer * 576)) + ((((((int)threadIdx.x) * 4) + 11) & 63) * 9)) + (ry_outer_outer * 3)) + 2)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 4; ++rc_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[(rc_outer_inner * 48)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 3)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 6)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 9)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 12)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 15)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 18)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 21)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 24)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 27)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 30)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 33)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 36)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 39)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 42)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 45)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 192)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 195)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 198)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 201)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 204)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 207)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 210)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 213)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 216)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 219)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 222)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 225)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 228)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 231)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 234)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 237)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 384)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 387)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 390)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 393)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 396)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 399)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 402)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 405)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 408)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 411)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 414)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 417)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 420)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 423)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 426)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 429)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 576)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 579)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 582)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 585)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 588)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 591)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 594)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 597)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 600)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 603)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 606)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 609)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 612)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 615)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 618)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 621)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 768)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 771)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 774)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 777)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 780)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 783)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 786)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 789)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 792)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 795)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 798)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 801)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 804)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 807)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 810)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 813)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 960)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 963)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 966)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 969)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 972)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 975)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 978)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 981)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 984)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 987)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 990)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 993)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 996)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 999)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 1002)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 1005)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 1152)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 1155)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 1158)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 1161)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 1164)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 1167)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 1170)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 1173)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 1176)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 1179)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 1182)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 1185)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 1188)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 1191)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 1194)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 1197)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7))] * kernel_shared[((rc_outer_inner * 48) + 1344)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[((rc_outer_inner * 48) + 1347)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[((rc_outer_inner * 48) + 1350)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[((rc_outer_inner * 48) + 1353)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[((rc_outer_inner * 48) + 1356)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[((rc_outer_inner * 48) + 1359)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[((rc_outer_inner * 48) + 1362)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[((rc_outer_inner * 48) + 1365)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[((rc_outer_inner * 48) + 1368)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[((rc_outer_inner * 48) + 1371)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[((rc_outer_inner * 48) + 1374)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[((rc_outer_inner * 48) + 1377)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[((rc_outer_inner * 48) + 1380)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[((rc_outer_inner * 48) + 1383)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[((rc_outer_inner * 48) + 1386)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[((rc_outer_inner * 48) + 1389)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 1)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 4)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 7)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 10)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 13)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 16)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 19)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 22)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 25)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 28)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 31)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 34)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 37)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 40)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 43)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 46)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 193)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 196)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 199)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 202)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 205)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 208)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 211)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 214)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 217)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 220)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 223)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 226)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 229)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 232)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 235)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 238)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 385)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 388)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 391)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 394)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 397)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 400)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 403)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 406)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 409)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 412)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 415)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 418)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 421)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 424)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 427)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 430)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 577)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 580)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 583)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 586)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 589)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 592)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 595)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 598)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 601)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 604)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 607)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 610)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 613)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 616)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 619)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 622)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 769)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 772)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 775)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 778)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 781)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 784)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 787)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 790)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 793)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 796)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 799)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 802)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 805)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 808)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 811)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 814)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 961)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 964)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 967)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 970)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 973)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 976)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 979)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 982)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 985)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 988)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 991)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 994)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 997)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 1000)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 1003)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 1006)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 1153)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 1156)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 1159)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 1162)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 1165)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 1168)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 1171)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 1174)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 1177)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 1180)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 1183)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 1186)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 1189)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 1192)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 1195)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 1198)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[((rc_outer_inner * 48) + 1345)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[((rc_outer_inner * 48) + 1348)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[((rc_outer_inner * 48) + 1351)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[((rc_outer_inner * 48) + 1354)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[((rc_outer_inner * 48) + 1357)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[((rc_outer_inner * 48) + 1360)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[((rc_outer_inner * 48) + 1363)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[((rc_outer_inner * 48) + 1366)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[((rc_outer_inner * 48) + 1369)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[((rc_outer_inner * 48) + 1372)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[((rc_outer_inner * 48) + 1375)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[((rc_outer_inner * 48) + 1378)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[((rc_outer_inner * 48) + 1381)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[((rc_outer_inner * 48) + 1384)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[((rc_outer_inner * 48) + 1387)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[((rc_outer_inner * 48) + 1390)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 2)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 5)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 8)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 11)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 14)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 17)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 20)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 23)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 26)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 29)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 32)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 35)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 38)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 41)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 44)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 47)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 194)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 197)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 200)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 203)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 206)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 209)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 212)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 215)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 218)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 221)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 224)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 227)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 230)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 233)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 236)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 239)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 386)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 389)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 392)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 395)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 398)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 401)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 404)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 407)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 410)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 413)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 416)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 419)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 422)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 425)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 428)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 431)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 578)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 581)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 584)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 587)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 590)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 593)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 596)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 599)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 602)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 605)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 608)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 611)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 614)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 617)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 620)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 623)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 770)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 773)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 776)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 779)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 782)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 785)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 788)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 791)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 794)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 797)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 800)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 803)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 806)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 809)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 812)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 815)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 962)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 965)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 968)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 971)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 974)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 977)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 980)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 983)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 986)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 989)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 992)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 995)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 998)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 1001)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 1004)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 1007)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 1154)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 1157)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 1160)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 1163)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 1166)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 1169)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 1172)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 1175)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 1178)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 1181)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 1184)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 1187)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 1190)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 1193)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 1196)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 1199)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[((rc_outer_inner * 48) + 1346)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[((rc_outer_inner * 48) + 1349)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[((rc_outer_inner * 48) + 1352)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[((rc_outer_inner * 48) + 1355)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[((rc_outer_inner * 48) + 1358)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[((rc_outer_inner * 48) + 1361)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[((rc_outer_inner * 48) + 1364)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[((rc_outer_inner * 48) + 1367)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[((rc_outer_inner * 48) + 1370)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[((rc_outer_inner * 48) + 1373)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[((rc_outer_inner * 48) + 1376)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[((rc_outer_inner * 48) + 1379)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[((rc_outer_inner * 48) + 1382)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[((rc_outer_inner * 48) + 1385)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[((rc_outer_inner * 48) + 1388)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((rc_outer_inner * 1008) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[((rc_outer_inner * 48) + 1391)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
        compute[(((((int)blockIdx.x) * 392) + (i1_inner * 49)) + ((int)threadIdx.x))] = max((conv2d_nchw[i1_inner] + bias[((((int)blockIdx.x) * 8) + i1_inner)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  35.151 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
