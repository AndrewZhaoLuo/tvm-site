
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 48-53

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 53-65

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 66-69

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 69-82

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 83-100

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 100-110

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 111-117

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 117-126

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 127-130

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 130-134

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 28;
      allocate(conv2d_nchw: Pointer(local float32), float32, [16]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [108]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [4608]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [16], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[15] = 0f32
        for (rc.outer.outer: int32, 0, 128) {
          let cse_var_1: int32 = (rc.outer.outer*36)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [108], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((3 <= floormod(threadIdx.x_1, 27)) && (floormod(threadIdx.x_1, 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)))) && ((floormod(blockIdx.x, 7) + floormod(threadIdx.x_1, 3)) < 8)), data[((((((rc.outer.outer*196) + (floordiv(threadIdx.x_1, 27)*49)) + (floordiv(floormod(threadIdx.x_1, 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod(threadIdx.x_1, 3)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            if @tir.likely((threadIdx.x_1 < 52), dtype=bool) {
              pad_temp.shared_1[(threadIdx.x_1 + 56)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1 + 2), 27)) && (floormod((threadIdx.x_1 + 2), 27) < 24)) && (1 <= (floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)))) && ((floormod(blockIdx.x, 7) + floormod((threadIdx.x_1 + 2), 3)) < 8)), data[((((((rc.outer.outer*196) + (floordiv((threadIdx.x_1 + 56), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 2), 27), 3)*7)) + floormod(blockIdx.x, 7)) + floormod((threadIdx.x_1 + 2), 3)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1: Buffer(kernel.shared, float32, [4608], [], scope="shared")[threadIdx.x_2] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 56)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 56), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 112), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 168)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 168), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 224), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 280)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 280), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 336), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 392), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 448), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 504)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 560)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 560), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 616)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 616), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 672), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 728)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 728), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 784), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 840)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 840), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 896), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 952)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 952), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 129024)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1064)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1064), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1120), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1176), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1232)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1232), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1288)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1288), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1344)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1344), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1400)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1400), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1456)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1456), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1512)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 193536)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1568), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1624)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1624), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1680)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1680), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1736)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1736), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1792)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1792), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1848)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1848), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1904)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1904), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 1960)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 1960), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2016)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 258048)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2072)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2072), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2128)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2128), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2184)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2184), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2240)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2240), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2296)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2296), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2352)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2352), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2408)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2408), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2464)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2464), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2520)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 322560)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2576)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2576), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2632)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2632), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2688)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2688), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2744)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2744), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2800)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2800), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2856)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2856), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2912)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2912), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 2968)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 2968), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3024)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 387072)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3080)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3080), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3136)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3136), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3192)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3192), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3248)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3248), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3304)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3304), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3360)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3360), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3416)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3416), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3472)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3472), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3528)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 451584)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3584)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3584), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3640)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3640), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3696)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3696), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3752)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3752), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3808)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3808), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3864)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3864), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3920)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3920), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 3976)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 3976), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4032)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 516096)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4088)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4088), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4144)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4144), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4200)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4200), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 24), 36), 9)*9)) + floormod((threadIdx.x_2 + 6), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4256)] = kernel[((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4256), 36)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4312)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4312), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 28), 36), 9)*9)) + floormod((threadIdx.x_2 + 1), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4368)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4368), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 12), 36), 9)*9)) + floormod((threadIdx.x_2 + 3), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4424)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4424), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 32), 36), 9)*9)) + floormod((threadIdx.x_2 + 5), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4480)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4480), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 16), 36), 9)*9)) + floormod((threadIdx.x_2 + 7), 9))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            kernel.shared_1[(threadIdx.x_2 + 4536)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv(threadIdx.x_2, 36)*4608)) + cse_var_1) + floormod(threadIdx.x_2, 36)) + 580608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
            if @tir.likely((threadIdx.x_2 < 16), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 4592)] = kernel[(((((floordiv(blockIdx.x, 7)*589824) + (floordiv((threadIdx.x_2 + 4592), 36)*4608)) + cse_var_1) + (floordiv(floormod((threadIdx.x_2 + 20), 36), 9)*9)) + floormod((threadIdx.x_2 + 2), 9))]
            }
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[(floordiv(threadIdx.x, 7)*144)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1152)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2304)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3456)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 36)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1188)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2340)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3492)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1153)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2305)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3457)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 37)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1189)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2341)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3493)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1154)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2306)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3458)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 38)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1190)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2342)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3494)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 72)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1224)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2376)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3528)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 108)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1260)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2412)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(floormod(threadIdx.x, 7)*3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3564)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 73)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1225)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2377)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3529)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 109)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1261)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2413)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3565)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 74)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1226)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2378)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3530)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 110)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1262)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2414)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3566)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1155)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2307)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3459)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 39)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1191)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2343)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3495)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 4)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1156)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2308)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3460)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 40)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1192)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2344)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3496)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 5)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1157)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2309)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3461)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 41)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1193)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2345)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3497)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 75)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1227)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2379)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3531)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 111)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1263)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2415)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3567)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 76)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1228)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2380)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3532)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 112)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1264)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2416)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3568)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 77)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1229)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2381)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3533)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 113)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1265)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2417)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3569)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 6)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1158)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2310)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3462)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 42)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1194)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2346)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3498)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 7)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1159)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2311)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3463)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 43)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1195)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2347)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3499)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 8)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1160)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2312)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3464)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 44)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1196)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2348)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3500)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 78)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1230)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2382)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3534)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 114)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1266)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2418)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3570)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 79)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1231)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2383)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3535)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 115)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1267)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2419)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 7)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3571)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 80)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1232)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2384)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3536)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 116)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1268)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2420)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 8)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3572)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 9)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1161)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2313)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3465)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 45)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1197)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2349)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3501)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 10)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1162)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2314)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3466)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 46)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1198)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2350)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3502)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 11)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1163)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2315)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3467)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 47)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1199)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2351)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3503)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 81)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1233)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2385)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3537)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 117)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1269)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2421)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 27)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3573)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 82)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1234)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2386)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3538)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 118)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1270)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2422)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 28)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3574)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 83)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1235)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2387)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3539)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 119)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1271)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2423)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 29)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3575)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 12)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1164)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2316)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3468)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 48)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1200)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2352)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3504)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 13)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1165)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2317)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3469)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 49)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1201)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2353)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3505)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 14)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1166)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2318)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3470)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 50)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1202)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2354)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3506)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 84)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1236)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2388)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3540)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 120)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1272)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2424)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 30)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3576)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 85)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1237)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2389)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3541)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 121)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1273)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2425)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 31)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3577)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 86)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1238)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2390)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3542)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 122)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1274)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2426)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 32)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3578)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 15)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1167)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2319)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3471)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 51)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1203)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2355)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3507)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 16)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1168)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2320)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3472)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 52)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1204)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2356)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3508)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 17)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1169)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2321)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3473)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 53)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1205)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2357)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3509)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 87)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1239)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2391)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3543)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 123)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1275)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2427)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 33)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3579)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 88)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1240)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2392)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3544)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 124)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1276)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2428)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 34)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3580)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 89)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1241)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2393)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3545)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 125)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1277)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2429)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 35)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3581)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 18)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1170)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2322)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3474)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 54)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1206)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2358)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3510)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 19)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1171)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2323)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3475)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 55)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1207)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2359)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3511)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 20)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1172)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2324)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3476)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 56)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1208)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2360)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3512)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 90)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1242)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2394)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3546)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 126)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1278)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2430)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 54)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3582)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 91)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1243)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2395)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3547)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 127)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1279)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2431)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 55)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3583)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 92)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1244)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2396)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3548)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 128)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1280)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2432)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 56)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3584)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 21)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1173)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2325)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3477)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 57)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1209)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2361)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3513)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 22)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1174)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2326)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3478)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 58)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1210)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2362)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3514)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 23)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1175)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2327)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3479)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 59)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1211)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2363)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3515)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 93)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1245)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2397)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3549)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 129)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1281)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2433)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 57)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3585)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 94)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1246)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2398)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3550)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 130)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1282)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2434)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 58)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3586)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 95)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1247)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2399)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3551)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 131)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1283)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2435)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 59)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3587)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 24)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1176)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2328)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3480)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 60)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1212)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2364)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3516)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 25)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1177)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2329)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3481)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 61)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1213)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2365)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3517)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 26)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1178)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2330)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3482)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 62)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1214)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2366)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3518)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 96)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1248)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2400)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3552)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 132)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1284)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2436)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 60)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3588)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 97)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1249)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2401)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3553)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 133)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1285)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2437)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 61)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3589)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 98)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1250)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2402)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3554)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 134)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1286)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2438)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 62)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3590)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 27)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1179)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2331)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3483)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 63)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1215)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2367)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3519)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 28)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1180)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2332)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3484)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 64)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1216)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2368)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3520)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 29)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1181)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2333)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3485)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 65)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1217)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2369)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3521)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 99)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1251)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2403)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3555)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 135)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1287)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2439)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 81)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3591)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 100)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1252)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2404)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3556)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 136)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1288)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2440)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 82)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3592)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 101)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1253)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2405)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3557)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 137)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1289)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2441)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 83)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3593)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 30)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1182)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2334)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3486)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 66)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1218)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2370)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3522)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 31)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1183)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2335)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3487)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 67)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1219)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2371)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3523)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 32)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1184)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2336)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3488)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 68)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1220)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2372)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3524)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 102)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1254)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2406)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3558)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 138)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1290)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2442)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 84)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3594)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 103)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1255)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2407)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3559)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 139)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1291)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2443)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 85)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3595)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 104)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1256)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2408)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3560)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 140)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1292)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2444)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 86)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3596)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 33)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1185)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2337)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3489)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 69)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1221)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2373)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3525)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 34)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1186)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2338)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3490)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 70)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1222)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2374)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3526)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 35)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1187)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2339)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3491)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 71)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1223)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2375)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3527)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 105)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1257)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2409)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3561)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 141)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1293)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2445)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 87)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3597)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 106)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1258)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2410)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3562)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 142)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1294)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2446)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 88)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3598)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 107)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1259)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2411)]))
            conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3563)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 143)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 1295)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 2447)]))
            conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*3) + 89)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + 3599)]))
          }
        }
        for (i1.inner: int32, 0, 4) {
          compute[(((((floordiv(blockIdx.x, 7)*6272) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + floormod(blockIdx.x, 7))] = max((conv2d_nchw_1[i1.inner] + bias[(((floordiv(blockIdx.x, 7)*128) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[((((((floordiv(blockIdx.x, 7)*6272) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + floormod(blockIdx.x, 7)) + 1568)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[((((floordiv(blockIdx.x, 7)*128) + (floordiv(threadIdx.x, 7)*4)) + i1.inner) + 32)]), 0f32)
          compute[((((((floordiv(blockIdx.x, 7)*6272) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + floormod(blockIdx.x, 7)) + 3136)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[((((floordiv(blockIdx.x, 7)*128) + (floordiv(threadIdx.x, 7)*4)) + i1.inner) + 64)]), 0f32)
          compute[((((((floordiv(blockIdx.x, 7)*6272) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + floormod(blockIdx.x, 7)) + 4704)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[((((floordiv(blockIdx.x, 7)*128) + (floordiv(threadIdx.x, 7)*4)) + i1.inner) + 96)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 135-138

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 138-165

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.417 ms




.. GENERATED FROM PYTHON SOURCE LINES 166-171

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 173-176

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 176-183

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=4)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=1)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=4)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=8)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=4)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(56) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[16];
      __shared__ float pad_temp_shared[108];
      __shared__ float kernel_shared[4608];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 128; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((((3 <= (((int)threadIdx.x) % 27)) && ((((int)threadIdx.x) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)))) && (((((int)blockIdx.x) % 7) + (((int)threadIdx.x) % 3)) < 8)) ? data[((((((rc_outer_outer * 196) + ((((int)threadIdx.x) / 27) * 49)) + (((((int)threadIdx.x) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + (((int)threadIdx.x) % 3)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 52) {
          pad_temp_shared[(((int)threadIdx.x) + 56)] = (((((3 <= ((((int)threadIdx.x) + 2) % 27)) && (((((int)threadIdx.x) + 2) % 27) < 24)) && (1 <= ((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)))) && (((((int)blockIdx.x) % 7) + ((((int)threadIdx.x) + 2) % 3)) < 8)) ? data[((((((rc_outer_outer * 196) + (((((int)threadIdx.x) + 56) / 27) * 49)) + ((((((int)threadIdx.x) + 2) % 27) / 3) * 7)) + (((int)blockIdx.x) % 7)) + ((((int)threadIdx.x) + 2) % 3)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36))];
        kernel_shared[(((int)threadIdx.x) + 56)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 56) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 112) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 168)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 168) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 224) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 280)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 280) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 336)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 336) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 392) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 448) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 504)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 560) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 616)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 616) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 672) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 728)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 728) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 784) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 840)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 840) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 896) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 952)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 952) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 129024)];
        kernel_shared[(((int)threadIdx.x) + 1064)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1064) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1120) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1176) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1232)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1232) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 1288)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1288) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1344)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1344) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1400)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1400) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1456)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1456) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1512)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 193536)];
        kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1568) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1624)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1624) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 1680)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1680) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1736)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1736) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 1792)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1792) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1848)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1848) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1904)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1904) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 1960) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2016)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 258048)];
        kernel_shared[(((int)threadIdx.x) + 2072)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2072) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2128)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2128) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 2184)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2184) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2240)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2240) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 2296)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2296) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2352) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2408)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2408) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2464)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2464) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2520)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 322560)];
        kernel_shared[(((int)threadIdx.x) + 2576)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2576) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2632)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2632) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 2688)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2688) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2744)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2744) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 2800)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2800) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2856)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2856) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2912)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2912) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 2968)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 2968) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3024)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 387072)];
        kernel_shared[(((int)threadIdx.x) + 3080)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3080) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3136)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3136) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 3192)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3192) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3248)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3248) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 3304)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3304) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3360)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3360) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3416)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3416) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3472)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3472) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3528)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 451584)];
        kernel_shared[(((int)threadIdx.x) + 3584)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3584) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3640)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3640) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 3696)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3696) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3752)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3752) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 3808)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3808) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3864)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3864) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3920)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3920) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 3976)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 3976) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4032)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 516096)];
        kernel_shared[(((int)threadIdx.x) + 4088)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4088) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 20) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4144)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4144) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 4) % 36))];
        kernel_shared[(((int)threadIdx.x) + 4200)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4200) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 24) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 6) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4256)] = kernel[(((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4256) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 8) % 36))];
        kernel_shared[(((int)threadIdx.x) + 4312)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4312) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 28) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 1) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4368)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4368) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 12) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 3) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4424)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4424) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 32) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 5) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4480)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4480) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((((int)threadIdx.x) + 16) % 36) / 9) * 9)) + ((((int)threadIdx.x) + 7) % 9))];
        kernel_shared[(((int)threadIdx.x) + 4536)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + ((((int)threadIdx.x) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) % 36)) + 580608)];
        if (((int)threadIdx.x) < 16) {
          kernel_shared[(((int)threadIdx.x) + 4592)] = kernel[((((((((int)blockIdx.x) / 7) * 589824) + (((((int)threadIdx.x) + 4592) / 36) * 4608)) + (rc_outer_outer * 36)) + (((((int)threadIdx.x) + 20) / 9) * 9)) + ((((int)threadIdx.x) + 2) % 9))];
        }
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[((((int)threadIdx.x) / 7) * 144)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1152)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2304)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3456)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1188)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2340)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3492)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1153)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2305)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3457)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1189)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2341)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3493)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1154)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2306)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3458)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1190)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2342)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3494)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1224)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2376)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3528)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1260)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2412)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) * 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3564)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1225)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2377)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3529)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1261)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2413)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3565)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1226)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2378)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3530)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1262)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2414)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3566)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1155)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2307)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3459)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1191)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2343)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3495)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1156)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2308)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3460)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1192)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2344)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3496)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1157)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2309)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3461)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1193)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2345)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3497)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1227)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2379)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3531)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1263)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2415)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3567)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1228)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2380)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3532)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1264)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2416)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3568)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1229)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2381)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3533)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1265)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2417)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3569)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1158)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2310)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3462)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1194)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2346)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3498)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1159)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2311)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3463)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1195)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2347)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3499)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1160)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2312)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3464)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1196)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2348)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3500)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1230)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2382)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3534)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1266)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2418)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3570)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1231)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2383)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3535)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1267)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2419)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 7)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3571)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1232)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2384)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3536)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1268)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2420)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 8)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3572)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1161)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2313)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3465)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1197)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2349)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3501)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1162)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2314)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3466)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1198)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2350)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3502)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1163)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2315)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3467)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1199)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2351)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3503)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1233)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2385)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3537)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1269)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2421)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 27)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3573)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1234)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2386)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3538)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1270)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2422)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 28)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3574)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1235)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2387)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3539)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1271)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2423)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 29)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3575)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1164)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2316)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3468)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1200)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2352)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3504)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1165)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2317)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3469)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1201)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2353)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3505)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1166)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2318)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3470)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1202)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2354)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3506)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1236)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2388)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3540)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1272)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2424)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 30)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3576)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1237)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2389)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3541)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1273)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2425)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 31)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3577)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1238)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2390)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3542)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1274)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2426)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 32)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3578)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1167)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2319)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3471)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1203)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2355)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3507)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1168)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2320)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3472)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1204)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2356)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3508)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1169)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2321)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3473)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1205)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2357)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3509)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1239)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2391)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3543)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1275)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2427)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 33)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3579)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1240)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2392)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3544)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1276)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2428)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 34)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3580)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1241)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2393)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3545)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1277)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2429)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 35)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3581)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1170)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2322)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3474)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1206)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2358)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3510)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1171)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2323)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3475)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1207)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2359)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3511)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1172)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2324)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3476)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1208)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2360)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3512)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1242)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2394)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3546)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1278)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2430)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 54)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3582)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1243)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2395)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3547)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1279)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2431)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 55)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3583)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1244)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2396)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3548)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1280)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2432)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 56)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3584)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1173)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2325)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3477)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1209)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2361)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3513)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1174)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2326)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3478)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1210)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2362)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3514)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1175)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2327)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3479)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1211)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2363)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3515)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1245)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2397)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3549)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1281)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2433)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 57)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3585)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1246)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2398)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3550)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1282)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2434)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 58)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3586)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1247)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2399)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3551)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1283)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2435)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 59)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3587)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1176)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2328)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3480)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1212)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2364)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3516)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1177)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2329)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3481)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1213)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2365)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3517)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1178)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2330)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3482)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1214)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2366)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3518)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1248)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2400)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3552)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1284)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2436)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 60)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3588)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1249)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2401)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3553)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1285)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2437)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 61)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3589)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1250)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2402)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3554)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1286)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2438)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 62)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3590)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1179)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2331)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3483)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1215)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2367)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3519)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1180)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2332)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3484)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1216)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2368)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3520)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1181)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2333)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3485)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1217)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2369)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3521)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1251)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2403)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3555)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1287)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2439)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 81)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3591)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1252)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2404)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3556)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1288)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2440)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 82)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3592)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1253)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2405)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3557)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1289)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2441)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 83)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3593)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1182)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2334)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3486)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1218)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2370)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3522)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1183)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2335)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3487)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1219)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2371)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3523)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1184)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2336)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3488)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1220)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2372)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3524)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1254)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2406)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3558)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1290)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2442)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 84)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3594)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1255)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2407)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3559)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1291)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2443)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 85)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3595)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1256)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2408)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3560)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1292)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2444)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 86)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3596)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1185)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2337)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3489)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1221)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2373)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3525)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1186)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2338)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3490)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1222)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2374)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3526)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1187)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2339)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3491)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1223)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2375)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3527)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1257)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2409)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3561)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1293)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2445)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 87)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3597)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1258)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2410)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3562)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1294)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2446)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 88)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3598)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1259)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2411)]));
        conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3563)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 1295)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 2447)]));
        conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 3) + 89)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + 3599)]));
      }
      for (int i1_inner = 0; i1_inner < 4; ++i1_inner) {
        compute[((((((((int)blockIdx.x) / 7) * 6272) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7))] = max((conv2d_nchw[i1_inner] + bias[((((((int)blockIdx.x) / 7) * 128) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((((int)blockIdx.x) / 7) * 6272) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7)) + 1568)] = max((conv2d_nchw[(i1_inner + 4)] + bias[(((((((int)blockIdx.x) / 7) * 128) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner) + 32)]), 0.000000e+00f);
        compute[(((((((((int)blockIdx.x) / 7) * 6272) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7)) + 3136)] = max((conv2d_nchw[(i1_inner + 8)] + bias[(((((((int)blockIdx.x) / 7) * 128) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner) + 64)]), 0.000000e+00f);
        compute[(((((((((int)blockIdx.x) / 7) * 6272) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + (((int)blockIdx.x) % 7)) + 4704)] = max((conv2d_nchw[(i1_inner + 12)] + bias[(((((((int)blockIdx.x) / 7) * 128) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner) + 96)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 184-188

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 188-210

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  33.135 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
