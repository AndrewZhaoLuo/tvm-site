
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-48

.. code-block:: default



    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 54-59

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 59-71

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 72-75

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 75-88

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 89-106

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 106-116

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 117-123

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 123-132

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 133-136

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      allocate(conv2d_nchw: Pointer(local float32), float32, [2]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [8064]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [3072]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [2], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[1] = 0f32
        for (rc.outer.outer: int32, 0, 4) {
          for (ry.outer.outer: int32, 0, 3) {
            let cse_var_4: int32 = (rc.outer.outer*6272)
            let cse_var_3: int32 = (ry.outer.outer*7)
            let cse_var_2: int32 = (rc.outer.outer*1152)
            let cse_var_1: int32 = (ry.outer.outer*3)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [8064], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer)) && ((floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 196), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 392), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 588), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 784), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 980), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1176), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 1372)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1372), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 1568)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1568), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 1764)] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer)) && ((floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 1364)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 1960)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 1960), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 2156)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2156), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 2352)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2352), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 2548)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2548), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 2744)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2744), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 2940)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 2940), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 3136)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3136), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 3332)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3332), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 3528)] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer)) && ((floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 2736)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 3724)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3724), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 3920)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 3920), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 4116)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 4116), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 4312)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 4312), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 4508)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 4508), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 4704)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 4704), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 4900)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 4900), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 5096)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 5096), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 5292)] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer)) && ((floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 4108)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 5488)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 5488), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 5684)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 5684), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 5880)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 5880), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 6076)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 6076), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 6272)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 6272), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 6468)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 42), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 6468), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 6664)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 49), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 6664), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 6860)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 56), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 6860), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 7056)] = @tir.if_then_else(((((1 <= (floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer)) && ((floordiv(floormod(threadIdx.x_1, 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), data[((((cse_var_4 + (floordiv(threadIdx.x_1, 9)*7)) + cse_var_3) + floormod(threadIdx.x_1, 9)) + 5480)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 7252)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 7), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 7252), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 7448)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 14), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 7448), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 7644)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 21), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 7644), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              pad_temp.shared_1[(threadIdx.x_1 + 7840)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1 + 28), 63), 9) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 7840), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              if @tir.likely((threadIdx.x_1 < 28), dtype=bool) {
                pad_temp.shared_1[(threadIdx.x_1 + 8036)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 35), 63), 9) + ry.outer.outer) < 8) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_4 + (floordiv((threadIdx.x_1 + 8036), 9)*7)) + cse_var_3) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
              }
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1: Buffer(kernel.shared, float32, [3072], [], scope="shared")[threadIdx.x_2] = kernel[(((((blockIdx.x*36864) + cse_var_2) + (floordiv(threadIdx.x_2, 3)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 196), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 196), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 392), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 8), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 588)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 588), 384)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 68), 128)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 784), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 16), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 980)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 980), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 212), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 1176)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1176), 384)*4608)) + cse_var_2) + ((floordiv(threadIdx.x_2, 3) + 8)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 1372)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1372), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 220), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 1568)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1568), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 32), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 1764)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1764), 384)*4608)) + cse_var_2) + (floormod((floordiv(threadIdx.x_2, 3) + 76), 128)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 1960)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1960), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 40), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 2156)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2156), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 236), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 2352)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2352), 384)*4608)) + cse_var_2) + ((floordiv(threadIdx.x_2, 3) + 16)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 2548)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2548), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 244), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 1), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              kernel.shared_1[(threadIdx.x_2 + 2744)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2744), 384)*4608)) + cse_var_2) + (floordiv(floormod((threadIdx.x_2 + 56), 384), 3)*9)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 3))]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 196;
              if @tir.likely((threadIdx.x_2 < 132), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 2940)] = kernel[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 2940), 384)*4608)) + cse_var_2) + ((floordiv(threadIdx.x_2, 3) + 84)*9)) + cse_var_1) + floormod(threadIdx.x_2, 3))]
              }
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[(floordiv(threadIdx.x, 49)*768)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7))]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 384)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 1)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 385)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 2)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 386)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 3)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 63)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 387)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 4)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 64)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 388)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 5)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 65)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 389)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 6)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 126)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 390)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 7)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 127)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 391)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 8)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 128)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 392)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 9)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 189)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 393)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 10)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 190)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 394)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 11)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 191)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 395)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 12)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 252)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 396)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 13)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 253)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 397)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 14)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 254)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 398)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 15)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 315)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 399)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 16)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 316)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 400)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 17)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 317)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 401)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 18)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 378)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 402)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 19)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 379)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 403)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 20)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 380)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 404)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 21)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 441)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 405)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 22)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 442)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 406)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 23)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 443)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 407)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 24)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 504)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 408)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 25)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 505)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 409)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 26)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 506)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 410)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 27)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 567)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 411)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 28)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 568)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 412)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 29)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 569)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 413)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 30)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 630)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 414)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 31)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 631)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 415)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 32)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 632)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 416)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 33)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 693)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 417)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 34)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 694)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 418)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 35)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 695)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 419)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 36)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 756)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 420)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 37)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 757)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 421)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 38)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 758)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 422)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 39)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 819)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 423)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 40)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 820)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 424)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 41)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 821)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 425)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 42)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 882)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 426)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 43)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 883)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 427)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 44)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 884)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 428)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 45)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 945)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 429)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 46)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 946)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 430)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 47)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 947)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 431)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1008)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 48)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1008)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 432)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1009)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 49)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1009)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 433)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1010)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 50)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1010)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 434)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1071)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 51)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1071)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 435)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1072)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 52)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1072)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 436)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1073)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 53)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1073)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 437)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1134)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 54)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1134)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 438)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1135)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 55)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1135)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 439)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1136)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 56)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1136)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 440)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1197)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 57)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1197)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 441)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1198)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 58)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1198)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 442)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1199)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 59)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1199)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 443)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1260)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 60)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1260)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 444)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 61)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1261)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 445)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 62)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1262)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 446)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1323)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 63)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1323)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 447)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 64)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1324)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 448)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 65)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1325)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 449)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1386)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 66)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1386)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 450)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1387)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 67)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1387)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 451)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1388)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 68)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1388)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 452)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1449)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 69)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1449)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 453)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1450)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 70)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1450)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 454)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1451)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 71)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1451)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 455)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1512)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 72)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1512)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 456)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1513)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 73)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1513)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 457)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1514)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 74)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1514)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 458)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1575)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 75)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1575)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 459)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 76)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1576)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 460)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 77)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1577)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 461)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1638)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 78)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1638)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 462)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1639)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 79)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1639)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 463)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1640)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 80)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1640)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 464)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1701)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 81)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1701)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 465)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1702)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 82)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1702)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 466)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1703)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 83)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1703)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 467)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1764)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 84)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1764)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 468)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1765)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 85)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1765)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 469)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1766)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 86)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1766)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 470)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1827)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 87)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1827)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 471)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1828)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 88)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1828)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 472)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1829)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 89)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1829)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 473)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1890)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 90)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1890)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 474)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1891)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 91)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1891)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 475)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1892)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 92)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1892)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 476)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1953)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 93)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1953)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 477)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1954)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 94)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1954)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 478)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1955)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 95)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 1955)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 479)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2016)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 96)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2016)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 480)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2017)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 97)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2017)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 481)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2018)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 98)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2018)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 482)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2079)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 99)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2079)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 483)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2080)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 100)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2080)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 484)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2081)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 101)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2081)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 485)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2142)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 102)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2142)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 486)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2143)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 103)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2143)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 487)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2144)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 104)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2144)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 488)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2205)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 105)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2205)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 489)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2206)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 106)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2206)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 490)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2207)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 107)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2207)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 491)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2268)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 108)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2268)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 492)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2269)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 109)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2269)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 493)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2270)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 110)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2270)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 494)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2331)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 111)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2331)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 495)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2332)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 112)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2332)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 496)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 113)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2333)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 497)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2394)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 114)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2394)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 498)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2395)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 115)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2395)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 499)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2396)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 116)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2396)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 500)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2457)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 117)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2457)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 501)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2458)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 118)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2458)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 502)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2459)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 119)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2459)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 503)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2520)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 120)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2520)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 504)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2521)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 121)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2521)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 505)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2522)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 122)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2522)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 506)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2583)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 123)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2583)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 507)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2584)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 124)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2584)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 508)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 125)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2585)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 509)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2646)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 126)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2646)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 510)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2647)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 127)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2647)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 511)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2648)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 128)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2648)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 512)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2709)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 129)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2709)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 513)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2710)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 130)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2710)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 514)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2711)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 131)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2711)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 515)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2772)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 132)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2772)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 516)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2773)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 133)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2773)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 517)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2774)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 134)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2774)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 518)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2835)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 135)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2835)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 519)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2836)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 136)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2836)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 520)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2837)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 137)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2837)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 521)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2898)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 138)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2898)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 522)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2899)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 139)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2899)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 523)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2900)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 140)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2900)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 524)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2961)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 141)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2961)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 525)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2962)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 142)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2962)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 526)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2963)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 143)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 2963)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 527)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3024)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 144)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3024)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 528)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3025)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 145)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3025)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 529)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3026)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 146)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3026)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 530)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3087)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 147)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3087)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 531)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3088)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 148)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3088)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 532)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3089)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 149)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3089)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 533)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3150)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 150)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3150)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 534)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3151)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 151)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3151)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 535)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3152)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 152)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3152)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 536)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3213)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 153)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3213)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 537)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3214)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 154)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3214)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 538)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3215)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 155)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3215)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 539)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3276)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 156)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3276)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 540)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3277)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 157)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3277)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 541)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3278)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 158)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3278)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 542)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3339)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 159)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3339)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 543)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3340)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 160)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3340)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 544)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3341)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 161)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3341)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 545)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3402)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 162)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3402)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 546)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3403)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 163)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3403)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 547)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3404)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 164)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3404)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 548)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3465)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 165)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3465)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 549)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3466)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 166)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3466)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 550)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3467)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 167)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3467)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 551)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3528)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 168)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3528)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 552)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3529)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 169)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3529)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 553)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3530)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 170)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3530)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 554)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3591)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 171)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3591)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 555)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3592)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 172)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3592)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 556)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3593)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 173)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3593)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 557)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3654)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 174)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3654)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 558)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3655)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 175)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3655)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 559)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3656)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 176)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3656)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 560)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3717)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 177)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3717)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 561)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3718)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 178)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3718)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 562)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3719)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 179)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3719)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 563)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3780)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 180)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3780)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 564)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3781)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 181)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3781)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 565)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3782)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 182)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3782)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 566)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3843)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 183)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3843)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 567)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3844)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 184)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3844)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 568)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3845)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 185)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3845)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 569)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3906)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 186)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3906)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 570)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3907)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 187)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3907)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 571)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3908)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 188)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3908)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 572)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3969)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 189)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3969)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 573)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3970)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 190)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3970)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 574)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3971)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 191)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 3971)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 575)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4032)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 192)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4032)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 576)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4033)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 193)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4033)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 577)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4034)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 194)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4034)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 578)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4095)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 195)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4095)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 579)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4096)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 196)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4096)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 580)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4097)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 197)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4097)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 581)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4158)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 198)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4158)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 582)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4159)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 199)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4159)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 583)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4160)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 200)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4160)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 584)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4221)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 201)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4221)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 585)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4222)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 202)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4222)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 586)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4223)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 203)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4223)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 587)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4284)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 204)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4284)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 588)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4285)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 205)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4285)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 589)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4286)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 206)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4286)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 590)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4347)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 207)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4347)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 591)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4348)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 208)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4348)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 592)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4349)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 209)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4349)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 593)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4410)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 210)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4410)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 594)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4411)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 211)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4411)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 595)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4412)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 212)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4412)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 596)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4473)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 213)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4473)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 597)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4474)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 214)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4474)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 598)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4475)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 215)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4475)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 599)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4536)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 216)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4536)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 600)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4537)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 217)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4537)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 601)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4538)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 218)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4538)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 602)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4599)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 219)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4599)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 603)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4600)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 220)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4600)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 604)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4601)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 221)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4601)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 605)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4662)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 222)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4662)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 606)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4663)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 223)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4663)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 607)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4664)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 224)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4664)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 608)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4725)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 225)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4725)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 609)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4726)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 226)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4726)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 610)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4727)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 227)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4727)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 611)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4788)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 228)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4788)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 612)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4789)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 229)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4789)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 613)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4790)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 230)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4790)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 614)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4851)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 231)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4851)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 615)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4852)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 232)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4852)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 616)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4853)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 233)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4853)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 617)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4914)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 234)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4914)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 618)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4915)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 235)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4915)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 619)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4916)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 236)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4916)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 620)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4977)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 237)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4977)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 621)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4978)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 238)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4978)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 622)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4979)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 239)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 4979)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 623)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5040)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 240)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5040)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 624)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5041)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 241)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5041)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 625)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5042)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 242)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5042)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 626)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5103)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 243)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5103)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 627)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5104)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 244)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5104)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 628)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5105)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 245)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5105)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 629)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5166)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 246)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5166)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 630)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5167)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 247)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5167)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 631)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5168)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 248)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5168)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 632)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5229)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 249)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5229)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 633)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5230)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 250)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5230)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 634)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5231)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 251)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5231)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 635)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5292)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 252)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5292)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 636)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5293)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 253)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5293)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 637)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5294)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 254)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5294)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 638)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5355)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 255)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5355)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 639)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5356)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 256)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5356)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 640)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5357)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 257)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5357)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 641)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5418)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 258)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5418)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 642)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5419)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 259)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5419)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 643)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5420)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 260)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5420)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 644)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5481)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 261)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5481)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 645)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5482)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 262)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5482)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 646)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5483)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 263)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5483)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 647)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5544)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 264)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5544)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 648)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5545)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 265)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5545)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 649)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5546)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 266)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5546)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 650)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5607)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 267)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5607)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 651)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5608)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 268)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5608)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 652)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5609)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 269)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5609)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 653)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5670)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 270)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5670)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 654)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5671)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 271)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5671)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 655)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5672)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 272)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5672)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 656)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5733)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 273)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5733)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 657)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5734)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 274)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5734)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 658)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5735)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 275)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5735)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 659)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5796)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 276)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5796)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 660)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5797)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 277)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5797)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 661)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5798)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 278)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5798)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 662)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5859)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 279)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5859)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 663)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5860)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 280)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5860)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 664)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5861)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 281)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5861)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 665)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5922)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 282)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5922)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 666)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5923)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 283)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5923)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 667)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5924)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 284)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5924)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 668)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5985)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 285)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5985)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 669)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5986)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 286)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5986)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 670)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5987)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 287)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 5987)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 671)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6048)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 288)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6048)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 672)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6049)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 289)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6049)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 673)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6050)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 290)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6050)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 674)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6111)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 291)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6111)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 675)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6112)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 292)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6112)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 676)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6113)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 293)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6113)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 677)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6174)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 294)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6174)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 678)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6175)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 295)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6175)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 679)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6176)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 296)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6176)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 680)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6237)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 297)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6237)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 681)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6238)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 298)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6238)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 682)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6239)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 299)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6239)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 683)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6300)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 300)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6300)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 684)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6301)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 301)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6301)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 685)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6302)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 302)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6302)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 686)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6363)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 303)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6363)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 687)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6364)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 304)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6364)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 688)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6365)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 305)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6365)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 689)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6426)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 306)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6426)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 690)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6427)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 307)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6427)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 691)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6428)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 308)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6428)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 692)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6489)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 309)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6489)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 693)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6490)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 310)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6490)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 694)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6491)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 311)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6491)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 695)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6552)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 312)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6552)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 696)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6553)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 313)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6553)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 697)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6554)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 314)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6554)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 698)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6615)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 315)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6615)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 699)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6616)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 316)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6616)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 700)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6617)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 317)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6617)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 701)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6678)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 318)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6678)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 702)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6679)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 319)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6679)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 703)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6680)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 320)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6680)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 704)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6741)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 321)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6741)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 705)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6742)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 322)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6742)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 706)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6743)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 323)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6743)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 707)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6804)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 324)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6804)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 708)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6805)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 325)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6805)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 709)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6806)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 326)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6806)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 710)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6867)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 327)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6867)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 711)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6868)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 328)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6868)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 712)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6869)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 329)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6869)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 713)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6930)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 330)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6930)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 714)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6931)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 331)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6931)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 715)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6932)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 332)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6932)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 716)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6993)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 333)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6993)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 717)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6994)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 334)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6994)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 718)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6995)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 335)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 6995)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 719)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7056)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 336)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7056)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 720)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7057)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 337)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7057)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 721)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7058)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 338)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7058)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 722)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7119)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 339)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7119)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 723)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7120)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 340)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7120)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 724)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7121)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 341)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7121)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 725)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 342)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7182)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 726)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7183)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 343)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7183)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 727)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7184)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 344)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7184)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 728)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 345)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7245)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 729)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7246)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 346)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7246)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 730)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7247)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 347)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7247)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 731)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7308)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 348)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7308)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 732)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7309)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 349)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7309)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 733)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7310)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 350)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7310)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 734)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7371)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 351)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7371)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 735)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7372)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 352)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7372)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 736)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7373)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 353)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7373)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 737)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7434)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 354)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7434)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 738)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7435)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 355)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7435)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 739)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7436)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 356)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7436)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 740)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 357)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7497)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 741)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7498)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 358)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7498)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 742)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7499)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 359)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7499)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 743)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7560)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 360)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7560)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 744)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7561)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 361)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7561)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 745)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7562)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 362)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7562)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 746)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7623)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 363)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7623)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 747)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7624)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 364)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7624)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 748)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7625)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 365)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7625)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 749)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7686)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 366)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7686)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 750)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7687)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 367)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7687)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 751)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7688)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 368)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7688)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 752)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7749)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 369)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7749)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 753)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7750)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 370)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7750)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 754)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7751)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 371)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7751)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 755)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7812)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 372)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7812)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 756)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7813)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 373)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7813)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 757)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7814)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 374)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7814)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 758)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7875)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 375)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7875)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 759)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7876)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 376)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7876)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 760)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7877)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 377)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7877)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 761)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7938)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 378)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7938)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 762)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7939)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 379)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7939)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 763)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7940)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 380)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 7940)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 764)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 8001)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 381)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 8001)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 765)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 8002)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 382)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 8002)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 766)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 8003)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 383)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floordiv(floormod(threadIdx.x, 49), 7)*9) + floormod(threadIdx.x, 7)) + 8003)]*kernel.shared_1[((floordiv(threadIdx.x, 49)*768) + 767)]))
            }
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[((((blockIdx.x*392) + (floordiv(threadIdx.x, 49)*98)) + (i1.inner*49)) + floormod(threadIdx.x, 49))] = max((conv2d_nchw_1[i1.inner] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 49)*2)) + i1.inner)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 141-144

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 144-171

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.331 ms




.. GENERATED FROM PYTHON SOURCE LINES 172-177

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 179-182

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 182-189

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=2)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=4)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=7)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=1)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=8)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=16)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=3)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=4)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=196)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=196)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(196) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[2];
      __shared__ float pad_temp_shared[8064];
      __shared__ float kernel_shared[3072];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 4; ++rc_outer_outer) {
        for (int ry_outer_outer = 0; ry_outer_outer < 3; ++ry_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = (((((1 <= (((((int)threadIdx.x) % 63) / 9) + ry_outer_outer)) && ((((((int)threadIdx.x) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 196) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 392) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 588) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 784) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 980) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1176)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 1176) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1372)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 1372) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1568)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 1568) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1764)] = (((((1 <= (((((int)threadIdx.x) % 63) / 9) + ry_outer_outer)) && ((((((int)threadIdx.x) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 1364)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 1960)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 1960) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2156)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 2156) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2352)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 2352) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2548)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 2548) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2744)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 2744) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 2940)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 2940) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3136)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 3136) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3332)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 3332) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3528)] = (((((1 <= (((((int)threadIdx.x) % 63) / 9) + ry_outer_outer)) && ((((((int)threadIdx.x) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 2736)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3724)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 3724) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 3920)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 3920) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 4116)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 4116) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 4312)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 4312) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 4508)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 4508) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 4704)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 4704) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 4900)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 4900) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 5096)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 5096) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 5292)] = (((((1 <= (((((int)threadIdx.x) % 63) / 9) + ry_outer_outer)) && ((((((int)threadIdx.x) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 4108)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 5488)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 5488) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 5684)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 5684) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 5880)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 5880) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 6076)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 6076) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 6272)] = (((((1 <= ((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 35) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 6272) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 6468)] = (((((1 <= ((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 42) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 6468) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 6664)] = (((((1 <= ((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 49) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 6664) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 6860)] = (((((1 <= ((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 56) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 6860) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 7056)] = (((((1 <= (((((int)threadIdx.x) % 63) / 9) + ry_outer_outer)) && ((((((int)threadIdx.x) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + ((((int)threadIdx.x) / 9) * 7)) + (ry_outer_outer * 7)) + (((int)threadIdx.x) % 9)) + 5480)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 7252)] = (((((1 <= ((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 7) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 7252) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 7448)] = (((((1 <= ((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 14) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 7448) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 7644)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 21) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 7644) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 7840)] = (((((1 <= ((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer)) && (((((((int)threadIdx.x) + 28) % 63) / 9) + ry_outer_outer) < 8)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 7840) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8)] : 0.000000e+00f);
          if (((int)threadIdx.x) < 28) {
            pad_temp_shared[(((int)threadIdx.x) + 8036)] = (((((((((int)threadIdx.x) + 35) / 9) + ry_outer_outer) < 8) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 6272) + (((((int)threadIdx.x) + 8036) / 9) * 7)) + (ry_outer_outer * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
          }
          kernel_shared[((int)threadIdx.x)] = kernel[(((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 1152)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 196) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) + 196) % 384) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 392) / 384) * 4608)) + (rc_outer_outer * 1152)) + (((((int)threadIdx.x) + 8) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 588)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 588) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) / 3) + 68) & 127) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 784) / 384) * 4608)) + (rc_outer_outer * 1152)) + (((((int)threadIdx.x) + 16) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 980)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 980) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) + 212) % 384) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1176)] = kernel[(((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1176) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 72)];
          kernel_shared[(((int)threadIdx.x) + 1372)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1372) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) + 220) % 384) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1568)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1568) / 384) * 4608)) + (rc_outer_outer * 1152)) + (((((int)threadIdx.x) + 32) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1764)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1764) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) / 3) + 76) & 127) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3))];
          kernel_shared[(((int)threadIdx.x) + 1960)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 1960) / 384) * 4608)) + (rc_outer_outer * 1152)) + (((((int)threadIdx.x) + 40) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2156)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2156) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) + 236) % 384) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2352)] = kernel[(((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2352) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 144)];
          kernel_shared[(((int)threadIdx.x) + 2548)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2548) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((((int)threadIdx.x) + 244) % 384) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 1) % 3))];
          kernel_shared[(((int)threadIdx.x) + 2744)] = kernel[((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2744) / 384) * 4608)) + (rc_outer_outer * 1152)) + (((((int)threadIdx.x) + 56) / 3) * 9)) + (ry_outer_outer * 3)) + ((((int)threadIdx.x) + 2) % 3))];
          if (((int)threadIdx.x) < 132) {
            kernel_shared[(((int)threadIdx.x) + 2940)] = kernel[(((((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 2940) / 384) * 4608)) + (rc_outer_outer * 1152)) + ((((int)threadIdx.x) / 3) * 9)) + (ry_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 756)];
          }
          __syncthreads();
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[((((int)threadIdx.x) / 49) * 768)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7))] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 384)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 1)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 385)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 2)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 386)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 63)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 387)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 4)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 64)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 388)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 5)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 65)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 389)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 126)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 390)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 7)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 127)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 391)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 8)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 128)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 392)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 189)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 393)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 10)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 190)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 394)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 11)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 191)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 395)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 252)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 396)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 13)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 253)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 397)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 14)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 254)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 398)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 315)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 399)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 16)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 316)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 400)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 17)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 317)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 401)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 378)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 402)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 19)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 379)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 403)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 20)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 380)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 404)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 441)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 405)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 22)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 442)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 406)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 23)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 443)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 407)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 504)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 408)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 25)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 505)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 409)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 26)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 506)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 410)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 567)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 411)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 28)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 568)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 412)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 29)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 569)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 413)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 630)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 414)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 31)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 631)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 415)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 32)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 632)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 416)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 33)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 693)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 417)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 34)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 694)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 418)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 35)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 695)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 419)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 36)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 756)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 420)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 37)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 757)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 421)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 38)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 758)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 422)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 39)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 819)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 423)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 40)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 820)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 424)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 41)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 821)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 425)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 42)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 882)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 426)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 43)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 883)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 427)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 44)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 884)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 428)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 45)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 945)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 429)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 46)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 946)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 430)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 47)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 947)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 431)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1008)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 48)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1008)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 432)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1009)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 49)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1009)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 433)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1010)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 50)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1010)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 434)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 51)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1071)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 435)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 52)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1072)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 436)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 53)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1073)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 437)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 54)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1134)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 438)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 55)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1135)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 439)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 56)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1136)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 440)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1197)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 57)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1197)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 441)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1198)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 58)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1198)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 442)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1199)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 59)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1199)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 443)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1260)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 60)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1260)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 444)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 61)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1261)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 445)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 62)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1262)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 446)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1323)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 63)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1323)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 447)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 64)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1324)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 448)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 65)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1325)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 449)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1386)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 66)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1386)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 450)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1387)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 67)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1387)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 451)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1388)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 68)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1388)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 452)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1449)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 69)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1449)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 453)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1450)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 70)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1450)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 454)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1451)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 71)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1451)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 455)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1512)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 72)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1512)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 456)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1513)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 73)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1513)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 457)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1514)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 74)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1514)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 458)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1575)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 75)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1575)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 459)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 76)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1576)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 460)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 77)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1577)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 461)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1638)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 78)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1638)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 462)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1639)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 79)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1639)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 463)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1640)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 80)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1640)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 464)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1701)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 81)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1701)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 465)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1702)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 82)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1702)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 466)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1703)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 83)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1703)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 467)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1764)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 84)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1764)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 468)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1765)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 85)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1765)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 469)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1766)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 86)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1766)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 470)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1827)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 87)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1827)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 471)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1828)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 88)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1828)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 472)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1829)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 89)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1829)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 473)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1890)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 90)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1890)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 474)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1891)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 91)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1891)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 475)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1892)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 92)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1892)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 476)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1953)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 93)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1953)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 477)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1954)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 94)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1954)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 478)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1955)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 95)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 1955)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 479)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2016)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 96)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2016)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 480)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2017)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 97)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2017)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 481)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2018)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 98)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2018)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 482)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2079)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 99)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2079)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 483)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2080)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 100)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2080)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 484)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2081)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 101)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2081)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 485)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2142)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 102)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2142)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 486)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2143)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 103)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2143)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 487)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2144)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 104)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2144)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 488)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2205)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 105)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2205)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 489)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2206)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 106)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2206)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 490)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2207)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 107)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2207)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 491)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2268)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 108)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2268)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 492)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2269)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 109)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2269)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 493)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2270)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 110)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2270)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 494)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2331)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 111)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2331)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 495)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2332)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 112)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2332)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 496)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 113)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2333)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 497)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2394)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 114)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2394)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 498)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2395)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 115)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2395)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 499)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2396)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 116)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2396)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 500)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2457)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 117)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2457)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 501)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2458)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 118)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2458)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 502)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2459)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 119)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2459)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 503)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2520)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 120)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2520)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 504)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2521)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 121)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2521)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 505)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2522)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 122)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2522)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 506)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2583)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 123)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2583)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 507)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2584)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 124)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2584)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 508)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 125)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2585)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 509)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2646)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 126)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2646)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 510)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2647)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 127)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2647)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 511)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2648)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 128)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2648)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 512)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2709)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 129)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2709)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 513)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2710)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 130)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2710)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 514)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2711)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 131)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2711)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 515)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2772)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 132)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2772)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 516)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2773)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 133)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2773)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 517)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2774)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 134)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2774)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 518)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2835)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 135)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2835)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 519)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2836)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 136)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2836)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 520)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2837)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 137)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2837)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 521)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2898)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 138)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2898)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 522)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2899)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 139)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2899)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 523)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2900)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 140)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2900)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 524)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2961)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 141)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2961)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 525)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2962)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 142)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2962)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 526)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2963)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 143)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 2963)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 527)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3024)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 144)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3024)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 528)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3025)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 145)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3025)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 529)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3026)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 146)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3026)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 530)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3087)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 147)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3087)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 531)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3088)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 148)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3088)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 532)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3089)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 149)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3089)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 533)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3150)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 150)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3150)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 534)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3151)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 151)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3151)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 535)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3152)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 152)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3152)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 536)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3213)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 153)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3213)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 537)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3214)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 154)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3214)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 538)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3215)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 155)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3215)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 539)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3276)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 156)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3276)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 540)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3277)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 157)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3277)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 541)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3278)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 158)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3278)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 542)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3339)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 159)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3339)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 543)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3340)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 160)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3340)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 544)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3341)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 161)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3341)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 545)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3402)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 162)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3402)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 546)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3403)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 163)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3403)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 547)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3404)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 164)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3404)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 548)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3465)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 165)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3465)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 549)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3466)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 166)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3466)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 550)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3467)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 167)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3467)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 551)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3528)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 168)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3528)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 552)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3529)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 169)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3529)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 553)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3530)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 170)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3530)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 554)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3591)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 171)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3591)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 555)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3592)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 172)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3592)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 556)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3593)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 173)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3593)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 557)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3654)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 174)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3654)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 558)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3655)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 175)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3655)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 559)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3656)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 176)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3656)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 560)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3717)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 177)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3717)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 561)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3718)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 178)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3718)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 562)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3719)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 179)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3719)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 563)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3780)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 180)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3780)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 564)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3781)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 181)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3781)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 565)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3782)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 182)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3782)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 566)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3843)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 183)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3843)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 567)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3844)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 184)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3844)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 568)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3845)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 185)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3845)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 569)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3906)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 186)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3906)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 570)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3907)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 187)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3907)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 571)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3908)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 188)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3908)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 572)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3969)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 189)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3969)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 573)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3970)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 190)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3970)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 574)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3971)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 191)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 3971)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 575)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4032)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 192)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4032)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 576)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4033)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 193)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4033)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 577)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4034)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 194)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4034)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 578)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4095)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 195)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4095)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 579)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4096)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 196)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4096)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 580)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4097)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 197)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4097)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 581)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4158)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 198)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4158)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 582)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4159)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 199)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4159)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 583)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4160)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 200)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4160)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 584)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4221)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 201)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4221)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 585)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4222)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 202)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4222)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 586)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4223)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 203)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4223)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 587)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4284)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 204)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4284)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 588)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4285)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 205)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4285)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 589)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4286)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 206)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4286)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 590)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4347)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 207)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4347)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 591)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4348)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 208)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4348)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 592)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4349)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 209)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4349)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 593)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4410)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 210)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4410)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 594)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4411)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 211)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4411)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 595)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4412)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 212)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4412)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 596)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4473)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 213)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4473)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 597)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4474)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 214)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4474)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 598)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4475)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 215)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4475)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 599)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4536)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 216)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4536)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 600)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4537)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 217)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4537)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 601)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4538)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 218)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4538)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 602)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4599)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 219)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4599)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 603)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4600)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 220)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4600)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 604)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4601)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 221)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4601)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 605)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4662)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 222)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4662)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 606)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4663)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 223)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4663)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 607)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4664)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 224)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4664)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 608)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4725)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 225)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4725)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 609)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4726)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 226)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4726)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 610)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4727)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 227)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4727)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 611)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4788)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 228)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4788)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 612)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4789)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 229)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4789)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 613)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4790)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 230)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4790)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 614)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4851)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 231)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4851)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 615)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4852)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 232)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4852)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 616)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4853)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 233)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4853)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 617)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4914)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 234)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4914)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 618)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4915)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 235)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4915)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 619)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4916)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 236)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4916)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 620)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4977)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 237)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4977)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 621)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4978)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 238)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4978)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 622)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4979)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 239)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 4979)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 623)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5040)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 240)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5040)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 624)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5041)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 241)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5041)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 625)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5042)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 242)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5042)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 626)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5103)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 243)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5103)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 627)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5104)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 244)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5104)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 628)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5105)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 245)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5105)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 629)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5166)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 246)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5166)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 630)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5167)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 247)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5167)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 631)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5168)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 248)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5168)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 632)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5229)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 249)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5229)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 633)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5230)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 250)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5230)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 634)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5231)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 251)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5231)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 635)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5292)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 252)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5292)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 636)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5293)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 253)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5293)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 637)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5294)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 254)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5294)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 638)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5355)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 255)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5355)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 639)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5356)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 256)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5356)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 640)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5357)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 257)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5357)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 641)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5418)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 258)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5418)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 642)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5419)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 259)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5419)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 643)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5420)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 260)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5420)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 644)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5481)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 261)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5481)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 645)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5482)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 262)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5482)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 646)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5483)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 263)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5483)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 647)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5544)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 264)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5544)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 648)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5545)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 265)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5545)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 649)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5546)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 266)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5546)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 650)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5607)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 267)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5607)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 651)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5608)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 268)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5608)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 652)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5609)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 269)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5609)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 653)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5670)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 270)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5670)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 654)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5671)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 271)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5671)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 655)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5672)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 272)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5672)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 656)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5733)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 273)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5733)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 657)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5734)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 274)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5734)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 658)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5735)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 275)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5735)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 659)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5796)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 276)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5796)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 660)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5797)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 277)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5797)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 661)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5798)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 278)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5798)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 662)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5859)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 279)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5859)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 663)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5860)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 280)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5860)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 664)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5861)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 281)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5861)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 665)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5922)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 282)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5922)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 666)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5923)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 283)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5923)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 667)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5924)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 284)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5924)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 668)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5985)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 285)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5985)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 669)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5986)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 286)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5986)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 670)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5987)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 287)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 5987)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 671)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6048)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 288)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6048)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 672)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6049)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 289)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6049)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 673)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6050)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 290)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6050)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 674)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6111)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 291)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6111)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 675)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6112)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 292)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6112)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 676)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6113)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 293)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6113)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 677)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6174)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 294)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6174)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 678)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6175)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 295)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6175)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 679)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6176)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 296)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6176)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 680)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6237)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 297)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6237)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 681)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6238)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 298)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6238)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 682)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6239)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 299)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6239)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 683)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6300)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 300)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6300)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 684)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6301)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 301)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6301)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 685)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6302)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 302)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6302)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 686)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6363)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 303)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6363)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 687)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6364)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 304)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6364)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 688)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6365)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 305)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6365)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 689)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6426)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 306)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6426)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 690)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6427)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 307)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6427)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 691)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6428)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 308)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6428)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 692)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6489)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 309)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6489)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 693)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6490)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 310)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6490)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 694)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6491)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 311)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6491)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 695)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6552)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 312)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6552)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 696)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6553)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 313)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6553)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 697)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6554)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 314)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6554)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 698)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6615)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 315)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6615)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 699)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6616)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 316)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6616)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 700)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6617)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 317)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6617)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 701)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6678)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 318)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6678)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 702)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6679)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 319)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6679)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 703)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6680)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 320)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6680)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 704)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6741)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 321)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6741)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 705)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6742)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 322)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6742)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 706)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6743)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 323)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6743)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 707)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6804)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 324)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6804)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 708)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6805)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 325)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6805)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 709)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6806)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 326)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6806)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 710)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6867)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 327)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6867)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 711)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6868)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 328)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6868)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 712)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6869)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 329)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6869)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 713)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6930)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 330)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6930)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 714)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6931)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 331)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6931)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 715)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6932)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 332)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6932)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 716)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6993)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 333)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6993)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 717)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6994)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 334)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6994)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 718)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6995)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 335)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 6995)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 719)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7056)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 336)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7056)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 720)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7057)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 337)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7057)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 721)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7058)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 338)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7058)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 722)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7119)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 339)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7119)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 723)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7120)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 340)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7120)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 724)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7121)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 341)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7121)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 725)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 342)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7182)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 726)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7183)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 343)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7183)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 727)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7184)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 344)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7184)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 728)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 345)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7245)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 729)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7246)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 346)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7246)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 730)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7247)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 347)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7247)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 731)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7308)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 348)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7308)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 732)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7309)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 349)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7309)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 733)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7310)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 350)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7310)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 734)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7371)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 351)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7371)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 735)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7372)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 352)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7372)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 736)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7373)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 353)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7373)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 737)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7434)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 354)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7434)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 738)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7435)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 355)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7435)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 739)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7436)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 356)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7436)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 740)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 357)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7497)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 741)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7498)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 358)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7498)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 742)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7499)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 359)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7499)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 743)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7560)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 360)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7560)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 744)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7561)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 361)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7561)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 745)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7562)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 362)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7562)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 746)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7623)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 363)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7623)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 747)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7624)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 364)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7624)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 748)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7625)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 365)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7625)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 749)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7686)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 366)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7686)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 750)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7687)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 367)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7687)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 751)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7688)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 368)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7688)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 752)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7749)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 369)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7749)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 753)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7750)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 370)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7750)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 754)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7751)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 371)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7751)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 755)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7812)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 372)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7812)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 756)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7813)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 373)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7813)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 757)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7814)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 374)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7814)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 758)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7875)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 375)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7875)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 759)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7876)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 376)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7876)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 760)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7877)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 377)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7877)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 761)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7938)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 378)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7938)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 762)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7939)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 379)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7939)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 763)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7940)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 380)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 7940)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 764)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 8001)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 381)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 8001)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 765)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 8002)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 382)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 8002)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 766)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 8003)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 383)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((((int)threadIdx.x) % 49) / 7) * 9) + (((int)threadIdx.x) % 7)) + 8003)] * kernel_shared[(((((int)threadIdx.x) / 49) * 768) + 767)]));
        }
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 49) * 98)) + (i1_inner * 49)) + (((int)threadIdx.x) % 49))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 49) * 2)) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 190-194

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 194-216

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 3 minutes  41.155 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
