.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      allocate(conv2d_nchw: Pointer(local float32), float32, [28]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [1008]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [384]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [16], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[16] = 0f32
        conv2d_nchw_1[20] = 0f32
        conv2d_nchw_1[24] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[17] = 0f32
        conv2d_nchw_1[21] = 0f32
        conv2d_nchw_1[25] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[18] = 0f32
        conv2d_nchw_1[22] = 0f32
        conv2d_nchw_1[26] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[15] = 0f32
        conv2d_nchw_1[19] = 0f32
        conv2d_nchw_1[23] = 0f32
        conv2d_nchw_1[27] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          for (rx.outer.outer: int32, 0, 3) {
            let cse_var_2: int32 = (rc.outer.outer*784)
            let cse_var_1: int32 = (rc.outer.outer*144)
             {
              attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [1008], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((cse_var_2 + threadIdx.x_1) + rx.outer.outer) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 14)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + ((floordiv(threadIdx.x_1, 7) + 2)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 28)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + ((floordiv(threadIdx.x_1, 7) + 4)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 42)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + ((floordiv(threadIdx.x_1, 7) + 6)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 56)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 8), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 70)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 10), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 84)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 12), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 98)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 14), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 16), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 126)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 90)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 140)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 20), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 154)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 22), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 168)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 24), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 182)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 26), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 196)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 28), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 210)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 30), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 224)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 32), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 238)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 34), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 252)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 188)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 266)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 38), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 280)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 40), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 294)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 42), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 308)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 44), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 322)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 46), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 336)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 48), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 350)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 50), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 364)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 52), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 378)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 286)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 392)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 56), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 406)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 58), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 420)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 60), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 434)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 62), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 448)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 64), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 462)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 66), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 476)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 68), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 490)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 70), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 504)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 384)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 518)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 74), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 532)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 76), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 546)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 78), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 560)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 80), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 574)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 82), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 588)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 84), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 602)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 86), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 616)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 88), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 630)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 482)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 644)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 92), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 658)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 94), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 672)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 96), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 98), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 700)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 100), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 714)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 102), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 728)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 104), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 742)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 106), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 756)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 580)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 770)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 110), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 784)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 112), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 798)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 114), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 812)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 116), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 826)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 118), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 840)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 120), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 854)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 122), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 868)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 124), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 882)] = @tir.if_then_else((((7 <= threadIdx.x_1) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[((((cse_var_2 + (floordiv(threadIdx.x_1, 7)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) + 678)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 896)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 128), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 2), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 910)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 130), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 4), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 924)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 132), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 6), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 938)] = @tir.if_then_else(((((1 <= floormod((floordiv(threadIdx.x_1, 7) + 8), 9)) && (floormod((floordiv(threadIdx.x_1, 7) + 8), 9) < 8)) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 134), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 8), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 952)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 136), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 1), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 966)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 138), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 3), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 980)] = @tir.if_then_else(((1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 140), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 5), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              pad_temp.shared_1[(threadIdx.x_1 + 994)] = @tir.if_then_else((((floormod((floordiv(threadIdx.x_1, 7) + 7), 9) < 8) && (1 <= (rx.outer.outer + floormod(threadIdx.x_1, 7)))) && ((rx.outer.outer + floormod(threadIdx.x_1, 7)) < 8)), data[(((((cse_var_2 + (floordiv((floordiv(threadIdx.x_1, 7) + 142), 9)*49)) + (floormod((floordiv(threadIdx.x_1, 7) + 7), 9)*7)) + rx.outer.outer) + floormod(threadIdx.x_1, 7)) - 8)], 0f32, dtype=float32)
              attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1: Buffer(kernel.shared, float32, [384], [], scope="shared")[threadIdx.x_2] = kernel[((((blockIdx.x*36864) + cse_var_1) + (threadIdx.x_2*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 14)] = kernel[((((blockIdx.x*36864) + cse_var_1) + ((threadIdx.x_2 + 14)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 28)] = kernel[((((blockIdx.x*36864) + cse_var_1) + ((threadIdx.x_2 + 28)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 42)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 21), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 42), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 56)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 28), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 8), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 70)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 35), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 22), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 84)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 42), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 36), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 49), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 2), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 56), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 16), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 126)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 63), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 30), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 140)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 70), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 44), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 154)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 77), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 10), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 168)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 84), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 24), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 182)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 91), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 38), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 98), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 4), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 210)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 105), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 18), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 112), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 32), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 238)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 119), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 46), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 252)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 126), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 12), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 266)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 133), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 26), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 280)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 140), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 40), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 294)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 147), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 6), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 308)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 154), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 20), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 322)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 161), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 34), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[(((((blockIdx.x*36864) + cse_var_1) + (threadIdx.x_2*3)) + rx.outer.outer) + 32256)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 350)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 175), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 14), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              kernel.shared_1[(threadIdx.x_2 + 364)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 182), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 28), 48)*3)) + rx.outer.outer)]
              attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
              if @tir.likely((threadIdx.x_2 < 6), dtype=bool) {
                kernel.shared_1[(threadIdx.x_2 + 378)] = kernel[(((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 189), 24)*4608)) + cse_var_1) + (floormod((threadIdx.x_2 + 42), 48)*3)) + rx.outer.outer)]
              }
              for (rc.outer.inner: int32, 0, 4) {
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7))]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12))]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 8)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 1)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 16)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 17)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 2)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 3)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 71)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 73)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 74)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 75)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 76)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 4)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 78)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 79)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 80)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 5)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 6)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 134)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 136)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 137)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 138)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 139)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 7)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 141)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 142)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 143)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 145)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 146)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 8)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 9)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 197)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 199)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 200)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 201)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 202)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 10)]))
                conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 204)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 205)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 206)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 208)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 209)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 11)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 48)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 8)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 49)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 16)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 17)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 50)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 51)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 71)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 73)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 74)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 75)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 76)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 52)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 78)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 79)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 80)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 53)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 54)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 134)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 136)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 137)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 138)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 139)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 55)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 141)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 142)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 143)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 145)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 146)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 56)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 57)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 197)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 199)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 200)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 201)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 202)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 58)]))
                conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 204)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 205)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 206)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 208)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 209)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 59)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 96)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 8)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 97)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 16)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 17)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 98)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 99)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 71)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 73)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 74)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 75)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 76)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 100)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 78)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 79)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 80)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 101)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 102)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 134)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 136)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 137)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 138)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 139)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 103)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 141)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 142)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 143)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 145)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 146)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 104)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 105)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 197)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 199)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 200)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 201)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 202)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 106)]))
                conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 204)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 205)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 206)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 208)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 209)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 107)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7))]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 144)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 7)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 8)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 145)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 16)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 17)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 146)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 63)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 64)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 65)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 66)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 67)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 68)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 69)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 147)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 70)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 71)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 72)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 73)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 74)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 75)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 76)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 148)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 77)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 78)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 79)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 80)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 149)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 126)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 127)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 128)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 129)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 130)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 131)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 132)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 150)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 133)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 134)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 135)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 136)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 137)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 138)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 139)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 151)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 140)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 141)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 142)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 143)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 144)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 145)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 146)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 152)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 189)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 190)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 191)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 192)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 193)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 194)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 195)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 153)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 196)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 197)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 198)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 199)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 200)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 201)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 202)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 154)]))
                conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 203)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
                conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 204)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
                conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 205)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
                conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 206)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
                conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 207)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
                conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 208)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
                conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((rc.outer.inner*252) + (floormod(threadIdx.x, 7)*7)) + 209)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*192) + (rc.outer.inner*12)) + 155)]))
              }
            }
          }
        }
        for (i1.inner: int32, 0, 4) {
          compute[((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7))] = max((conv2d_nchw_1[i1.inner] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 1)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 2)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 3)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 4)] = max((conv2d_nchw_1[(i1.inner + 16)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 5)] = max((conv2d_nchw_1[(i1.inner + 20)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 6)] = max((conv2d_nchw_1[(i1.inner + 24)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.418 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=4)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=7)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=4)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=1)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=4)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=7)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=14)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=14)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(14) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[28];
      __shared__ float pad_temp_shared[1008];
      __shared__ float kernel_shared[384];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[16] = 0.000000e+00f;
      conv2d_nchw[20] = 0.000000e+00f;
      conv2d_nchw[24] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[17] = 0.000000e+00f;
      conv2d_nchw[21] = 0.000000e+00f;
      conv2d_nchw[25] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[18] = 0.000000e+00f;
      conv2d_nchw[22] = 0.000000e+00f;
      conv2d_nchw[26] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      conv2d_nchw[19] = 0.000000e+00f;
      conv2d_nchw[23] = 0.000000e+00f;
      conv2d_nchw[27] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        for (int rx_outer_outer = 0; rx_outer_outer < 3; ++rx_outer_outer) {
          __syncthreads();
          pad_temp_shared[((int)threadIdx.x)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 14)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 6)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 28)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 20)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 42)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 34)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 56)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 56) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 70)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 70) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 84)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 84) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 98)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 98) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 112)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 112) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 126)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 90)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 140)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 140) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 154)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 154) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 168)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 168) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 182)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 182) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 196)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 196) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 210)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 210) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 224)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 224) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 238)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 238) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 252)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 188)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 266)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 266) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 280)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 280) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 294)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 294) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 308)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 308) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 322)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 322) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 336)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 336) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 350)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 350) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 364)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 364) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 378)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 286)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 392)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 392) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 406)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 406) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 420)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 420) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 434)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 434) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 448)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 448) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 462)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 462) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 476)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 476) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 490)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 490) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 504)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 384)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 518)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 518) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 532)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 532) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 546)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 546) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 560)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 560) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 574)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 574) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 588)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 588) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 602)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 602) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 616)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 616) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 630)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 482)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 644)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 644) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 658)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 658) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 672)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 672) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 686)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 686) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 700)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 700) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 714)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 714) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 728)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 728) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 742)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 742) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 756)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 580)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 770)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 770) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 784)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 798)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 798) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 812)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 812) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 826)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 826) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 840)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 840) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 854)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 854) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 868)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 868) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 882)] = ((((7 <= ((int)threadIdx.x)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((rc_outer_outer * 784) + ((int)threadIdx.x)) + rx_outer_outer) + 678)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 896)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 896) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 2) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 910)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 910) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 4) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 924)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 924) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 6) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 938)] = (((((1 <= (((((int)threadIdx.x) / 7) + 8) % 9)) && ((((((int)threadIdx.x) / 7) + 8) % 9) < 8)) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 938) / 63) * 49)) + ((((((int)threadIdx.x) / 7) + 8) % 9) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 952)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 952) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 1) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 966)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 966) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 3) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 980)] = (((1 <= (rx_outer_outer + (((int)threadIdx.x) % 7))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 980) / 63) * 49)) + (((((int)threadIdx.x) / 7) + 5) * 7)) + rx_outer_outer) + (((int)threadIdx.x) % 7)) - 8)] : 0.000000e+00f);
          pad_temp_shared[(((int)threadIdx.x) + 994)] = ((((((int)threadIdx.x) < 7) && (1 <= (rx_outer_outer + (((int)threadIdx.x) % 7)))) && ((rx_outer_outer + (((int)threadIdx.x) % 7)) < 8)) ? data[(((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 994) / 63) * 49)) + rx_outer_outer) + ((int)threadIdx.x)) + 41)] : 0.000000e+00f);
          kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 14)] = kernel[(((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 42)];
          kernel_shared[(((int)threadIdx.x) + 28)] = kernel[(((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 84)];
          kernel_shared[(((int)threadIdx.x) + 42)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 42) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 42) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 56)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 56) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 8) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 70)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 70) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 22) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 84)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 84) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 36) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 98)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 2) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 112)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 112) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 16) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 126)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 126) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 30) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 140)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 140) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 44) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 154)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 154) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 10) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 168)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 168) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 24) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 182)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 182) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 38) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 196)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 196) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 4) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 210)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 210) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 18) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 224)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 224) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 32) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 238)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 238) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 46) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 252)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 252) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 12) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 266)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 266) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 26) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 280)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 280) / 48) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 40) % 48) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 294)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 294) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 6) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 308)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 308) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 20) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 322)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 322) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 34) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 336)] = kernel[(((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 144)) + (((int)threadIdx.x) * 3)) + rx_outer_outer) + 32256)];
          kernel_shared[(((int)threadIdx.x) + 350)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 350) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 14) * 3)) + rx_outer_outer)];
          kernel_shared[(((int)threadIdx.x) + 364)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 364) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 28) * 3)) + rx_outer_outer)];
          if (((int)threadIdx.x) < 6) {
            kernel_shared[(((int)threadIdx.x) + 378)] = kernel[(((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 378) / 48) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 42) * 3)) + rx_outer_outer)];
          }
          __syncthreads();
          for (int rc_outer_inner = 0; rc_outer_inner < 4; ++rc_outer_inner) {
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7))] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12))]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 8)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 1)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 16)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 17)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 2)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 3)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 71)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 73)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 74)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 75)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 76)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 4)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 78)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 79)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 80)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 5)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 6)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 134)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 136)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 137)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 138)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 139)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 7)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 141)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 142)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 143)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 145)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 146)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 8)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 9)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 197)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 199)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 200)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 201)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 202)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 10)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 204)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 205)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 206)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 208)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 209)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 11)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 48)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 8)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 49)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 16)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 17)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 50)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 51)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 71)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 73)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 74)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 75)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 76)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 52)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 78)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 79)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 80)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 53)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 54)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 134)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 136)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 137)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 138)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 139)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 55)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 141)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 142)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 143)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 145)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 146)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 56)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 57)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 197)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 199)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 200)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 201)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 202)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 58)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 204)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 205)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 206)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 208)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 209)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 59)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 96)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 8)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 97)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 16)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 17)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 98)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 99)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 71)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 73)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 74)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 75)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 76)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 100)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 78)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 79)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 80)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 101)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 102)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 134)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 136)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 137)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 138)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 139)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 103)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 141)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 142)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 143)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 145)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 146)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 104)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 105)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 197)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 199)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 200)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 201)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 202)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 106)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 204)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 205)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 206)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 208)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 209)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 107)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7))] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 144)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 7)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 8)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 145)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 16)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 17)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 146)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 63)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 64)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 65)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 66)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 67)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 68)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 69)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 147)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 70)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 71)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 72)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 73)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 74)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 75)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 76)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 148)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 77)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 78)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 79)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 80)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 149)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 126)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 127)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 128)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 129)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 130)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 131)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 132)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 150)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 133)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 134)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 135)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 136)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 137)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 138)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 139)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 151)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 140)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 141)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 142)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 143)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 144)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 145)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 146)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 152)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 189)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 190)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 191)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 192)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 193)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 194)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 195)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 153)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 196)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 197)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 198)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 199)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 200)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 201)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 202)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 154)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 203)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 204)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 205)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 206)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 207)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 208)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[(((rc_outer_inner * 252) + ((((int)threadIdx.x) % 7) * 7)) + 209)] * kernel_shared[((((((int)threadIdx.x) / 7) * 192) + (rc_outer_inner * 12)) + 155)]));
          }
        }
      }
      for (int i1_inner = 0; i1_inner < 4; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 1)] = max((conv2d_nchw[(i1_inner + 4)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 2)] = max((conv2d_nchw[(i1_inner + 8)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 3)] = max((conv2d_nchw[(i1_inner + 12)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 4)] = max((conv2d_nchw[(i1_inner + 16)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 5)] = max((conv2d_nchw[(i1_inner + 20)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 6)] = max((conv2d_nchw[(i1_inner + 24)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  23.303 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
