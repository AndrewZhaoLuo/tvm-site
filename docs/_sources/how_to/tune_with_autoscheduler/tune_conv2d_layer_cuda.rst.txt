.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      allocate(conv2d_nchw: Pointer(local float32), float32, [28]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [324]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [288]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [16], [], scope="local", align=16)[0] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[16] = 0f32
        conv2d_nchw_1[20] = 0f32
        conv2d_nchw_1[24] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[13] = 0f32
        conv2d_nchw_1[17] = 0f32
        conv2d_nchw_1[21] = 0f32
        conv2d_nchw_1[25] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[14] = 0f32
        conv2d_nchw_1[18] = 0f32
        conv2d_nchw_1[22] = 0f32
        conv2d_nchw_1[26] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[15] = 0f32
        conv2d_nchw_1[19] = 0f32
        conv2d_nchw_1[23] = 0f32
        conv2d_nchw_1[27] = 0f32
        for (rc.outer.outer: int32, 0, 128) {
          let cse_var_2: int32 = (rc.outer.outer*196)
          let cse_var_1: int32 = (rc.outer.outer*36)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              pad_temp.shared_1: Buffer(pad_temp.shared, float32, [324], [], scope="shared")[(threadIdx.x_1*12)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1*4), 27)) && (floormod((threadIdx.x_1*12), 81) < 72)) && (1 <= floormod((threadIdx.x_1*12), 9))) && (floormod((threadIdx.x_1*12), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1*4), 27)*49)) + (floordiv(floormod((threadIdx.x_1*4), 27), 3)*7)) + floormod((threadIdx.x_1*12), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 1)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1*4), 27)) && (floormod(((threadIdx.x_1*12) + 1), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 1), 9))) && (floormod(((threadIdx.x_1*12) + 1), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1*4), 27)*49)) + (floordiv(floormod((threadIdx.x_1*4), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 1), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 2)] = @tir.if_then_else(((((3 <= floormod((threadIdx.x_1*4), 27)) && (floormod(((threadIdx.x_1*12) + 2), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 2), 9))) && (floormod(((threadIdx.x_1*12) + 2), 9) < 8)), data[((((cse_var_2 + (floordiv((threadIdx.x_1*4), 27)*49)) + (floordiv(floormod((threadIdx.x_1*4), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 2), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 3)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 1), 27)) && (floormod(((threadIdx.x_1*12) + 3), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 3), 9))) && (floormod(((threadIdx.x_1*12) + 3), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 1), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 1), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 3), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 4)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 1), 27)) && (floormod(((threadIdx.x_1*12) + 4), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 4), 9))) && (floormod(((threadIdx.x_1*12) + 4), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 1), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 1), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 4), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 5)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 1), 27)) && (floormod(((threadIdx.x_1*12) + 5), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 5), 9))) && (floormod(((threadIdx.x_1*12) + 5), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 1), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 1), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 5), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 6)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 2), 27)) && (floormod(((threadIdx.x_1*12) + 6), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 6), 9))) && (floormod(((threadIdx.x_1*12) + 6), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 2), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 2), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 6), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 7)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 2), 27)) && (floormod(((threadIdx.x_1*12) + 7), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 7), 9))) && (floormod(((threadIdx.x_1*12) + 7), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 2), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 2), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 7), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 8)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 2), 27)) && (floormod(((threadIdx.x_1*12) + 8), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 8), 9))) && (floormod(((threadIdx.x_1*12) + 8), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 2), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 2), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 8), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 9)] = @tir.if_then_else(((((1 <= floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 9), 81) < 72)) && (1 <= floormod((threadIdx.x_1*12), 9))) && (floormod((threadIdx.x_1*12), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 3), 27)*49)) + (floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)*7)) + floormod((threadIdx.x_1*12), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 10)] = @tir.if_then_else(((((1 <= floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 10), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 1), 9))) && (floormod(((threadIdx.x_1*12) + 1), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 3), 27)*49)) + (floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 1), 9)) - 8)], 0f32, dtype=float32)
              pad_temp.shared_1[((threadIdx.x_1*12) + 11)] = @tir.if_then_else(((((1 <= floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 11), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 2), 9))) && (floormod(((threadIdx.x_1*12) + 2), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 3), 27)*49)) + (floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 2), 9)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14 {
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 168)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 56), 27)) && (floormod(((threadIdx.x_1*12) + 6), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 6), 9))) && (floormod(((threadIdx.x_1*12) + 6), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 56), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 56), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 6), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 169)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 56), 27)) && (floormod(((threadIdx.x_1*12) + 7), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 7), 9))) && (floormod(((threadIdx.x_1*12) + 7), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 56), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 56), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 7), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 170)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 56), 27)) && (floormod(((threadIdx.x_1*12) + 8), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 8), 9))) && (floormod(((threadIdx.x_1*12) + 8), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 56), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 56), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 8), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 171)] = @tir.if_then_else(((((1 <= floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 9), 81) < 72)) && (1 <= floormod((threadIdx.x_1*12), 9))) && (floormod((threadIdx.x_1*12), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 57), 27)*49)) + (floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)*7)) + floormod((threadIdx.x_1*12), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 172)] = @tir.if_then_else(((((1 <= floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 10), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 1), 9))) && (floormod(((threadIdx.x_1*12) + 1), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 57), 27)*49)) + (floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 1), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 173)] = @tir.if_then_else(((((1 <= floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 11), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 2), 9))) && (floormod(((threadIdx.x_1*12) + 2), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 57), 27)*49)) + (floormod((floordiv((threadIdx.x_1*4), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 2), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 174)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 58), 27)) && (floormod(((threadIdx.x_1*12) + 12), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 3), 9))) && (floormod(((threadIdx.x_1*12) + 3), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 58), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 58), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 3), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 175)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 58), 27)) && (floormod(((threadIdx.x_1*12) + 13), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 4), 9))) && (floormod(((threadIdx.x_1*12) + 4), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 58), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 58), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 4), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 176)] = @tir.if_then_else(((((3 <= floormod(((threadIdx.x_1*4) + 58), 27)) && (floormod(((threadIdx.x_1*12) + 14), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 5), 9))) && (floormod(((threadIdx.x_1*12) + 5), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 58), 27)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 58), 27), 3)*7)) + floormod(((threadIdx.x_1*12) + 5), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 177)] = @tir.if_then_else(((((1 <= floormod((floordiv(((threadIdx.x_1*4) + 56), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 15), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 6), 9))) && (floormod(((threadIdx.x_1*12) + 6), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 59), 27)*49)) + (floormod((floordiv(((threadIdx.x_1*4) + 56), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 6), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 178)] = @tir.if_then_else(((((1 <= floormod((floordiv(((threadIdx.x_1*4) + 56), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 16), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 7), 9))) && (floormod(((threadIdx.x_1*12) + 7), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 59), 27)*49)) + (floormod((floordiv(((threadIdx.x_1*4) + 56), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 7), 9)) - 8)], 0f32, dtype=float32)
              }
              if @tir.likely((threadIdx.x_1 < 13), dtype=bool) {
                pad_temp.shared_1[((threadIdx.x_1*12) + 179)] = @tir.if_then_else(((((1 <= floormod((floordiv(((threadIdx.x_1*4) + 56), 3) + 1), 9)) && (floormod(((threadIdx.x_1*12) + 17), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*12) + 8), 9))) && (floormod(((threadIdx.x_1*12) + 8), 9) < 8)), data[((((cse_var_2 + (floordiv(((threadIdx.x_1*4) + 59), 27)*49)) + (floormod((floordiv(((threadIdx.x_1*4) + 56), 3) + 1), 9)*7)) + floormod(((threadIdx.x_1*12) + 8), 9)) - 8)], 0f32, dtype=float32)
              }
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1: Buffer(kernel.shared, float32, [288], [], scope="shared")[threadIdx.x_2] = kernel[(((blockIdx.x*36864) + cse_var_1) + threadIdx.x_2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 14)] = kernel[(((blockIdx.x*36864) + cse_var_1) + (threadIdx.x_2 + 14))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 28)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 14), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 28), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 42)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 21), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 6), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 56)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 28), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 20), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 70)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 35), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 34), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 84)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 42), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 12), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 98)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 49), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 26), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 56), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 4), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 126)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 63), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 18), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 140)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 70), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 32), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 154)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 77), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 10), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 168)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 84), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 24), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 182)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 91), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 2), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 196)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 98), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 16), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 210)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 105), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 30), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 112), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 8), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 238)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 119), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 22), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 252)] = kernel[((((blockIdx.x*36864) + cse_var_1) + threadIdx.x_2) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            kernel.shared_1[(threadIdx.x_2 + 266)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 133), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 14), 36))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 14;
            if @tir.likely((threadIdx.x_2 < 8), dtype=bool) {
              kernel.shared_1[(threadIdx.x_2 + 280)] = kernel[((((blockIdx.x*36864) + (floordiv((floordiv(threadIdx.x_2, 2) + 140), 18)*4608)) + cse_var_1) + floormod((threadIdx.x_2 + 28), 36))]
            }
            for (rx.outer.inner: int32, 0, 3) {
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[((floordiv(threadIdx.x, 7)*144) + rx.outer.inner)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 36)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 72)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[((floormod(threadIdx.x, 7)*9) + rx.outer.inner)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 1)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 2)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 3)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 4)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 5)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 6)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 108)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 3)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 39)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 75)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 9)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 10)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 11)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 12)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 13)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 14)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 15)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 111)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 21)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 22)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 23)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 24)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 6)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 21)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 22)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 23)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 24)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 42)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 21)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 22)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 23)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 24)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 78)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 18)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 19)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 20)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 21)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 22)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 23)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 24)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 114)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 84)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 85)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 86)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 87)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 9)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 84)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 85)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 86)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 87)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 45)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 84)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 85)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 86)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 87)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 81)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 81)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 82)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 83)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 84)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 85)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 86)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 87)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 117)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 91)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 92)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 93)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 94)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 95)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 96)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 12)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 91)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 92)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 93)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 94)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 95)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 96)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 48)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 91)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 92)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 93)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 94)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 95)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 96)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 84)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 90)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 91)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 92)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 93)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 94)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 95)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 96)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 120)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 100)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 101)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 102)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 103)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 104)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 105)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 15)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 100)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 101)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 102)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 103)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 104)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 105)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 51)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 100)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 101)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 102)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 103)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 104)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 105)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 87)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 99)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 100)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 101)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 102)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 103)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 104)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 105)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 123)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 163)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 164)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 165)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 166)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 167)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 168)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 18)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 163)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 164)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 165)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 166)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 167)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 168)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 54)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 163)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 164)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 165)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 166)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 167)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 168)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 90)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 162)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 163)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 164)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 165)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 166)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 167)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 168)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 126)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 172)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 173)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 174)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 175)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 176)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 177)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 21)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 172)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 173)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 174)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 175)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 176)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 177)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 57)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 172)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 173)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 174)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 175)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 176)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 177)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 93)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 171)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 172)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 173)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 174)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 175)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 176)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 177)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 129)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 181)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 182)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 183)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 184)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 185)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 186)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 24)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 181)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 182)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 183)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 184)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 185)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 186)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 60)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 181)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 182)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 183)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 184)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 185)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 186)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 96)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 180)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 181)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 182)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 183)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 184)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 185)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 186)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 132)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 244)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 245)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 246)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 247)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 248)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 249)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 27)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 244)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 245)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 246)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 247)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 248)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 249)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 63)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 244)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 245)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 246)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 247)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 248)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 249)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 99)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 243)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 244)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 245)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 246)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 247)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 248)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 249)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 135)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 30)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 66)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 102)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 252)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 253)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 254)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 255)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 256)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 257)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 258)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 138)]))
              conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 262)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 263)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 264)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[16] = (conv2d_nchw_1[16] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 265)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[20] = (conv2d_nchw_1[20] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[24] = (conv2d_nchw_1[24] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 267)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 33)]))
              conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 262)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 263)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 264)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[17] = (conv2d_nchw_1[17] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 265)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[21] = (conv2d_nchw_1[21] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[25] = (conv2d_nchw_1[25] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 267)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 69)]))
              conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 262)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 263)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[14] = (conv2d_nchw_1[14] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 264)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[18] = (conv2d_nchw_1[18] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 265)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[22] = (conv2d_nchw_1[22] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[26] = (conv2d_nchw_1[26] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 267)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 105)]))
              conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 261)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
              conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 262)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
              conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 263)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
              conv2d_nchw_1[15] = (conv2d_nchw_1[15] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 264)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
              conv2d_nchw_1[19] = (conv2d_nchw_1[19] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 265)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
              conv2d_nchw_1[23] = (conv2d_nchw_1[23] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 266)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
              conv2d_nchw_1[27] = (conv2d_nchw_1[27] + (pad_temp.shared_1[(((floormod(threadIdx.x, 7)*9) + rx.outer.inner) + 267)]*kernel.shared_1[(((floordiv(threadIdx.x, 7)*144) + rx.outer.inner) + 141)]))
            }
          }
        }
        for (i1.inner: int32, 0, 4) {
          compute[((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7))] = max((conv2d_nchw_1[i1.inner] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 1)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 2)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 3)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 4)] = max((conv2d_nchw_1[(i1.inner + 16)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 5)] = max((conv2d_nchw_1[(i1.inner + 20)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
          compute[(((((blockIdx.x*392) + (floordiv(threadIdx.x, 7)*196)) + (i1.inner*49)) + (floormod(threadIdx.x, 7)*7)) + 6)] = max((conv2d_nchw_1[(i1.inner + 24)] + bias[(((blockIdx.x*8) + (floordiv(threadIdx.x, 7)*4)) + i1.inner)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.370 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=4)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=1)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=7)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=7)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=1)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=3)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=1)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=4)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=2)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=7)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=14)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=12)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=14)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 512)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(14) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[28];
      __shared__ float pad_temp_shared[324];
      __shared__ float kernel_shared[288];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[16] = 0.000000e+00f;
      conv2d_nchw[20] = 0.000000e+00f;
      conv2d_nchw[24] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      conv2d_nchw[17] = 0.000000e+00f;
      conv2d_nchw[21] = 0.000000e+00f;
      conv2d_nchw[25] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[14] = 0.000000e+00f;
      conv2d_nchw[18] = 0.000000e+00f;
      conv2d_nchw[22] = 0.000000e+00f;
      conv2d_nchw[26] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[15] = 0.000000e+00f;
      conv2d_nchw[19] = 0.000000e+00f;
      conv2d_nchw[23] = 0.000000e+00f;
      conv2d_nchw[27] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 128; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[(((int)threadIdx.x) * 12)] = (((((3 <= ((((int)threadIdx.x) * 4) % 27)) && (((((int)threadIdx.x) * 12) % 81) < 72)) && (1 <= ((((int)threadIdx.x) * 12) % 9))) && (((((int)threadIdx.x) * 12) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + (((((int)threadIdx.x) * 4) / 27) * 49)) + ((((((int)threadIdx.x) * 4) % 27) / 3) * 7)) + ((((int)threadIdx.x) * 12) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 1)] = (((((3 <= ((((int)threadIdx.x) * 4) % 27)) && ((((((int)threadIdx.x) * 12) + 1) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 1) % 9))) && ((((((int)threadIdx.x) * 12) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + (((((int)threadIdx.x) * 4) / 27) * 49)) + ((((((int)threadIdx.x) * 4) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 2)] = (((((3 <= ((((int)threadIdx.x) * 4) % 27)) && ((((((int)threadIdx.x) * 12) + 2) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 2) % 9))) && ((((((int)threadIdx.x) * 12) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + (((((int)threadIdx.x) * 4) / 27) * 49)) + ((((((int)threadIdx.x) * 4) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 3)] = (((((3 <= (((((int)threadIdx.x) * 4) + 1) % 27)) && ((((((int)threadIdx.x) * 12) + 3) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 3) % 9))) && ((((((int)threadIdx.x) * 12) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 1) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 1) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 4)] = (((((3 <= (((((int)threadIdx.x) * 4) + 1) % 27)) && ((((((int)threadIdx.x) * 12) + 4) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 4) % 9))) && ((((((int)threadIdx.x) * 12) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 1) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 1) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 5)] = (((((3 <= (((((int)threadIdx.x) * 4) + 1) % 27)) && ((((((int)threadIdx.x) * 12) + 5) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 5) % 9))) && ((((((int)threadIdx.x) * 12) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 1) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 1) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 6)] = (((((3 <= (((((int)threadIdx.x) * 4) + 2) % 27)) && ((((((int)threadIdx.x) * 12) + 6) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 6) % 9))) && ((((((int)threadIdx.x) * 12) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 2) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 2) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 7)] = (((((3 <= (((((int)threadIdx.x) * 4) + 2) % 27)) && ((((((int)threadIdx.x) * 12) + 7) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 7) % 9))) && ((((((int)threadIdx.x) * 12) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 2) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 2) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 8)] = (((((3 <= (((((int)threadIdx.x) * 4) + 2) % 27)) && ((((((int)threadIdx.x) * 12) + 8) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 8) % 9))) && ((((((int)threadIdx.x) * 12) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 2) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 2) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 9)] = (((((1 <= ((((((int)threadIdx.x) * 4) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 9) % 81) < 72)) && (1 <= ((((int)threadIdx.x) * 12) % 9))) && (((((int)threadIdx.x) * 12) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 3) / 27) * 49)) + (((((((int)threadIdx.x) * 4) / 3) + 1) % 9) * 7)) + ((((int)threadIdx.x) * 12) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 10)] = (((((1 <= ((((((int)threadIdx.x) * 4) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 10) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 1) % 9))) && ((((((int)threadIdx.x) * 12) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 3) / 27) * 49)) + (((((((int)threadIdx.x) * 4) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 1) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) * 12) + 11)] = (((((1 <= ((((((int)threadIdx.x) * 4) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 11) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 2) % 9))) && ((((((int)threadIdx.x) * 12) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 3) / 27) * 49)) + (((((((int)threadIdx.x) * 4) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 2) % 9)) - 8)] : 0.000000e+00f);
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 168)] = (((((3 <= (((((int)threadIdx.x) * 4) + 2) % 27)) && ((((((int)threadIdx.x) * 12) + 6) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 6) % 9))) && ((((((int)threadIdx.x) * 12) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 56) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 2) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 6) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 169)] = (((((3 <= (((((int)threadIdx.x) * 4) + 2) % 27)) && ((((((int)threadIdx.x) * 12) + 7) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 7) % 9))) && ((((((int)threadIdx.x) * 12) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 56) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 2) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 7) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 170)] = (((((3 <= (((((int)threadIdx.x) * 4) + 2) % 27)) && ((((((int)threadIdx.x) * 12) + 8) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 8) % 9))) && ((((((int)threadIdx.x) * 12) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 56) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 2) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 8) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 171)] = (((((1 <= ((((((int)threadIdx.x) * 4) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 9) % 81) < 72)) && (1 <= ((((int)threadIdx.x) * 12) % 9))) && (((((int)threadIdx.x) * 12) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 57) / 27) * 49)) + (((((((int)threadIdx.x) * 4) / 3) + 1) % 9) * 7)) + ((((int)threadIdx.x) * 12) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 172)] = (((((1 <= ((((((int)threadIdx.x) * 4) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 10) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 1) % 9))) && ((((((int)threadIdx.x) * 12) + 1) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 57) / 27) * 49)) + (((((((int)threadIdx.x) * 4) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 1) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 173)] = (((((1 <= ((((((int)threadIdx.x) * 4) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 11) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 2) % 9))) && ((((((int)threadIdx.x) * 12) + 2) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 57) / 27) * 49)) + (((((((int)threadIdx.x) * 4) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 2) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 174)] = (((((3 <= (((((int)threadIdx.x) * 4) + 4) % 27)) && ((((((int)threadIdx.x) * 12) + 12) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 3) % 9))) && ((((((int)threadIdx.x) * 12) + 3) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 58) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 4) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 3) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 175)] = (((((3 <= (((((int)threadIdx.x) * 4) + 4) % 27)) && ((((((int)threadIdx.x) * 12) + 13) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 4) % 9))) && ((((((int)threadIdx.x) * 12) + 4) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 58) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 4) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 4) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 176)] = (((((3 <= (((((int)threadIdx.x) * 4) + 4) % 27)) && ((((((int)threadIdx.x) * 12) + 14) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 5) % 9))) && ((((((int)threadIdx.x) * 12) + 5) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 58) / 27) * 49)) + (((((((int)threadIdx.x) * 4) + 4) % 27) / 3) * 7)) + (((((int)threadIdx.x) * 12) + 5) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 177)] = (((((1 <= (((((((int)threadIdx.x) * 4) + 56) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 15) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 6) % 9))) && ((((((int)threadIdx.x) * 12) + 6) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 59) / 27) * 49)) + ((((((((int)threadIdx.x) * 4) + 56) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 6) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 178)] = (((((1 <= (((((((int)threadIdx.x) * 4) + 56) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 16) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 7) % 9))) && ((((((int)threadIdx.x) * 12) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 59) / 27) * 49)) + ((((((((int)threadIdx.x) * 4) + 56) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 7) % 9)) - 8)] : 0.000000e+00f);
        }
        if (((int)threadIdx.x) < 13) {
          pad_temp_shared[((((int)threadIdx.x) * 12) + 179)] = (((((1 <= (((((((int)threadIdx.x) * 4) + 56) / 3) + 1) % 9)) && ((((((int)threadIdx.x) * 12) + 17) % 81) < 72)) && (1 <= (((((int)threadIdx.x) * 12) + 8) % 9))) && ((((((int)threadIdx.x) * 12) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 196) + ((((((int)threadIdx.x) * 4) + 59) / 27) * 49)) + ((((((((int)threadIdx.x) * 4) + 56) / 3) + 1) % 9) * 7)) + (((((int)threadIdx.x) * 12) + 8) % 9)) - 8)] : 0.000000e+00f);
        }
        kernel_shared[((int)threadIdx.x)] = kernel[(((((int)blockIdx.x) * 36864) + (rc_outer_outer * 36)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 14)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 14)];
        kernel_shared[(((int)threadIdx.x) + 28)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 28) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 28) % 36))];
        kernel_shared[(((int)threadIdx.x) + 42)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 42) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 6))];
        kernel_shared[(((int)threadIdx.x) + 56)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 56) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 20))];
        kernel_shared[(((int)threadIdx.x) + 70)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 70) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 34) % 36))];
        kernel_shared[(((int)threadIdx.x) + 84)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 84) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 12))];
        kernel_shared[(((int)threadIdx.x) + 98)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 98) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 26) % 36))];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 112) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 4))];
        kernel_shared[(((int)threadIdx.x) + 126)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 126) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 18))];
        kernel_shared[(((int)threadIdx.x) + 140)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 140) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 32) % 36))];
        kernel_shared[(((int)threadIdx.x) + 154)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 154) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 10))];
        kernel_shared[(((int)threadIdx.x) + 168)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 168) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 24) % 36))];
        kernel_shared[(((int)threadIdx.x) + 182)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 182) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 2))];
        kernel_shared[(((int)threadIdx.x) + 196)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 196) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 16))];
        kernel_shared[(((int)threadIdx.x) + 210)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 210) / 36) * 4608)) + (rc_outer_outer * 36)) + ((((int)threadIdx.x) + 30) % 36))];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 224) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 8))];
        kernel_shared[(((int)threadIdx.x) + 238)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 238) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 22))];
        kernel_shared[(((int)threadIdx.x) + 252)] = kernel[((((((int)blockIdx.x) * 36864) + (rc_outer_outer * 36)) + ((int)threadIdx.x)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 266)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 266) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 14))];
        if (((int)threadIdx.x) < 8) {
          kernel_shared[(((int)threadIdx.x) + 280)] = kernel[((((((int)blockIdx.x) * 36864) + (((((int)threadIdx.x) + 280) / 36) * 4608)) + (rc_outer_outer * 36)) + (((int)threadIdx.x) + 28))];
        }
        __syncthreads();
        for (int rx_outer_inner = 0; rx_outer_inner < 3; ++rx_outer_inner) {
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[(((((int)threadIdx.x) / 7) * 144) + rx_outer_inner)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 36)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 72)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) % 7) * 9) + rx_outer_inner)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 1)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 2)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 3)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 4)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 5)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 6)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 108)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 3)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 39)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 75)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 9)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 10)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 11)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 12)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 13)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 14)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 15)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 111)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 21)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 22)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 23)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 24)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 6)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 21)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 22)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 23)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 24)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 42)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 21)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 22)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 23)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 24)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 78)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 18)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 19)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 20)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 21)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 22)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 23)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 24)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 114)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 84)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 85)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 86)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 87)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 9)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 84)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 85)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 86)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 87)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 45)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 84)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 85)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 86)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 87)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 81)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 81)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 82)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 83)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 84)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 85)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 86)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 87)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 117)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 91)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 92)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 93)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 94)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 95)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 96)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 12)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 91)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 92)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 93)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 94)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 95)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 96)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 48)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 91)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 92)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 93)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 94)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 95)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 96)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 84)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 90)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 91)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 92)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 93)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 94)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 95)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 96)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 120)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 100)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 101)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 102)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 103)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 104)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 105)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 15)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 100)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 101)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 102)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 103)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 104)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 105)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 51)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 100)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 101)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 102)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 103)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 104)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 105)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 87)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 99)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 100)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 101)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 102)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 103)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 104)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 105)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 123)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 163)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 164)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 165)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 166)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 167)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 168)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 18)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 163)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 164)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 165)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 166)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 167)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 168)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 54)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 163)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 164)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 165)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 166)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 167)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 168)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 90)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 162)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 163)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 164)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 165)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 166)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 167)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 168)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 126)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 172)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 173)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 174)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 175)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 176)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 177)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 21)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 172)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 173)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 174)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 175)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 176)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 177)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 57)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 172)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 173)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 174)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 175)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 176)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 177)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 93)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 171)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 172)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 173)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 174)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 175)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 176)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 177)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 129)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 181)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 182)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 183)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 184)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 185)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 186)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 24)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 181)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 182)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 183)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 184)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 185)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 186)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 60)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 181)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 182)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 183)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 184)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 185)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 186)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 96)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 180)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 181)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 182)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 183)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 184)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 185)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 186)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 132)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 244)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 245)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 246)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 247)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 248)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 249)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 27)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 244)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 245)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 246)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 247)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 248)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 249)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 63)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 244)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 245)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 246)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 247)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 248)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 249)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 99)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 243)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 244)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 245)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 246)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 247)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 248)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 249)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 135)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 30)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 66)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 102)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 252)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 253)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 254)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 255)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 256)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 257)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 258)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 138)]));
          conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 262)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 263)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 264)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 265)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 266)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 267)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 33)]));
          conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 262)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 263)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 264)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 265)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 266)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 267)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 69)]));
          conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 262)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 263)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 264)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 265)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 266)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 267)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 105)]));
          conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 261)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
          conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 262)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
          conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 263)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
          conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 264)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
          conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 265)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
          conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 266)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
          conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((((int)threadIdx.x) % 7) * 9) + rx_outer_inner) + 267)] * kernel_shared[((((((int)threadIdx.x) / 7) * 144) + rx_outer_inner) + 141)]));
        }
      }
      for (int i1_inner = 0; i1_inner < 4; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7))] = max((conv2d_nchw[i1_inner] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 1)] = max((conv2d_nchw[(i1_inner + 4)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 2)] = max((conv2d_nchw[(i1_inner + 8)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 3)] = max((conv2d_nchw[(i1_inner + 12)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 4)] = max((conv2d_nchw[(i1_inner + 16)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 5)] = max((conv2d_nchw[(i1_inner + 20)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
        compute[(((((((int)blockIdx.x) * 392) + ((((int)threadIdx.x) / 7) * 196)) + (i1_inner * 49)) + ((((int)threadIdx.x) % 7) * 7)) + 6)] = max((conv2d_nchw[(i1_inner + 24)] + bias[(((((int)blockIdx.x) * 8) + ((((int)threadIdx.x) / 7) * 4)) + i1_inner)]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  20.451 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
