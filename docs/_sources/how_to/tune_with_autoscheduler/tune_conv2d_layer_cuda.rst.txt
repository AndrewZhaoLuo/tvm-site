
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "how_to/tune_with_autoscheduler/tune_conv2d_layer_cuda.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.

.. GENERATED FROM PYTHON SOURCE LINES 39-47

.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python








.. GENERATED FROM PYTHON SOURCE LINES 48-53

Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.

.. GENERATED FROM PYTHON SOURCE LINES 53-65

.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]









.. GENERATED FROM PYTHON SOURCE LINES 66-69

Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.

.. GENERATED FROM PYTHON SOURCE LINES 69-82

.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    conv2d_nchw(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (conv2d_nchw[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)





.. GENERATED FROM PYTHON SOURCE LINES 83-100

Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the main process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.

.. GENERATED FROM PYTHON SOURCE LINES 100-110

.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Get devices for measurement successfully!




.. GENERATED FROM PYTHON SOURCE LINES 111-117

Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.

.. GENERATED FROM PYTHON SOURCE LINES 117-126

.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx








.. GENERATED FROM PYTHON SOURCE LINES 127-130

We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.

.. GENERATED FROM PYTHON SOURCE LINES 130-134

.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Lowered TIR:
    @main = primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"from_legacy_te_schedule": True, "global_symbol": "main", "tir.noalias": True}
      buffers = {data: Buffer(data_2: Pointer(float32), float32, [25088], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [2359296], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [512], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [25088], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute}
      preflattened_buffer_map = {data_1: data_3: Buffer(data_2, float32, [1, 512, 7, 7], []), kernel_1: kernel_3: Buffer(kernel_2, float32, [512, 512, 3, 3], []), bias_1: bias_3: Buffer(bias_2, float32, [1, 512, 1, 1], []), compute_1: compute_3: Buffer(compute_2, float32, [1, 512, 7, 7], [])} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 224;
      allocate(conv2d_nchw: Pointer(local float32), float32, [14]), storage_scope = local;
      allocate(pad_temp.shared: Pointer(shared float32), float32, [216]), storage_scope = shared;
      allocate(kernel.shared: Pointer(shared float32), float32, [1152]), storage_scope = shared;
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8 {
        conv2d_nchw_1: Buffer(conv2d_nchw, float32, [4], [], scope="local", align=8)[0] = 0f32
        conv2d_nchw_1[2] = 0f32
        conv2d_nchw_1[4] = 0f32
        conv2d_nchw_1[6] = 0f32
        conv2d_nchw_1[8] = 0f32
        conv2d_nchw_1[10] = 0f32
        conv2d_nchw_1[12] = 0f32
        conv2d_nchw_1[1] = 0f32
        conv2d_nchw_1[3] = 0f32
        conv2d_nchw_1[5] = 0f32
        conv2d_nchw_1[7] = 0f32
        conv2d_nchw_1[9] = 0f32
        conv2d_nchw_1[11] = 0f32
        conv2d_nchw_1[13] = 0f32
        for (rc.outer.outer: int32, 0, 64) {
          let cse_var_1: int32 = (rc.outer.outer*392)
           {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1: Buffer(pad_temp.shared, float32, [216], [], scope="shared")[threadIdx.x_1] = @tir.if_then_else(((1 <= floormod(blockIdx.x, 7)) && (1 <= threadIdx.x_1)), data[(((cse_var_1 + (floormod(blockIdx.x, 7)*7)) + threadIdx.x_1) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 8)] = @tir.if_then_else((((1 <= (floordiv((threadIdx.x_1 + 8), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[((((cse_var_1 + (floordiv((threadIdx.x_1 + 8), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 16)] = @tir.if_then_else(((((floordiv((threadIdx.x_1 + 16), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[((((cse_var_1 + (floordiv((threadIdx.x_1 + 16), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 24)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 24), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 24), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 24), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 24), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 32)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1 + 5), 27), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 32), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 5), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 40)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 13), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 40), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 13), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 48)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 21), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 21), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 48), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 21), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 56)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1 + 2), 27), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 56), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 2), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 64)] = @tir.if_then_else((threadIdx.x_1 < 7), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 64), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 10), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + (threadIdx.x_1 + 1)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 72)] = @tir.if_then_else(((floormod(blockIdx.x, 7) < 6) && (1 <= threadIdx.x_1)), data[((((cse_var_1 + (floordiv((threadIdx.x_1 + 72), 27)*49)) + (floormod(blockIdx.x, 7)*7)) + threadIdx.x_1) + 6)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 80)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 26), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 26), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 80), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 26), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 88)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1 + 7), 27), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 88), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 7), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 96)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 15), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 96), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 15), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 104)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 23), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 23), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 104), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 23), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 112)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1 + 4), 27), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 112), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 4), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 120)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 12), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 120), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 12), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 128)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 20), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 20), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 128), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 20), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 136)] = @tir.if_then_else(((1 <= floormod(blockIdx.x, 7)) && (threadIdx.x_1 < 7)), data[((((cse_var_1 + (floordiv((threadIdx.x_1 + 136), 27)*49)) + (floormod(blockIdx.x, 7)*7)) + (threadIdx.x_1 + 1)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 144)] = @tir.if_then_else((1 <= threadIdx.x_1), data[((((cse_var_1 + (floordiv((threadIdx.x_1 + 144), 27)*49)) + (floormod(blockIdx.x, 7)*7)) + threadIdx.x_1) - 1)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 152)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 17), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 152), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 17), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 160)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 25), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 25), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 160), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 25), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 168)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1 + 6), 27), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 168), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 6), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 176)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 14), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 176), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 14), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 184)] = @tir.if_then_else(((((1 <= (floordiv(floormod((threadIdx.x_1 + 22), 27), 9) + floormod(blockIdx.x, 7))) && ((floordiv(floormod((threadIdx.x_1 + 22), 27), 9) + floormod(blockIdx.x, 7)) < 8)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 184), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 22), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 192)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1 + 3), 27), 9) + floormod(blockIdx.x, 7))) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 192), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 3), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 200)] = @tir.if_then_else(((((floordiv(floormod((threadIdx.x_1 + 11), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 200), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 11), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            pad_temp.shared_1[(threadIdx.x_1 + 208)] = @tir.if_then_else((((floordiv(floormod((threadIdx.x_1 + 19), 27), 9) + floormod(blockIdx.x, 7)) < 8) && (threadIdx.x_1 < 7)), data[(((((cse_var_1 + (floordiv((threadIdx.x_1 + 208), 27)*49)) + (floordiv(floormod((threadIdx.x_1 + 19), 27), 9)*7)) + (floormod(blockIdx.x, 7)*7)) + (threadIdx.x_1 + 1)) - 8)], 0f32, dtype=float32)
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1: Buffer(kernel.shared, float32, [1152], [], scope="shared")[threadIdx.x_2] = kernel[(((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 8)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 16)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 24)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 24)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 32)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 40)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 48)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 48)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 56)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 64)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3))]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 72)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 80)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 88)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 96)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 4632)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 104)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 112)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 120)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 4656)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 128)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 136)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 4608)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 144)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 152)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 160)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 168)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 9240)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 176)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 184)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 192)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 9264)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 200)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 208)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 9216)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 216)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 224)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 232)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 240)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 13848)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 248)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 256)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 264)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 13872)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 272)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 280)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 13824)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 288)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 296)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 304)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 312)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 18456)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 320)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 328)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 336)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 18480)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 344)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 352)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 18432)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 360)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 368)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 376)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 384)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 23064)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 392)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 400)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 408)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 23088)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 416)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 424)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 23040)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 432)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 440)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 448)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 456)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 27672)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 464)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 472)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 480)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 27696)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 488)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 496)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 27648)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 504)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 512)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 520)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 528)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 32280)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 536)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 544)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 552)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 32304)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 560)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 568)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 32256)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 576)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 584)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 592)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 600)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 36888)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 608)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 616)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 624)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 36912)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 632)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 640)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 36864)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 648)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 656)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 664)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 672)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 41496)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 680)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 688)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 696)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 41520)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 704)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 712)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 41472)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 720)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 728)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 736)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 744)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 46104)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 752)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 760)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 768)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 46128)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 776)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 784)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 46080)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 792)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 800)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 808)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 816)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 50712)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 824)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 832)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 840)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 50736)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 848)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 856)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 50688)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 864)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 872)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 880)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 888)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 55320)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 896)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 904)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 912)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 55344)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 920)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 928)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 55296)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 936)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 944)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 952)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 960)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 59928)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 968)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 976)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 984)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 59952)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 992)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1000)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 59904)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1008)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1016)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1024)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1032)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 64536)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1040)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1048)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1056)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 64560)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1064)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1072)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 64512)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1080)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 69120)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1088)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 8), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 69120)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1096)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 16), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 69120)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1104)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 69144)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1112)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 32), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 69120)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1120)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 40), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 69120)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1128)] = kernel[((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + threadIdx.x_2) + 69168)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1136)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 56), 3)*3)) + floormod((threadIdx.x_2 + 2), 3)) + 69120)]
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 8;
            kernel.shared_1[(threadIdx.x_2 + 1144)] = kernel[(((((floordiv(blockIdx.x, 7)*73728) + (rc.outer.outer*72)) + (floordiv((threadIdx.x_2 + 64), 3)*3)) + floormod((threadIdx.x_2 + 1), 3)) + 69120)]
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[0]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[1]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[2]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[3]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[4]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[5]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[6]*kernel.shared_1[(threadIdx.x*144)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[27]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*144) + 9)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[54]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*144) + 18)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[81]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*144) + 27)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[0]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[1]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*144) + 72)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[27]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*144) + 81)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[54]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*144) + 90)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[81]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*144) + 99)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[1]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*144) + 1)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*144) + 10)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*144) + 19)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*144) + 28)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[1]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*144) + 73)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[28]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*144) + 82)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[55]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*144) + 91)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[82]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*144) + 100)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*144) + 2)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*144) + 11)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*144) + 20)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*144) + 29)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[2]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[3]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[4]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[5]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[6]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[7]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[8]*kernel.shared_1[((threadIdx.x*144) + 74)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[29]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[30]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[31]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[32]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[33]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[34]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[35]*kernel.shared_1[((threadIdx.x*144) + 83)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[56]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[57]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[58]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[59]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[60]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[61]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[62]*kernel.shared_1[((threadIdx.x*144) + 92)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[83]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[84]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[85]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[86]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[87]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[88]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[89]*kernel.shared_1[((threadIdx.x*144) + 101)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*144) + 3)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*144) + 12)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*144) + 21)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*144) + 30)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[9]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*144) + 75)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[36]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*144) + 84)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[63]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*144) + 93)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[90]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*144) + 102)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*144) + 4)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*144) + 13)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*144) + 22)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*144) + 31)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[10]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*144) + 76)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[37]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*144) + 85)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[64]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*144) + 94)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[91]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*144) + 103)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*144) + 5)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*144) + 14)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*144) + 23)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*144) + 32)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[11]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[12]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[13]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[14]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[15]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[16]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[17]*kernel.shared_1[((threadIdx.x*144) + 77)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[38]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[39]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[40]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[41]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[42]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[43]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[44]*kernel.shared_1[((threadIdx.x*144) + 86)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[65]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[66]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[67]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[68]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[69]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[70]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[71]*kernel.shared_1[((threadIdx.x*144) + 95)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[92]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[93]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[94]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[95]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[96]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[97]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[98]*kernel.shared_1[((threadIdx.x*144) + 104)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*144) + 6)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*144) + 15)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*144) + 24)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*144) + 33)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[18]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*144) + 78)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[45]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*144) + 87)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[72]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*144) + 96)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[99]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*144) + 105)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*144) + 7)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*144) + 16)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*144) + 25)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*144) + 34)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[19]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*144) + 79)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[46]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*144) + 88)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[73]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*144) + 97)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[100]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*144) + 106)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[26]*kernel.shared_1[((threadIdx.x*144) + 8)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[53]*kernel.shared_1[((threadIdx.x*144) + 17)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[80]*kernel.shared_1[((threadIdx.x*144) + 26)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[107]*kernel.shared_1[((threadIdx.x*144) + 35)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[20]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[21]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[22]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[23]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[24]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[25]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[26]*kernel.shared_1[((threadIdx.x*144) + 80)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[47]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[48]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[49]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[50]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[51]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[52]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[53]*kernel.shared_1[((threadIdx.x*144) + 89)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[74]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[75]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[76]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[77]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[78]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[79]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[80]*kernel.shared_1[((threadIdx.x*144) + 98)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[101]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[102]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[103]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[104]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[105]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[106]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[107]*kernel.shared_1[((threadIdx.x*144) + 107)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[108]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[109]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*144) + 36)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[135]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[136]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*144) + 45)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[162]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[163]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*144) + 54)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[189]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[190]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*144) + 63)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[108]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[109]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*144) + 108)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[135]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[136]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*144) + 117)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[162]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[163]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*144) + 126)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[189]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[190]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*144) + 135)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[109]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[115]*kernel.shared_1[((threadIdx.x*144) + 37)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[136]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[142]*kernel.shared_1[((threadIdx.x*144) + 46)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[163]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[169]*kernel.shared_1[((threadIdx.x*144) + 55)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[190]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[196]*kernel.shared_1[((threadIdx.x*144) + 64)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[109]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[115]*kernel.shared_1[((threadIdx.x*144) + 109)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[136]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[142]*kernel.shared_1[((threadIdx.x*144) + 118)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[163]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[169]*kernel.shared_1[((threadIdx.x*144) + 127)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[190]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[196]*kernel.shared_1[((threadIdx.x*144) + 136)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[115]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[116]*kernel.shared_1[((threadIdx.x*144) + 38)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[142]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[143]*kernel.shared_1[((threadIdx.x*144) + 47)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[169]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[170]*kernel.shared_1[((threadIdx.x*144) + 56)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[196]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[197]*kernel.shared_1[((threadIdx.x*144) + 65)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[110]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[111]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[112]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[113]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[114]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[115]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[116]*kernel.shared_1[((threadIdx.x*144) + 110)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[137]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[138]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[139]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[140]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[141]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[142]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[143]*kernel.shared_1[((threadIdx.x*144) + 119)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[164]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[165]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[166]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[167]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[168]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[169]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[170]*kernel.shared_1[((threadIdx.x*144) + 128)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[191]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[192]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[193]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[194]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[195]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[196]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[197]*kernel.shared_1[((threadIdx.x*144) + 137)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[117]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[118]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*144) + 39)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[144]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[145]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*144) + 48)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[171]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[172]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*144) + 57)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[198]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[199]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*144) + 66)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[117]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[118]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*144) + 111)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[144]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[145]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*144) + 120)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[171]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[172]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*144) + 129)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[198]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[199]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*144) + 138)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[118]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[124]*kernel.shared_1[((threadIdx.x*144) + 40)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[145]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[151]*kernel.shared_1[((threadIdx.x*144) + 49)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[172]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[178]*kernel.shared_1[((threadIdx.x*144) + 58)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[199]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[205]*kernel.shared_1[((threadIdx.x*144) + 67)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[118]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[124]*kernel.shared_1[((threadIdx.x*144) + 112)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[145]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[151]*kernel.shared_1[((threadIdx.x*144) + 121)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[172]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[178]*kernel.shared_1[((threadIdx.x*144) + 130)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[199]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[205]*kernel.shared_1[((threadIdx.x*144) + 139)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[124]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[125]*kernel.shared_1[((threadIdx.x*144) + 41)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[151]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[152]*kernel.shared_1[((threadIdx.x*144) + 50)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[178]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[179]*kernel.shared_1[((threadIdx.x*144) + 59)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[205]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[206]*kernel.shared_1[((threadIdx.x*144) + 68)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[119]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[120]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[121]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[122]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[123]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[124]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[125]*kernel.shared_1[((threadIdx.x*144) + 113)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[146]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[147]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[148]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[149]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[150]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[151]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[152]*kernel.shared_1[((threadIdx.x*144) + 122)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[173]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[174]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[175]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[176]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[177]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[178]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[179]*kernel.shared_1[((threadIdx.x*144) + 131)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[200]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[201]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[202]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[203]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[204]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[205]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[206]*kernel.shared_1[((threadIdx.x*144) + 140)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[126]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[127]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*144) + 42)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[153]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[154]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*144) + 51)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[180]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[181]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*144) + 60)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[207]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[208]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*144) + 69)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[126]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[127]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*144) + 114)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[153]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[154]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*144) + 123)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[180]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[181]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*144) + 132)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[207]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[208]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*144) + 141)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[127]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[133]*kernel.shared_1[((threadIdx.x*144) + 43)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[154]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[160]*kernel.shared_1[((threadIdx.x*144) + 52)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[181]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[187]*kernel.shared_1[((threadIdx.x*144) + 61)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[208]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[214]*kernel.shared_1[((threadIdx.x*144) + 70)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[127]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[133]*kernel.shared_1[((threadIdx.x*144) + 115)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[154]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[160]*kernel.shared_1[((threadIdx.x*144) + 124)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[181]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[187]*kernel.shared_1[((threadIdx.x*144) + 133)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[208]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[214]*kernel.shared_1[((threadIdx.x*144) + 142)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[133]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[134]*kernel.shared_1[((threadIdx.x*144) + 44)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[160]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[161]*kernel.shared_1[((threadIdx.x*144) + 53)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[187]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[188]*kernel.shared_1[((threadIdx.x*144) + 62)]))
            conv2d_nchw_1[0] = (conv2d_nchw_1[0] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[2] = (conv2d_nchw_1[2] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[4] = (conv2d_nchw_1[4] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[6] = (conv2d_nchw_1[6] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[8] = (conv2d_nchw_1[8] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[10] = (conv2d_nchw_1[10] + (pad_temp.shared_1[214]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[12] = (conv2d_nchw_1[12] + (pad_temp.shared_1[215]*kernel.shared_1[((threadIdx.x*144) + 71)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[128]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[129]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[130]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[131]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[132]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[133]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[134]*kernel.shared_1[((threadIdx.x*144) + 116)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[155]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[156]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[157]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[158]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[159]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[160]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[161]*kernel.shared_1[((threadIdx.x*144) + 125)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[182]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[183]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[184]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[185]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[186]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[187]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[188]*kernel.shared_1[((threadIdx.x*144) + 134)]))
            conv2d_nchw_1[1] = (conv2d_nchw_1[1] + (pad_temp.shared_1[209]*kernel.shared_1[((threadIdx.x*144) + 143)]))
            conv2d_nchw_1[3] = (conv2d_nchw_1[3] + (pad_temp.shared_1[210]*kernel.shared_1[((threadIdx.x*144) + 143)]))
            conv2d_nchw_1[5] = (conv2d_nchw_1[5] + (pad_temp.shared_1[211]*kernel.shared_1[((threadIdx.x*144) + 143)]))
            conv2d_nchw_1[7] = (conv2d_nchw_1[7] + (pad_temp.shared_1[212]*kernel.shared_1[((threadIdx.x*144) + 143)]))
            conv2d_nchw_1[9] = (conv2d_nchw_1[9] + (pad_temp.shared_1[213]*kernel.shared_1[((threadIdx.x*144) + 143)]))
            conv2d_nchw_1[11] = (conv2d_nchw_1[11] + (pad_temp.shared_1[214]*kernel.shared_1[((threadIdx.x*144) + 143)]))
            conv2d_nchw_1[13] = (conv2d_nchw_1[13] + (pad_temp.shared_1[215]*kernel.shared_1[((threadIdx.x*144) + 143)]))
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute[((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7))] = max((conv2d_nchw_1[i1.inner] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 1)] = max((conv2d_nchw_1[(i1.inner + 2)] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 2)] = max((conv2d_nchw_1[(i1.inner + 4)] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 3)] = max((conv2d_nchw_1[(i1.inner + 6)] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 4)] = max((conv2d_nchw_1[(i1.inner + 8)] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 5)] = max((conv2d_nchw_1[(i1.inner + 10)] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
          compute[(((((floordiv(blockIdx.x, 7)*784) + (threadIdx.x*98)) + (i1.inner*49)) + (floormod(blockIdx.x, 7)*7)) + 6)] = max((conv2d_nchw_1[(i1.inner + 12)] + bias[(((floordiv(blockIdx.x, 7)*16) + (threadIdx.x*2)) + i1.inner)]), 0f32)
        }
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 135-138

Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.

.. GENERATED FROM PYTHON SOURCE LINES 138-165

.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    dev = tvm.cuda()
    data_tvm = tvm.nd.array(data_np, device=dev)
    weight_tvm = tvm.nd.array(weight_np, device=dev)
    bias_tvm = tvm.nd.array(bias_np, device=dev)
    out_tvm = tvm.nd.empty(out_np.shape, device=dev)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.numpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, dev, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Execution time of this operator: 0.427 ms




.. GENERATED FROM PYTHON SOURCE LINES 166-171

Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

.. GENERATED FROM PYTHON SOURCE LINES 173-176

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.

.. GENERATED FROM PYTHON SOURCE LINES 176-183

.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    conv2d_nchw_nn, conv2d_nchw_ff, conv2d_nchw_yy, conv2d_nchw_xx, conv2d_nchw_rc, conv2d_nchw_ry, conv2d_nchw_rx = tuple(conv2d_nchw.op.axis) + tuple(conv2d_nchw.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    conv2d_nchw_nn_o_i, conv2d_nchw_nn_i = s[conv2d_nchw].split(conv2d_nchw_nn, factor=1)
    conv2d_nchw_nn_o_o_i, conv2d_nchw_nn_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_i, conv2d_nchw_nn_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_i, factor=1)
    conv2d_nchw_nn_o_o_o_o, conv2d_nchw_nn_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_nn_o_o_o_i, factor=1)
    conv2d_nchw_ff_o_i, conv2d_nchw_ff_i = s[conv2d_nchw].split(conv2d_nchw_ff, factor=1)
    conv2d_nchw_ff_o_o_i, conv2d_nchw_ff_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_i, factor=2)
    conv2d_nchw_ff_o_o_o_i, conv2d_nchw_ff_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_i, factor=8)
    conv2d_nchw_ff_o_o_o_o, conv2d_nchw_ff_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_ff_o_o_o_i, factor=1)
    conv2d_nchw_yy_o_i, conv2d_nchw_yy_i = s[conv2d_nchw].split(conv2d_nchw_yy, factor=1)
    conv2d_nchw_yy_o_o_i, conv2d_nchw_yy_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_i, conv2d_nchw_yy_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_i, factor=1)
    conv2d_nchw_yy_o_o_o_o, conv2d_nchw_yy_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_yy_o_o_o_i, factor=1)
    conv2d_nchw_xx_o_i, conv2d_nchw_xx_i = s[conv2d_nchw].split(conv2d_nchw_xx, factor=1)
    conv2d_nchw_xx_o_o_i, conv2d_nchw_xx_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_i, conv2d_nchw_xx_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_i, factor=1)
    conv2d_nchw_xx_o_o_o_o, conv2d_nchw_xx_o_o_o_i = s[conv2d_nchw].split(conv2d_nchw_xx_o_o_o_i, factor=7)
    conv2d_nchw_rc_o_i, conv2d_nchw_rc_i = s[conv2d_nchw].split(conv2d_nchw_rc, factor=4)
    conv2d_nchw_rc_o_o, conv2d_nchw_rc_o_i = s[conv2d_nchw].split(conv2d_nchw_rc_o_i, factor=2)
    conv2d_nchw_ry_o_i, conv2d_nchw_ry_i = s[conv2d_nchw].split(conv2d_nchw_ry, factor=1)
    conv2d_nchw_ry_o_o, conv2d_nchw_ry_o_i = s[conv2d_nchw].split(conv2d_nchw_ry_o_i, factor=3)
    conv2d_nchw_rx_o_i, conv2d_nchw_rx_i = s[conv2d_nchw].split(conv2d_nchw_rx, factor=1)
    conv2d_nchw_rx_o_o, conv2d_nchw_rx_o_i = s[conv2d_nchw].split(conv2d_nchw_rx_o_i, factor=3)
    s[conv2d_nchw].reorder(conv2d_nchw_nn_o_o_o_o, conv2d_nchw_ff_o_o_o_o, conv2d_nchw_yy_o_o_o_o, conv2d_nchw_xx_o_o_o_o, conv2d_nchw_nn_o_o_o_i, conv2d_nchw_ff_o_o_o_i, conv2d_nchw_yy_o_o_o_i, conv2d_nchw_xx_o_o_o_i, conv2d_nchw_nn_o_o_i, conv2d_nchw_ff_o_o_i, conv2d_nchw_yy_o_o_i, conv2d_nchw_xx_o_o_i, conv2d_nchw_rc_o_o, conv2d_nchw_ry_o_o, conv2d_nchw_rx_o_o, conv2d_nchw_rc_o_i, conv2d_nchw_ry_o_i, conv2d_nchw_rx_o_i, conv2d_nchw_nn_o_i, conv2d_nchw_ff_o_i, conv2d_nchw_yy_o_i, conv2d_nchw_xx_o_i, conv2d_nchw_rc_i, conv2d_nchw_ry_i, conv2d_nchw_rx_i, conv2d_nchw_nn_i, conv2d_nchw_ff_i, conv2d_nchw_yy_i, conv2d_nchw_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=2)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=8)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=1)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=7)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[conv2d_nchw].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [conv2d_nchw])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [conv2d_nchw])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[conv2d_nchw], conv2d_nchw_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=8)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=8)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[conv2d_nchw].pragma(conv2d_nchw_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:

    #ifdef _WIN32
      using uint = unsigned int;
      using uchar = unsigned char;
      using ushort = unsigned short;
      using int64_t = long long;
      using uint64_t = unsigned long long;
    #else
      #define uint unsigned int
      #define uchar unsigned char
      #define ushort unsigned short
      #define int64_t long long
      #define uint64_t unsigned long long
    #endif
    extern "C" __global__ void __launch_bounds__(8) default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float conv2d_nchw[14];
      __shared__ float pad_temp_shared[216];
      __shared__ float kernel_shared[1152];
      conv2d_nchw[0] = 0.000000e+00f;
      conv2d_nchw[2] = 0.000000e+00f;
      conv2d_nchw[4] = 0.000000e+00f;
      conv2d_nchw[6] = 0.000000e+00f;
      conv2d_nchw[8] = 0.000000e+00f;
      conv2d_nchw[10] = 0.000000e+00f;
      conv2d_nchw[12] = 0.000000e+00f;
      conv2d_nchw[1] = 0.000000e+00f;
      conv2d_nchw[3] = 0.000000e+00f;
      conv2d_nchw[5] = 0.000000e+00f;
      conv2d_nchw[7] = 0.000000e+00f;
      conv2d_nchw[9] = 0.000000e+00f;
      conv2d_nchw[11] = 0.000000e+00f;
      conv2d_nchw[13] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[((int)threadIdx.x)] = (((1 <= (((int)blockIdx.x) % 7)) && (1 <= ((int)threadIdx.x))) ? data[((((rc_outer_outer * 392) + ((((int)blockIdx.x) % 7) * 7)) + ((int)threadIdx.x)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 8)] = ((((1 <= (((((int)threadIdx.x) + 8) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 8) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 16)] = (((((((((int)threadIdx.x) + 16) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 16) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 24)] = (((((1 <= ((((((int)threadIdx.x) + 24) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 24) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 24) / 27) * 49)) + ((((((int)threadIdx.x) + 24) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 32)] = ((((1 <= (((((int)threadIdx.x) + 5) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 32) / 27) * 49)) + (((((int)threadIdx.x) + 5) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 40)] = (((((((((int)threadIdx.x) + 13) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 40) / 27) * 49)) + (((((int)threadIdx.x) + 13) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 48)] = (((((1 <= ((((((int)threadIdx.x) + 21) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 21) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 48) / 27) * 49)) + ((((((int)threadIdx.x) + 21) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 56)] = ((((1 <= (((((int)threadIdx.x) + 2) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 56) / 27) * 49)) + (((((int)threadIdx.x) + 2) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 64)] = ((((int)threadIdx.x) < 7) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 64) / 27) * 49)) + (((((int)threadIdx.x) + 10) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((int)threadIdx.x)) - 7)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 72)] = ((((((int)blockIdx.x) % 7) < 6) && (1 <= ((int)threadIdx.x))) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 72) / 27) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((int)threadIdx.x)) + 6)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 80)] = (((((1 <= ((((((int)threadIdx.x) + 26) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 26) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 80) / 27) * 49)) + ((((((int)threadIdx.x) + 26) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 88)] = ((((1 <= (((((int)threadIdx.x) + 7) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 88) / 27) * 49)) + (((((int)threadIdx.x) + 7) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 96)] = (((((((((int)threadIdx.x) + 15) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 96) / 27) * 49)) + (((((int)threadIdx.x) + 15) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 104)] = (((((1 <= ((((((int)threadIdx.x) + 23) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 23) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 104) / 27) * 49)) + ((((((int)threadIdx.x) + 23) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 112)] = ((((1 <= (((((int)threadIdx.x) + 4) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 112) / 27) * 49)) + (((((int)threadIdx.x) + 4) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 120)] = (((((((((int)threadIdx.x) + 12) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 120) / 27) * 49)) + (((((int)threadIdx.x) + 12) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 128)] = (((((1 <= ((((((int)threadIdx.x) + 20) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 20) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 128) / 27) * 49)) + ((((((int)threadIdx.x) + 20) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 136)] = (((1 <= (((int)blockIdx.x) % 7)) && (((int)threadIdx.x) < 7)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 136) / 27) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((int)threadIdx.x)) - 7)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 144)] = ((1 <= ((int)threadIdx.x)) ? data[(((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 144) / 27) * 49)) + ((((int)blockIdx.x) % 7) * 7)) + ((int)threadIdx.x)) - 1)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 152)] = (((((((((int)threadIdx.x) + 17) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 152) / 27) * 49)) + (((((int)threadIdx.x) + 17) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 160)] = (((((1 <= ((((((int)threadIdx.x) + 25) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 25) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 160) / 27) * 49)) + ((((((int)threadIdx.x) + 25) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 168)] = ((((1 <= (((((int)threadIdx.x) + 6) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 168) / 27) * 49)) + (((((int)threadIdx.x) + 6) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 176)] = (((((((((int)threadIdx.x) + 14) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 176) / 27) * 49)) + (((((int)threadIdx.x) + 14) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 184)] = (((((1 <= ((((((int)threadIdx.x) + 22) % 27) / 9) + (((int)blockIdx.x) % 7))) && (((((((int)threadIdx.x) + 22) % 27) / 9) + (((int)blockIdx.x) % 7)) < 8)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 184) / 27) * 49)) + ((((((int)threadIdx.x) + 22) % 27) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 192)] = ((((1 <= (((((int)threadIdx.x) + 3) / 9) + (((int)blockIdx.x) % 7))) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 192) / 27) * 49)) + (((((int)threadIdx.x) + 3) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 200)] = (((((((((int)threadIdx.x) + 11) / 9) + (((int)blockIdx.x) % 7)) < 8) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 200) / 27) * 49)) + (((((int)threadIdx.x) + 11) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8)] : 0.000000e+00f);
        pad_temp_shared[(((int)threadIdx.x) + 208)] = ((((((((int)threadIdx.x) + 19) / 9) + (((int)blockIdx.x) % 7)) < 8) && (((int)threadIdx.x) < 7)) ? data[((((((rc_outer_outer * 392) + (((((int)threadIdx.x) + 208) / 27) * 49)) + (((((int)threadIdx.x) + 19) / 9) * 7)) + ((((int)blockIdx.x) % 7) * 7)) + ((int)threadIdx.x)) - 7)] : 0.000000e+00f);
        kernel_shared[((int)threadIdx.x)] = kernel[((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x))];
        kernel_shared[(((int)threadIdx.x) + 8)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 16)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 24)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 24)];
        kernel_shared[(((int)threadIdx.x) + 32)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 40)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 48)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 48)];
        kernel_shared[(((int)threadIdx.x) + 56)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
        kernel_shared[(((int)threadIdx.x) + 64)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
        kernel_shared[(((int)threadIdx.x) + 72)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 80)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 88)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 96)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 4632)];
        kernel_shared[(((int)threadIdx.x) + 104)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 112)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 120)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 4656)];
        kernel_shared[(((int)threadIdx.x) + 128)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 136)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 4608)];
        kernel_shared[(((int)threadIdx.x) + 144)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 152)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 160)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 168)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 9240)];
        kernel_shared[(((int)threadIdx.x) + 176)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 184)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 192)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 9264)];
        kernel_shared[(((int)threadIdx.x) + 200)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 208)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 9216)];
        kernel_shared[(((int)threadIdx.x) + 216)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 224)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 232)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 240)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 13848)];
        kernel_shared[(((int)threadIdx.x) + 248)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 256)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 264)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 13872)];
        kernel_shared[(((int)threadIdx.x) + 272)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 280)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 13824)];
        kernel_shared[(((int)threadIdx.x) + 288)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 296)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 304)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 312)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 18456)];
        kernel_shared[(((int)threadIdx.x) + 320)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 328)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 336)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 18480)];
        kernel_shared[(((int)threadIdx.x) + 344)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 352)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 18432)];
        kernel_shared[(((int)threadIdx.x) + 360)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 368)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 376)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 384)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 23064)];
        kernel_shared[(((int)threadIdx.x) + 392)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 400)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 408)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 23088)];
        kernel_shared[(((int)threadIdx.x) + 416)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 424)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 23040)];
        kernel_shared[(((int)threadIdx.x) + 432)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 440)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 448)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 456)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 27672)];
        kernel_shared[(((int)threadIdx.x) + 464)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 472)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 480)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 27696)];
        kernel_shared[(((int)threadIdx.x) + 488)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 496)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 27648)];
        kernel_shared[(((int)threadIdx.x) + 504)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 512)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 520)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 528)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 32280)];
        kernel_shared[(((int)threadIdx.x) + 536)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 544)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 552)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 32304)];
        kernel_shared[(((int)threadIdx.x) + 560)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 568)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 32256)];
        kernel_shared[(((int)threadIdx.x) + 576)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 584)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 592)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 600)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 36888)];
        kernel_shared[(((int)threadIdx.x) + 608)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 616)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 624)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 36912)];
        kernel_shared[(((int)threadIdx.x) + 632)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 640)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 36864)];
        kernel_shared[(((int)threadIdx.x) + 648)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 656)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 664)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 672)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 41496)];
        kernel_shared[(((int)threadIdx.x) + 680)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 688)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 696)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 41520)];
        kernel_shared[(((int)threadIdx.x) + 704)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 712)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 41472)];
        kernel_shared[(((int)threadIdx.x) + 720)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 728)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 736)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 744)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 46104)];
        kernel_shared[(((int)threadIdx.x) + 752)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 760)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 768)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 46128)];
        kernel_shared[(((int)threadIdx.x) + 776)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 784)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 46080)];
        kernel_shared[(((int)threadIdx.x) + 792)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 800)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 808)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 816)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 50712)];
        kernel_shared[(((int)threadIdx.x) + 824)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 832)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 840)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 50736)];
        kernel_shared[(((int)threadIdx.x) + 848)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 856)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 50688)];
        kernel_shared[(((int)threadIdx.x) + 864)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 872)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 880)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 888)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 55320)];
        kernel_shared[(((int)threadIdx.x) + 896)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 904)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 912)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 55344)];
        kernel_shared[(((int)threadIdx.x) + 920)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 928)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 55296)];
        kernel_shared[(((int)threadIdx.x) + 936)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 944)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 952)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 960)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 59928)];
        kernel_shared[(((int)threadIdx.x) + 968)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 976)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 984)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 59952)];
        kernel_shared[(((int)threadIdx.x) + 992)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 1000)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 59904)];
        kernel_shared[(((int)threadIdx.x) + 1008)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1016)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1024)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1032)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 64536)];
        kernel_shared[(((int)threadIdx.x) + 1040)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1048)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1056)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 64560)];
        kernel_shared[(((int)threadIdx.x) + 1064)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1072)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 64512)];
        kernel_shared[(((int)threadIdx.x) + 1080)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 69120)];
        kernel_shared[(((int)threadIdx.x) + 1088)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 8) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 69120)];
        kernel_shared[(((int)threadIdx.x) + 1096)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 69120)];
        kernel_shared[(((int)threadIdx.x) + 1104)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 69144)];
        kernel_shared[(((int)threadIdx.x) + 1112)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 69120)];
        kernel_shared[(((int)threadIdx.x) + 1120)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 40) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 69120)];
        kernel_shared[(((int)threadIdx.x) + 1128)] = kernel[(((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + ((int)threadIdx.x)) + 69168)];
        kernel_shared[(((int)threadIdx.x) + 1136)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 56) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3)) + 69120)];
        kernel_shared[(((int)threadIdx.x) + 1144)] = kernel[((((((((int)blockIdx.x) / 7) * 73728) + (rc_outer_outer * 72)) + (((((int)threadIdx.x) + 64) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3)) + 69120)];
        __syncthreads();
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[0] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[1] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[2] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[3] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[4] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[5] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[6] * kernel_shared[(((int)threadIdx.x) * 144)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[27] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 144) + 9)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[54] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 144) + 18)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[81] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 144) + 27)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[0] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[1] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 144) + 72)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[27] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 144) + 81)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[54] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 144) + 90)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[81] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 144) + 99)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[1] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 144) + 1)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 144) + 10)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 144) + 19)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 144) + 28)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[1] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 144) + 73)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[28] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 144) + 82)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[55] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 144) + 91)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[82] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 144) + 100)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 144) + 2)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 144) + 11)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 144) + 20)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 144) + 29)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[2] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[3] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[4] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[5] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[6] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[7] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[8] * kernel_shared[((((int)threadIdx.x) * 144) + 74)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[29] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[30] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[31] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[32] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[33] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[34] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[35] * kernel_shared[((((int)threadIdx.x) * 144) + 83)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[56] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[57] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[58] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[59] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[60] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[61] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[62] * kernel_shared[((((int)threadIdx.x) * 144) + 92)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[83] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[84] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[85] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[86] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[87] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[88] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[89] * kernel_shared[((((int)threadIdx.x) * 144) + 101)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 144) + 3)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 144) + 12)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 144) + 21)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 144) + 30)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[9] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 144) + 75)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[36] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 144) + 84)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[63] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 144) + 93)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[90] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 144) + 102)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 144) + 4)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 144) + 13)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 144) + 22)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 144) + 31)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[10] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 144) + 76)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[37] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 144) + 85)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[64] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 144) + 94)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[91] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 144) + 103)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 144) + 5)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 144) + 14)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 144) + 23)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 144) + 32)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[11] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[12] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[13] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[14] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[15] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[16] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[17] * kernel_shared[((((int)threadIdx.x) * 144) + 77)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[38] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[39] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[40] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[41] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[42] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[43] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[44] * kernel_shared[((((int)threadIdx.x) * 144) + 86)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[65] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[66] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[67] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[68] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[69] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[70] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[71] * kernel_shared[((((int)threadIdx.x) * 144) + 95)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[92] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[93] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[94] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[95] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[96] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[97] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[98] * kernel_shared[((((int)threadIdx.x) * 144) + 104)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 144) + 6)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 144) + 15)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 144) + 24)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 144) + 33)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[18] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 144) + 78)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[45] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 144) + 87)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[72] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 144) + 96)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[99] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 144) + 105)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 144) + 7)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 144) + 16)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 144) + 25)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 144) + 34)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[19] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 144) + 79)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[46] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 144) + 88)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[73] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 144) + 97)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[100] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 144) + 106)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[26] * kernel_shared[((((int)threadIdx.x) * 144) + 8)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[53] * kernel_shared[((((int)threadIdx.x) * 144) + 17)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[80] * kernel_shared[((((int)threadIdx.x) * 144) + 26)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[107] * kernel_shared[((((int)threadIdx.x) * 144) + 35)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[20] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[21] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[22] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[23] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[24] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[25] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[26] * kernel_shared[((((int)threadIdx.x) * 144) + 80)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[47] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[48] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[49] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[50] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[51] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[52] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[53] * kernel_shared[((((int)threadIdx.x) * 144) + 89)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[74] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[75] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[76] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[77] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[78] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[79] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[80] * kernel_shared[((((int)threadIdx.x) * 144) + 98)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[101] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[102] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[103] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[104] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[105] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[106] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[107] * kernel_shared[((((int)threadIdx.x) * 144) + 107)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[108] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[109] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 144) + 36)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[135] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[136] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 144) + 45)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[162] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[163] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 144) + 54)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[189] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[190] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 144) + 63)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[108] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[109] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 144) + 108)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[135] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[136] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 144) + 117)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[162] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[163] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 144) + 126)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[189] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[190] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 144) + 135)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[109] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[115] * kernel_shared[((((int)threadIdx.x) * 144) + 37)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[136] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[142] * kernel_shared[((((int)threadIdx.x) * 144) + 46)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[163] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[169] * kernel_shared[((((int)threadIdx.x) * 144) + 55)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[190] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[196] * kernel_shared[((((int)threadIdx.x) * 144) + 64)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[109] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[115] * kernel_shared[((((int)threadIdx.x) * 144) + 109)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[136] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[142] * kernel_shared[((((int)threadIdx.x) * 144) + 118)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[163] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[169] * kernel_shared[((((int)threadIdx.x) * 144) + 127)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[190] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[196] * kernel_shared[((((int)threadIdx.x) * 144) + 136)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[115] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[116] * kernel_shared[((((int)threadIdx.x) * 144) + 38)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[142] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[143] * kernel_shared[((((int)threadIdx.x) * 144) + 47)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[169] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[170] * kernel_shared[((((int)threadIdx.x) * 144) + 56)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[196] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[197] * kernel_shared[((((int)threadIdx.x) * 144) + 65)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[110] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[111] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[112] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[113] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[114] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[115] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[116] * kernel_shared[((((int)threadIdx.x) * 144) + 110)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[137] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[138] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[139] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[140] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[141] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[142] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[143] * kernel_shared[((((int)threadIdx.x) * 144) + 119)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[164] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[165] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[166] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[167] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[168] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[169] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[170] * kernel_shared[((((int)threadIdx.x) * 144) + 128)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[191] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[192] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[193] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[194] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[195] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[196] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[197] * kernel_shared[((((int)threadIdx.x) * 144) + 137)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[117] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[118] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 144) + 39)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[144] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[145] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 144) + 48)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[171] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[172] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 144) + 57)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[198] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[199] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 144) + 66)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[117] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[118] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 144) + 111)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[144] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[145] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 144) + 120)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[171] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[172] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 144) + 129)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[198] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[199] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 144) + 138)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[118] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[124] * kernel_shared[((((int)threadIdx.x) * 144) + 40)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[145] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[151] * kernel_shared[((((int)threadIdx.x) * 144) + 49)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[172] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[178] * kernel_shared[((((int)threadIdx.x) * 144) + 58)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[199] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[205] * kernel_shared[((((int)threadIdx.x) * 144) + 67)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[118] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[124] * kernel_shared[((((int)threadIdx.x) * 144) + 112)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[145] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[151] * kernel_shared[((((int)threadIdx.x) * 144) + 121)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[172] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[178] * kernel_shared[((((int)threadIdx.x) * 144) + 130)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[199] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[205] * kernel_shared[((((int)threadIdx.x) * 144) + 139)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[124] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[125] * kernel_shared[((((int)threadIdx.x) * 144) + 41)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[151] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[152] * kernel_shared[((((int)threadIdx.x) * 144) + 50)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[178] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[179] * kernel_shared[((((int)threadIdx.x) * 144) + 59)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[205] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[206] * kernel_shared[((((int)threadIdx.x) * 144) + 68)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[119] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[120] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[121] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[122] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[123] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[124] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[125] * kernel_shared[((((int)threadIdx.x) * 144) + 113)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[146] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[147] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[148] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[149] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[150] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[151] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[152] * kernel_shared[((((int)threadIdx.x) * 144) + 122)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[173] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[174] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[175] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[176] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[177] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[178] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[179] * kernel_shared[((((int)threadIdx.x) * 144) + 131)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[200] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[201] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[202] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[203] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[204] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[205] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[206] * kernel_shared[((((int)threadIdx.x) * 144) + 140)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[126] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[127] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 144) + 42)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[153] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[154] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 144) + 51)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[180] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[181] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 144) + 60)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[207] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[208] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 144) + 69)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[126] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[127] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 144) + 114)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[153] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[154] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 144) + 123)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[180] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[181] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 144) + 132)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[207] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[208] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 144) + 141)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[127] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[133] * kernel_shared[((((int)threadIdx.x) * 144) + 43)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[154] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[160] * kernel_shared[((((int)threadIdx.x) * 144) + 52)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[181] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[187] * kernel_shared[((((int)threadIdx.x) * 144) + 61)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[208] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[214] * kernel_shared[((((int)threadIdx.x) * 144) + 70)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[127] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[133] * kernel_shared[((((int)threadIdx.x) * 144) + 115)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[154] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[160] * kernel_shared[((((int)threadIdx.x) * 144) + 124)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[181] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[187] * kernel_shared[((((int)threadIdx.x) * 144) + 133)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[208] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[214] * kernel_shared[((((int)threadIdx.x) * 144) + 142)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[133] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[134] * kernel_shared[((((int)threadIdx.x) * 144) + 44)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[160] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[161] * kernel_shared[((((int)threadIdx.x) * 144) + 53)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[187] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[188] * kernel_shared[((((int)threadIdx.x) * 144) + 62)]));
        conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[214] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[215] * kernel_shared[((((int)threadIdx.x) * 144) + 71)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[128] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[129] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[130] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[131] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[132] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[133] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[134] * kernel_shared[((((int)threadIdx.x) * 144) + 116)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[155] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[156] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[157] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[158] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[159] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[160] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[161] * kernel_shared[((((int)threadIdx.x) * 144) + 125)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[182] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[183] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[184] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[185] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[186] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[187] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[188] * kernel_shared[((((int)threadIdx.x) * 144) + 134)]));
        conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[209] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
        conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[210] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
        conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[211] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
        conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[212] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
        conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[213] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
        conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[214] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
        conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[215] * kernel_shared[((((int)threadIdx.x) * 144) + 143)]));
      }
      for (int i1_inner = 0; i1_inner < 2; ++i1_inner) {
        compute[(((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7))] = max((conv2d_nchw[i1_inner] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 1)] = max((conv2d_nchw[(i1_inner + 2)] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 2)] = max((conv2d_nchw[(i1_inner + 4)] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 3)] = max((conv2d_nchw[(i1_inner + 6)] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 4)] = max((conv2d_nchw[(i1_inner + 8)] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 5)] = max((conv2d_nchw[(i1_inner + 10)] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
        compute[((((((((int)blockIdx.x) / 7) * 784) + (((int)threadIdx.x) * 98)) + (i1_inner * 49)) + ((((int)blockIdx.x) % 7) * 7)) + 6)] = max((conv2d_nchw[(i1_inner + 12)] + bias[((((((int)blockIdx.x) / 7) * 16) + (((int)threadIdx.x) * 2)) + i1_inner)]), 0.000000e+00f);
      }
    }






.. GENERATED FROM PYTHON SOURCE LINES 184-188

A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.

.. GENERATED FROM PYTHON SOURCE LINES 188-210

.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Resume search:
    /usr/local/lib/python3.7/dist-packages/xgboost/training.py:17: UserWarning: Old style callback is deprecated.  See: https://xgboost.readthedocs.io/en/latest/python/callbacks.html
      warnings.warn(f'Old style callback is deprecated.  See: {link}', UserWarning)
    Get devices for measurement successfully!






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  40.053 seconds)


.. _sphx_glr_download_how_to_tune_with_autoscheduler_tune_conv2d_layer_cuda.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
