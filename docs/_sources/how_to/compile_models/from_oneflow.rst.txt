.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_how_to_compile_models_from_oneflow.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_how_to_compile_models_from_oneflow.py:


Compile OneFlow Models
======================
**Author**: `Xiaoyu Zhang <https://github.com/BBuf/>`_

This article is an introductory tutorial to deploy OneFlow models with Relay.

For us to begin with, OneFlow package should be installed.

A quick solution is to install via pip

.. code-block:: bash

    pip install flowvision==0.1.0
    python3 -m pip install -f https://release.oneflow.info oneflow==0.7.0+cpu

or please refer to official site:
https://github.com/Oneflow-Inc/oneflow

Currently, TVM supports OneFlow 0.7.0. Other versions may be unstable.


.. code-block:: default

    import os, math
    from matplotlib import pyplot as plt
    import numpy as np
    from PIL import Image

    # oneflow imports
    import flowvision
    import oneflow as flow
    import oneflow.nn as nn

    import tvm
    from tvm import relay
    from tvm.contrib.download import download_testdata





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional_pil.py:193: DeprecationWarning: BILINEAR is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BILINEAR instead.
      def resize(img, size, interpolation=Image.BILINEAR):
    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional.py:65: DeprecationWarning: NEAREST is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.NEAREST or Dither.NONE instead.
      Image.NEAREST: "nearest",
    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional.py:66: DeprecationWarning: BILINEAR is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BILINEAR instead.
      Image.BILINEAR: "bilinear",
    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional.py:67: DeprecationWarning: BICUBIC is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BICUBIC instead.
      Image.BICUBIC: "bicubic",
    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional.py:68: DeprecationWarning: BOX is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BOX instead.
      Image.BOX: "box",
    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional.py:69: DeprecationWarning: HAMMING is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.HAMMING instead.
      Image.HAMMING: "hamming",
    /usr/local/lib/python3.7/dist-packages/flowvision/transforms/functional.py:70: DeprecationWarning: LANCZOS is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.LANCZOS instead.
      Image.LANCZOS: "lanczos",
    /usr/local/lib/python3.7/dist-packages/flowvision/data/auto_augment.py:28: DeprecationWarning: BILINEAR is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BILINEAR instead.
      _RANDOM_INTERPOLATION = (Image.BILINEAR, Image.BICUBIC)
    /usr/local/lib/python3.7/dist-packages/flowvision/data/auto_augment.py:28: DeprecationWarning: BICUBIC is deprecated and will be removed in Pillow 10 (2023-07-01). Use Resampling.BICUBIC instead.
      _RANDOM_INTERPOLATION = (Image.BILINEAR, Image.BICUBIC)



Load a pretrained OneFlow model and save model
----------------------------------------------


.. code-block:: default

    model_name = "resnet18"
    model = getattr(flowvision.models, model_name)(pretrained=True)
    model = model.eval()

    model_dir = "resnet18_model"
    if not os.path.exists(model_dir):
        flow.save(model.state_dict(), model_dir)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading: "https://oneflow-public.oss-cn-beijing.aliyuncs.com/model_zoo/flowvision/classification/ResNet/resnet18.zip" to /workspace/.oneflow/flowvision_cache/resnet18.zip
      0%|          | 0.00/41.5M [00:00<?, ?B/s]      0%|          | 16.0k/41.5M [00:00<07:34, 95.8kB/s]      0%|          | 48.0k/41.5M [00:00<04:46, 152kB/s]       0%|          | 96.0k/41.5M [00:00<03:23, 213kB/s]      0%|          | 168k/41.5M [00:00<02:25, 298kB/s]       1%|          | 352k/41.5M [00:00<01:13, 585kB/s]      2%|1         | 688k/41.5M [00:01<00:40, 1.07MB/s]      3%|3         | 1.36M/41.5M [00:01<00:20, 2.08MB/s]      7%|6         | 2.73M/41.5M [00:01<00:09, 4.07MB/s]     10%|#         | 4.20M/41.5M [00:01<00:06, 5.61MB/s]     14%|#3        | 5.68M/41.5M [00:01<00:05, 6.65MB/s]     17%|#7        | 7.16M/41.5M [00:01<00:04, 7.37MB/s]     21%|##        | 8.62M/41.5M [00:01<00:03, 8.96MB/s]     23%|##3       | 9.55M/41.5M [00:02<00:03, 8.90MB/s]     25%|##5       | 10.5M/41.5M [00:02<00:03, 8.38MB/s]     28%|##7       | 11.6M/41.5M [00:02<00:03, 9.11MB/s]     30%|###       | 12.5M/41.5M [00:02<00:03, 9.00MB/s]     32%|###2      | 13.4M/41.5M [00:02<00:03, 8.36MB/s]     35%|###4      | 14.5M/41.5M [00:02<00:03, 9.26MB/s]     37%|###7      | 15.4M/41.5M [00:02<00:03, 9.10MB/s]     39%|###9      | 16.3M/41.5M [00:02<00:03, 8.40MB/s]     42%|####2     | 17.5M/41.5M [00:03<00:02, 8.81MB/s]     46%|####5     | 18.9M/41.5M [00:03<00:02, 10.1MB/s]     48%|####7     | 19.9M/41.5M [00:03<00:02, 8.99MB/s]     50%|#####     | 20.8M/41.5M [00:03<00:02, 8.40MB/s]     53%|#####2    | 21.9M/41.5M [00:03<00:02, 8.71MB/s]     56%|#####6    | 23.2M/41.5M [00:03<00:01, 10.1MB/s]     58%|#####8    | 24.2M/41.5M [00:07<00:19, 929kB/s]      60%|######    | 24.9M/41.5M [00:10<00:29, 584kB/s]     61%|######1   | 25.4M/41.5M [00:11<00:27, 608kB/s]     62%|######2   | 25.8M/41.5M [00:13<00:36, 445kB/s]     63%|######2   | 26.1M/41.5M [00:17<01:01, 262kB/s]     63%|######3   | 26.3M/41.5M [00:18<01:02, 254kB/s]     64%|######3   | 26.4M/41.5M [00:19<01:15, 209kB/s]     64%|######3   | 26.5M/41.5M [00:20<01:18, 199kB/s]     64%|######4   | 26.6M/41.5M [00:20<01:14, 209kB/s]     64%|######4   | 26.7M/41.5M [00:21<01:24, 184kB/s]     64%|######4   | 26.8M/41.5M [00:22<01:36, 160kB/s]     65%|######5   | 27.0M/41.5M [00:22<01:01, 248kB/s]     65%|######5   | 27.1M/41.5M [00:23<01:29, 170kB/s]     66%|######5   | 27.2M/41.5M [00:24<01:38, 152kB/s]     66%|######5   | 27.2M/41.5M [00:25<01:31, 164kB/s]     66%|######5   | 27.3M/41.5M [00:26<02:00, 124kB/s]     66%|######6   | 27.4M/41.5M [00:26<01:43, 143kB/s]     66%|######6   | 27.5M/41.5M [00:27<01:50, 133kB/s]     66%|######6   | 27.5M/41.5M [00:28<02:39, 91.8kB/s]     66%|######6   | 27.5M/41.5M [00:28<02:24, 101kB/s]      66%|######6   | 27.6M/41.5M [00:29<02:55, 83.5kB/s]     67%|######6   | 27.6M/41.5M [00:29<02:53, 84.1kB/s]     67%|######6   | 27.6M/41.5M [00:30<04:40, 51.9kB/s]     67%|######6   | 27.7M/41.5M [00:31<03:08, 76.8kB/s]     67%|######6   | 27.7M/41.5M [00:31<03:10, 76.0kB/s]     67%|######6   | 27.7M/41.5M [00:31<03:10, 75.8kB/s]     67%|######6   | 27.8M/41.5M [00:32<03:46, 63.7kB/s]     67%|######6   | 27.8M/41.5M [00:32<03:42, 64.8kB/s]     67%|######6   | 27.8M/41.5M [00:33<03:56, 60.7kB/s]     67%|######7   | 27.8M/41.5M [00:33<03:19, 71.8kB/s]     67%|######7   | 27.8M/41.5M [00:33<03:38, 65.6kB/s]     67%|######7   | 27.8M/41.5M [00:33<03:25, 69.6kB/s]     67%|######7   | 27.9M/41.5M [00:33<03:35, 66.5kB/s]     67%|######7   | 27.9M/41.5M [00:34<03:49, 62.3kB/s]     67%|######7   | 27.9M/41.5M [00:34<03:23, 70.2kB/s]     67%|######7   | 27.9M/41.5M [00:34<03:06, 76.6kB/s]     67%|######7   | 27.9M/41.5M [00:34<02:54, 81.6kB/s]     67%|######7   | 27.9M/41.5M [00:34<02:51, 83.1kB/s]     67%|######7   | 27.9M/41.5M [00:35<02:44, 86.5kB/s]     67%|######7   | 28.0M/41.5M [00:35<02:39, 88.9kB/s]     67%|######7   | 28.0M/41.5M [00:35<02:31, 93.3kB/s]     67%|######7   | 28.0M/41.5M [00:35<02:30, 93.8kB/s]     67%|######7   | 28.0M/41.5M [00:35<02:11, 108kB/s]      68%|######7   | 28.0M/41.5M [00:35<02:16, 104kB/s]     68%|######7   | 28.0M/41.5M [00:35<02:08, 109kB/s]     68%|######7   | 28.0M/41.5M [00:36<02:03, 114kB/s]     68%|######7   | 28.1M/41.5M [00:36<02:06, 111kB/s]     68%|######7   | 28.1M/41.5M [00:36<01:54, 123kB/s]     68%|######7   | 28.1M/41.5M [00:36<01:53, 124kB/s]     68%|######7   | 28.1M/41.5M [00:36<01:52, 124kB/s]     68%|######7   | 28.1M/41.5M [00:36<01:58, 118kB/s]     68%|######7   | 28.1M/41.5M [00:36<01:48, 129kB/s]     68%|######7   | 28.2M/41.5M [00:36<01:49, 128kB/s]     68%|######7   | 28.2M/41.5M [00:37<01:45, 132kB/s]     68%|######7   | 28.2M/41.5M [00:37<01:39, 140kB/s]     68%|######7   | 28.2M/41.5M [00:37<01:38, 141kB/s]     68%|######8   | 28.2M/41.5M [00:37<01:38, 142kB/s]     68%|######8   | 28.3M/41.5M [00:37<01:29, 155kB/s]     68%|######8   | 28.3M/41.5M [00:37<01:31, 152kB/s]     68%|######8   | 28.3M/41.5M [00:37<01:29, 155kB/s]     68%|######8   | 28.3M/41.5M [00:38<01:22, 168kB/s]     68%|######8   | 28.3M/41.5M [00:38<01:19, 174kB/s]     68%|######8   | 28.4M/41.5M [00:38<01:14, 185kB/s]     68%|######8   | 28.4M/41.5M [00:38<01:08, 200kB/s]     69%|######8   | 28.4M/41.5M [00:38<01:03, 216kB/s]     69%|######8   | 28.4M/41.5M [00:38<01:03, 216kB/s]     69%|######8   | 28.5M/41.5M [00:38<01:01, 221kB/s]     69%|######8   | 28.5M/41.5M [00:38<00:50, 269kB/s]     69%|######8   | 28.6M/41.5M [00:39<00:47, 283kB/s]     69%|######8   | 28.6M/41.5M [00:39<00:47, 284kB/s]     69%|######9   | 28.6M/41.5M [00:39<00:44, 304kB/s]     69%|######9   | 28.7M/41.5M [00:39<00:38, 345kB/s]     69%|######9   | 28.7M/41.5M [00:39<00:37, 355kB/s]     69%|######9   | 28.8M/41.5M [00:39<00:35, 376kB/s]     70%|######9   | 28.9M/41.5M [00:39<00:32, 404kB/s]     70%|######9   | 28.9M/41.5M [00:39<00:27, 471kB/s]     70%|######9   | 29.0M/41.5M [00:40<00:28, 462kB/s]     70%|#######   | 29.0M/41.5M [00:40<00:26, 492kB/s]     70%|#######   | 29.1M/41.5M [00:40<00:24, 539kB/s]     70%|#######   | 29.2M/41.5M [00:40<00:21, 604kB/s]     71%|#######   | 29.3M/41.5M [00:40<00:21, 592kB/s]     71%|#######   | 29.4M/41.5M [00:40<00:19, 646kB/s]     71%|#######1  | 29.5M/41.5M [00:40<00:18, 680kB/s]     71%|#######1  | 29.6M/41.5M [00:40<00:16, 759kB/s]     72%|#######1  | 29.7M/41.5M [00:41<00:15, 777kB/s]     72%|#######1  | 29.8M/41.5M [00:41<00:14, 819kB/s]     72%|#######2  | 29.9M/41.5M [00:41<00:14, 853kB/s]     72%|#######2  | 30.0M/41.5M [00:41<00:14, 848kB/s]     73%|#######2  | 30.1M/41.5M [00:41<00:13, 860kB/s]     73%|#######2  | 30.2M/41.5M [00:41<00:13, 872kB/s]     73%|#######3  | 30.3M/41.5M [00:41<00:13, 878kB/s]     73%|#######3  | 30.4M/41.5M [00:42<00:22, 509kB/s]     73%|#######3  | 30.5M/41.5M [00:42<00:23, 488kB/s]     74%|#######3  | 30.5M/41.5M [00:42<00:21, 540kB/s]     74%|#######3  | 30.6M/41.5M [00:42<00:20, 550kB/s]     74%|#######3  | 30.7M/41.5M [00:42<00:25, 443kB/s]     74%|#######4  | 30.7M/41.5M [00:43<00:30, 372kB/s]     74%|#######4  | 30.8M/41.5M [00:44<01:47, 105kB/s]     74%|#######4  | 30.9M/41.5M [00:45<01:11, 156kB/s]     75%|#######4  | 31.0M/41.5M [00:46<01:30, 122kB/s]     75%|#######4  | 31.0M/41.5M [00:46<01:12, 152kB/s]     75%|#######4  | 31.1M/41.5M [00:46<01:01, 177kB/s]     75%|#######5  | 31.1M/41.5M [00:46<01:03, 170kB/s]     75%|#######5  | 31.2M/41.5M [00:46<01:03, 171kB/s]     75%|#######5  | 31.2M/41.5M [00:47<01:55, 93.3kB/s]     75%|#######5  | 31.2M/41.5M [00:48<02:00, 89.5kB/s]     75%|#######5  | 31.3M/41.5M [00:49<02:49, 63.2kB/s]     76%|#######5  | 31.4M/41.5M [00:49<01:32, 114kB/s]      76%|#######5  | 31.4M/41.5M [00:50<02:08, 82.1kB/s]     76%|#######5  | 31.4M/41.5M [00:50<01:56, 90.4kB/s]     76%|#######5  | 31.5M/41.5M [00:51<02:14, 78.1kB/s]     76%|#######5  | 31.5M/41.5M [00:51<02:16, 76.8kB/s]     76%|#######5  | 31.5M/41.5M [00:51<02:18, 75.6kB/s]     76%|#######5  | 31.5M/41.5M [00:51<02:20, 74.4kB/s]     76%|#######5  | 31.5M/41.5M [00:52<03:23, 51.4kB/s]     76%|#######6  | 31.5M/41.5M [00:52<02:50, 61.3kB/s]     76%|#######6  | 31.6M/41.5M [00:53<03:06, 55.8kB/s]     76%|#######6  | 31.6M/41.5M [00:53<02:56, 59.0kB/s]     76%|#######6  | 31.6M/41.5M [00:53<04:04, 42.5kB/s]     76%|#######6  | 31.6M/41.5M [00:53<04:14, 40.9kB/s]     76%|#######6  | 31.6M/41.5M [00:54<04:14, 40.8kB/s]     76%|#######6  | 31.6M/41.5M [00:55<07:18, 23.6kB/s]     76%|#######6  | 31.6M/41.5M [00:56<06:14, 27.6kB/s]     76%|#######6  | 31.6M/41.5M [00:56<05:06, 33.7kB/s]     76%|#######6  | 31.7M/41.5M [00:56<05:04, 33.9kB/s]     76%|#######6  | 31.7M/41.5M [00:56<05:01, 34.1kB/s]     76%|#######6  | 31.7M/41.5M [00:56<05:00, 34.3kB/s]     76%|#######6  | 31.7M/41.5M [00:57<06:09, 27.8kB/s]     76%|#######6  | 31.7M/41.5M [00:57<04:38, 36.9kB/s]     76%|#######6  | 31.7M/41.5M [00:57<04:41, 36.4kB/s]     76%|#######6  | 31.7M/41.5M [00:58<05:56, 28.8kB/s]     76%|#######6  | 31.7M/41.5M [00:58<05:39, 30.2kB/s]     76%|#######6  | 31.7M/41.5M [00:59<06:34, 26.0kB/s]     77%|#######6  | 31.7M/41.5M [00:59<04:55, 34.6kB/s]     77%|#######6  | 31.8M/41.5M [00:59<04:54, 34.7kB/s]     77%|#######6  | 31.8M/41.5M [00:59<04:53, 34.7kB/s]     77%|#######6  | 31.8M/41.5M [01:00<04:53, 34.8kB/s]     77%|#######6  | 31.8M/41.5M [01:00<07:32, 22.5kB/s]     77%|#######6  | 31.8M/41.5M [01:00<05:17, 32.1kB/s]     77%|#######6  | 31.8M/41.5M [01:01<07:29, 22.6kB/s]     77%|#######6  | 31.8M/41.5M [01:01<05:25, 31.1kB/s]     77%|#######6  | 31.8M/41.5M [01:02<05:17, 31.9kB/s]     77%|#######6  | 31.8M/41.5M [01:02<05:10, 32.6kB/s]     77%|#######6  | 31.8M/41.5M [01:02<05:05, 33.2kB/s]     77%|#######6  | 31.9M/41.5M [01:02<03:56, 42.7kB/s]     77%|#######6  | 31.9M/41.5M [01:03<04:08, 40.6kB/s]     77%|#######6  | 31.9M/41.5M [01:03<03:26, 48.7kB/s]     77%|#######6  | 31.9M/41.5M [01:03<04:48, 34.9kB/s]     77%|#######6  | 31.9M/41.5M [01:04<04:48, 34.9kB/s]     77%|#######6  | 31.9M/41.5M [01:04<03:49, 43.8kB/s]     77%|#######6  | 31.9M/41.5M [01:04<04:02, 41.5kB/s]     77%|#######6  | 31.9M/41.5M [01:04<04:12, 39.7kB/s]     77%|#######6  | 31.9M/41.5M [01:05<05:35, 29.9kB/s]     77%|#######6  | 31.9M/41.5M [01:05<04:13, 39.5kB/s]     77%|#######7  | 32.0M/41.5M [01:05<04:21, 38.3kB/s]     77%|#######7  | 32.0M/41.5M [01:05<03:33, 46.7kB/s]     77%|#######7  | 32.0M/41.5M [01:06<03:49, 43.5kB/s]     77%|#######7  | 32.0M/41.5M [01:06<05:11, 32.0kB/s]     77%|#######7  | 32.0M/41.5M [01:06<03:21, 49.4kB/s]     77%|#######7  | 32.0M/41.5M [01:07<03:37, 45.7kB/s]     77%|#######7  | 32.0M/41.5M [01:07<03:51, 42.9kB/s]     77%|#######7  | 32.0M/41.5M [01:07<04:03, 40.7kB/s]     77%|#######7  | 32.0M/41.5M [01:07<03:22, 48.9kB/s]     77%|#######7  | 32.1M/41.5M [01:07<03:40, 44.9kB/s]     77%|#######7  | 32.1M/41.5M [01:08<03:09, 52.2kB/s]     77%|#######7  | 32.1M/41.5M [01:08<04:30, 36.4kB/s]     77%|#######7  | 32.1M/41.5M [01:08<04:33, 36.1kB/s]     77%|#######7  | 32.1M/41.5M [01:09<03:39, 44.8kB/s]     77%|#######7  | 32.1M/41.5M [01:09<03:53, 42.2kB/s]     77%|#######7  | 32.1M/41.5M [01:09<03:16, 49.9kB/s]     77%|#######7  | 32.1M/41.5M [01:10<03:46, 43.3kB/s]     78%|#######7  | 32.2M/41.5M [01:10<02:48, 58.1kB/s]     78%|#######7  | 32.2M/41.5M [01:10<03:07, 52.2kB/s]     78%|#######7  | 32.2M/41.5M [01:10<03:25, 47.6kB/s]     78%|#######7  | 32.2M/41.5M [01:11<03:01, 53.7kB/s]     78%|#######7  | 32.2M/41.5M [01:11<02:36, 62.3kB/s]     78%|#######7  | 32.2M/41.5M [01:11<02:45, 58.7kB/s]     78%|#######7  | 32.2M/41.5M [01:11<02:22, 68.1kB/s]     78%|#######7  | 32.2M/41.5M [01:11<02:08, 75.3kB/s]     78%|#######7  | 32.3M/41.5M [01:11<01:59, 80.8kB/s]     78%|#######7  | 32.3M/41.5M [01:12<01:53, 84.8kB/s]     78%|#######7  | 32.3M/41.5M [01:12<01:49, 87.8kB/s]     78%|#######7  | 32.3M/41.5M [01:12<01:47, 89.9kB/s]     78%|#######7  | 32.3M/41.5M [01:12<01:45, 91.5kB/s]     78%|#######7  | 32.3M/41.5M [01:12<01:43, 92.5kB/s]     78%|#######7  | 32.4M/41.5M [01:12<01:42, 93.3kB/s]     78%|#######8  | 32.4M/41.5M [01:13<01:41, 93.9kB/s]     78%|#######8  | 32.4M/41.5M [01:13<01:27, 108kB/s]      78%|#######8  | 32.4M/41.5M [01:13<01:31, 104kB/s]     78%|#######8  | 32.4M/41.5M [01:13<01:21, 116kB/s]     78%|#######8  | 32.5M/41.5M [01:13<01:26, 110kB/s]     78%|#######8  | 32.5M/41.5M [01:13<01:19, 120kB/s]     78%|#######8  | 32.5M/41.5M [01:14<01:14, 127kB/s]     78%|#######8  | 32.5M/41.5M [01:14<01:11, 131kB/s]     78%|#######8  | 32.5M/41.5M [01:14<01:09, 135kB/s]     79%|#######8  | 32.6M/41.5M [01:14<01:01, 151kB/s]     79%|#######8  | 32.6M/41.5M [01:14<01:02, 149kB/s]     79%|#######8  | 32.6M/41.5M [01:15<01:03, 147kB/s]     79%|#######8  | 32.7M/41.5M [01:15<00:57, 160kB/s]     79%|#######8  | 32.7M/41.5M [01:15<00:59, 155kB/s]     79%|#######8  | 32.7M/41.5M [01:15<00:55, 165kB/s]     79%|#######8  | 32.8M/41.5M [01:15<00:48, 187kB/s]     79%|#######9  | 32.8M/41.5M [01:15<00:45, 202kB/s]     79%|#######9  | 32.8M/41.5M [01:16<00:42, 213kB/s]     79%|#######9  | 32.9M/41.5M [01:16<00:38, 235kB/s]     79%|#######9  | 32.9M/41.5M [01:16<00:33, 270kB/s]     79%|#######9  | 33.0M/41.5M [01:16<00:31, 283kB/s]     80%|#######9  | 33.0M/41.5M [01:16<00:27, 325kB/s]     80%|#######9  | 33.1M/41.5M [01:16<00:27, 323kB/s]     80%|#######9  | 33.1M/41.5M [01:16<00:26, 327kB/s]     80%|#######9  | 33.2M/41.5M [01:17<00:22, 392kB/s]     80%|########  | 33.2M/41.5M [01:17<00:21, 409kB/s]     80%|########  | 33.3M/41.5M [01:17<00:18, 471kB/s]     80%|########  | 33.4M/41.5M [01:17<00:19, 445kB/s]     81%|########  | 33.4M/41.5M [01:17<00:16, 500kB/s]     81%|########  | 33.5M/41.5M [01:17<00:15, 542kB/s]     81%|########1 | 33.6M/41.5M [01:17<00:13, 604kB/s]     81%|########1 | 33.7M/41.5M [01:17<00:14, 576kB/s]     81%|########1 | 33.8M/41.5M [01:18<00:12, 650kB/s]     82%|########1 | 33.9M/41.5M [01:18<00:11, 686kB/s]     82%|########1 | 34.0M/41.5M [01:18<00:09, 799kB/s]     82%|########2 | 34.1M/41.5M [01:18<00:10, 750kB/s]     82%|########2 | 34.2M/41.5M [01:18<00:09, 811kB/s]     83%|########2 | 34.3M/41.5M [01:18<00:08, 857kB/s]     83%|########3 | 34.5M/41.5M [01:18<00:07, 994kB/s]     83%|########3 | 34.6M/41.5M [01:18<00:07, 943kB/s]     84%|########3 | 34.7M/41.5M [01:19<00:06, 1.04MB/s]     84%|########4 | 34.9M/41.5M [01:19<00:06, 1.06MB/s]     85%|########4 | 35.1M/41.5M [01:19<00:05, 1.23MB/s]     85%|########4 | 35.2M/41.5M [01:19<00:05, 1.15MB/s]     85%|########5 | 35.4M/41.5M [01:19<00:05, 1.28MB/s]     86%|########5 | 35.6M/41.5M [01:19<00:04, 1.32MB/s]     86%|########6 | 35.8M/41.5M [01:19<00:03, 1.51MB/s]     87%|########6 | 35.9M/41.5M [01:20<00:04, 1.42MB/s]     87%|########7 | 36.2M/41.5M [01:20<00:03, 1.56MB/s]     88%|########7 | 36.4M/41.5M [01:20<00:03, 1.60MB/s]     88%|########8 | 36.7M/41.5M [01:20<00:02, 1.82MB/s]     89%|########8 | 36.9M/41.5M [01:20<00:02, 1.70MB/s]     89%|########9 | 37.1M/41.5M [01:20<00:02, 1.88MB/s]     90%|######### | 37.4M/41.5M [01:20<00:02, 1.93MB/s]     91%|######### | 37.7M/41.5M [01:20<00:01, 2.16MB/s]     91%|#########1| 37.9M/41.5M [01:21<00:01, 2.02MB/s]     92%|#########2| 38.3M/41.5M [01:21<00:01, 2.24MB/s]     93%|#########2| 38.6M/41.5M [01:21<00:01, 2.28MB/s]     94%|#########3| 39.0M/41.5M [01:21<00:01, 2.56MB/s]     94%|#########4| 39.2M/41.5M [01:21<00:01, 2.39MB/s]     95%|#########5| 39.6M/41.5M [01:21<00:00, 2.65MB/s]     96%|#########6| 39.9M/41.5M [01:21<00:00, 2.69MB/s]     97%|#########7| 40.4M/41.5M [01:21<00:00, 3.03MB/s]     98%|#########8| 40.7M/41.5M [01:22<00:00, 2.82MB/s]     99%|#########9| 41.2M/41.5M [01:22<00:00, 3.10MB/s]    100%|##########| 41.5M/41.5M [01:22<00:00, 529kB/s] 



Load a test image
-----------------
Classic cat example!


.. code-block:: default

    from PIL import Image

    img_url = "https://github.com/dmlc/mxnet.js/blob/main/data/cat.png?raw=true"
    img_path = download_testdata(img_url, "cat.png", module="data")
    img = Image.open(img_path).resize((224, 224))

    # Preprocess the image and convert to tensor
    from flowvision import transforms

    my_preprocess = transforms.Compose(
        [
            transforms.Resize(256),
            transforms.CenterCrop(224),
            transforms.ToTensor(),
            transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
        ]
    )
    img = my_preprocess(img)
    img = np.expand_dims(img.numpy(), 0)







Import the graph to Relay
-------------------------
Convert OneFlow graph to Relay graph. The input name can be arbitrary.


.. code-block:: default

    class Graph(flow.nn.Graph):
        def __init__(self, module):
            super().__init__()
            self.m = module

        def build(self, x):
            out = self.m(x)
            return out


    graph = Graph(model)
    _ = graph._compile(flow.randn(1, 3, 224, 224))

    mod, params = relay.frontend.from_oneflow(graph, model_dir)







Relay Build
-----------
Compile the graph to llvm target with given input specification.


.. code-block:: default

    target = tvm.target.Target("llvm", host="llvm")
    dev = tvm.cpu(0)
    with tvm.transform.PassContext(opt_level=3):
        lib = relay.build(mod, target=target, params=params)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /workspace/python/tvm/target/target.py:317: UserWarning: target_host parameter is going to be deprecated. Please pass in tvm.target.Target(target, host=target_host) instead.
      "target_host parameter is going to be deprecated. "



Execute the portable graph on TVM
---------------------------------
Now we can try deploying the compiled model on target.


.. code-block:: default

    target = "cuda"
    with tvm.transform.PassContext(opt_level=10):
        intrp = relay.build_module.create_executor("graph", mod, tvm.cuda(0), target)

    print(type(img))
    print(img.shape)
    tvm_output = intrp.evaluate()(tvm.nd.array(img.astype("float32")), **params)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <class 'numpy.ndarray'>
    (1, 3, 224, 224)



Look up synset name
-------------------
Look up prediction top 1 index in 1000 class synset.


.. code-block:: default

    synset_url = "".join(
        [
            "https://raw.githubusercontent.com/Cadene/",
            "pretrained-models.pytorch/master/data/",
            "imagenet_synsets.txt",
        ]
    )
    synset_name = "imagenet_synsets.txt"
    synset_path = download_testdata(synset_url, synset_name, module="data")
    with open(synset_path) as f:
        synsets = f.readlines()

    synsets = [x.strip() for x in synsets]
    splits = [line.split(" ") for line in synsets]
    key_to_classname = {spl[0]: " ".join(spl[1:]) for spl in splits}

    class_url = "".join(
        [
            "https://raw.githubusercontent.com/Cadene/",
            "pretrained-models.pytorch/master/data/",
            "imagenet_classes.txt",
        ]
    )
    class_name = "imagenet_classes.txt"
    class_path = download_testdata(class_url, class_name, module="data")
    with open(class_path) as f:
        class_id_to_key = f.readlines()

    class_id_to_key = [x.strip() for x in class_id_to_key]

    # Get top-1 result for TVM
    top1_tvm = np.argmax(tvm_output.numpy()[0])
    tvm_class_key = class_id_to_key[top1_tvm]

    # Convert input to OneFlow variable and get OneFlow result for comparison
    with flow.no_grad():
        torch_img = flow.from_numpy(img)
        output = model(torch_img)

        # Get top-1 result for OneFlow
        top_oneflow = np.argmax(output.numpy())
        oneflow_class_key = class_id_to_key[top_oneflow]

    print("Relay top-1 id: {}, class name: {}".format(top1_tvm, key_to_classname[tvm_class_key]))
    print(
        "OneFlow top-1 id: {}, class name: {}".format(top_oneflow, key_to_classname[oneflow_class_key])
    )




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Relay top-1 id: 281, class name: tabby, tabby cat
    OneFlow top-1 id: 281, class name: tabby, tabby cat




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  45.910 seconds)


.. _sphx_glr_download_how_to_compile_models_from_oneflow.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: from_oneflow.py <from_oneflow.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: from_oneflow.ipynb <from_oneflow.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
