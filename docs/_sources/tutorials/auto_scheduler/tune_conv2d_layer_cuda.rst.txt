.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a convolution layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_


Different from the existing :ref:`autotvm <tutorials-autotvm-sec>` which relies on 
manual templates to define the search space, the auto-scheduler does not require any templates.
The auto-scheduler is template-free, so users only need to write the computation declaration without
any schedule commands or templates.
The auto-scheduler can automatically generate a large
search space and find a good schedule in the space.

We use a convolution layer as an example in this tutorial.


.. code-block:: default


    import numpy as np
    import tvm
    from tvm import te, testing, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # the last layer in resnet
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.create_task(conv2d_layer, (N, H, W, CO, CI, KH, KW, strides, padding), target)

    # Inspect the computational graph
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    compute(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (compute[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search and auto-tuning.

* `measure_ctx` launches a different process for measurement. This
  provides an isolation. It can protect the master process from GPU crashes
  happended during measurement and avoid other runtime conflicts.
* `min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value > 300 ms.
* `num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use `RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.auto_schedule.TuningOptions`:,
  :any:`auto_scheduler.measure.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile("conv2d.json")],
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, it will return the best schedule it found.


.. code-block:: default


    sch, args = auto_scheduler.auto_schedule(task, tuning_options=tune_option)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none





We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"global_symbol": "main", "tir.noalias": True}
      buffers = {bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      attr [compute_3: Pointer(float32)] "storage_scope" = "local";
      allocate(compute_3, float32, [8]);
      attr [pad_temp.shared: Pointer(float32)] "storage_scope" = "shared";
      allocate(pad_temp.shared, float32, [1568]);
      attr [kernel.shared: Pointer(float32)] "storage_scope" = "shared";
      allocate(kernel.shared, float32, [256]);
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
        compute_3[0] = 0f32
        compute_3[2] = 0f32
        compute_3[4] = 0f32
        compute_3[6] = 0f32
        compute_3[1] = 0f32
        compute_3[3] = 0f32
        compute_3[5] = 0f32
        compute_3[7] = 0f32
        for (rc.outer.outer: int32, 0, 16) {
          for (ry.outer.outer: int32, 0, 3) {
            attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[(threadIdx.x_1*2)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) - 8)], 0f32, dtype=float32)
              pad_temp.shared[((threadIdx.x_1*2) + 1)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) - 8)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 98)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 90)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 98)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 90)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 196)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 188)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 196)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 188)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 294)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 286)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 294)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 286)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 392)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 384)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 392)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 384)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 490)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 482)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 490)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 482)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 588)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 580)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 588)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 580)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 686)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 678)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 686)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 678)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 784)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 776)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 784)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 776)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 882)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 874)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 882)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 874)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 980)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 972)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 980)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 972)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1078)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1070)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1078)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1070)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1176)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1168)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1176)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1168)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1274)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1266)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1274)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1266)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1372)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1364)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1372)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1364)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1470)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod((threadIdx.x_1*2), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1462)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1470)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (1 <= floormod(((threadIdx.x_1*2) + 1), 7))), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1462)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[(threadIdx.x_2*12)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv((threadIdx.x_2*12), 32)*4608)) + (rc.outer.outer*288)) + (floormod((threadIdx.x_2*12), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 1)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 1), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 1), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 2)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 2), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 2), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 3)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 3), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 3), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 4)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 4), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 4), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 5)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 5), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 5), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 6)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 6), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 6), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 7)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 7), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 7), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 8)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 8), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 8), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 9)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 9), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 9), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 10)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 10), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 10), 32)*9)) + (ry.outer.outer*3))]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 11)] = (float32*)kernel_2[(((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 11), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 11), 32)*9)) + (ry.outer.outer*3))]
              }
            }
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[0]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[64]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[128]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[192]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[1]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[65]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[129]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[193]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[2]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[66]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[130]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[194]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[3]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[67]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[131]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[195]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[4]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[68]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[132]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[196]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[5]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[69]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[133]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[197]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[6]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[70]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[134]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[198]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[7]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[71]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[135]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[199]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[8]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[72]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[136]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[200]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[9]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[73]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[137]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[201]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[10]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[74]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[138]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[202]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[11]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[75]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[139]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[203]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[12]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[76]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[140]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[204]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[13]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[77]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[141]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[205]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[14]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[78]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[142]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[206]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[15]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[79]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[143]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[207]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[32]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[96]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[160]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[224]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[33]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[97]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[161]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[225]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[34]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[98]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[162]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[226]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[35]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[99]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[163]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[227]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[36]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[100]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[164]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[228]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[37]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[101]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[165]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[229]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[38]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[102]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[166]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[230]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[39]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[103]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[167]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[231]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[40]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[104]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[168]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[232]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[41]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[105]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[169]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[233]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[42]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[106]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[170]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[234]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[43]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[107]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[171]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[235]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[44]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[108]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[172]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[236]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[45]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[109]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[173]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[237]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[46]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[110]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[174]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[238]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[47]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[111]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[175]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[239]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[16]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[80]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[144]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[208]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[17]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[81]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[145]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[209]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[18]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[82]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[146]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[210]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[19]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[83]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[147]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[211]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[20]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[84]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[148]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[212]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[21]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[85]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[149]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[213]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[22]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[86]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[150]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[214]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[23]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[87]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[151]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[215]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[24]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[88]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[152]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[216]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[25]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[89]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[153]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[217]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[26]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[90]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[154]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[218]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[27]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[91]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[155]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[219]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[28]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[92]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[156]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[220]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[29]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[93]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[157]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[221]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[30]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[94]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[158]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[222]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[31]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[95]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[159]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[223]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[48]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[112]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[176]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[240]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[49]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[113]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[177]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[241]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[50]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[114]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[178]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[242]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[51]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[115]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[179]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[243]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[52]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[116]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[180]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[244]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[53]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[117]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[181]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[245]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[54]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[118]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[182]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[246]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[55]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[119]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[183]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[247]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[56]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[120]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[184]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[248]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[57]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[121]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[185]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[249]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[58]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[122]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[186]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[250]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[59]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[123]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[187]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[251]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[60]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[124]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[188]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[252]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[61]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[125]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[189]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[253]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[62]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[126]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[190]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[254]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[63]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[127]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[191]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[255]))
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[(threadIdx.x_1*2)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) - 7)], 0f32, dtype=float32)
              pad_temp.shared[((threadIdx.x_1*2) + 1)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) - 7)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 98)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 91)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 98)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 91)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 196)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 189)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 196)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 189)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 294)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 287)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 294)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 287)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 392)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 385)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 392)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 385)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 490)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 483)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 490)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 483)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 588)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 581)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 588)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 581)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 686)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 679)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 686)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 679)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 784)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 777)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 784)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 777)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 882)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 875)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 882)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 875)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 980)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 973)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 980)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 973)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1078)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1071)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1078)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1071)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1176)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1169)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1176)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1169)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1274)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1267)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1274)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1267)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1372)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1365)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1372)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1365)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1470)] = @tir.if_then_else(((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1463)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1470)] = @tir.if_then_else(((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1463)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[(threadIdx.x_2*12)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2*12), 32)*4608)) + (rc.outer.outer*288)) + (floormod((threadIdx.x_2*12), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 1)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 1), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 1), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 2)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 2), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 2), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 3)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 3), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 3), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 4)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 4), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 4), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 5)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 5), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 5), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 6)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 6), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 6), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 7)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 7), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 7), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 8)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 8), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 8), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 9)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 9), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 9), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 10)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 10), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 10), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 11)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 11), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 11), 32)*9)) + (ry.outer.outer*3)) + 1)]
              }
            }
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[0]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[64]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[128]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[192]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[1]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[65]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[129]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[193]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[2]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[66]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[130]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[194]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[3]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[67]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[131]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[195]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[4]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[68]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[132]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[196]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[5]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[69]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[133]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[197]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[6]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[70]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[134]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[198]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[7]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[71]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[135]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[199]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[8]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[72]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[136]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[200]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[9]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[73]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[137]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[201]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[10]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[74]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[138]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[202]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[11]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[75]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[139]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[203]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[12]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[76]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[140]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[204]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[13]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[77]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[141]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[205]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[14]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[78]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[142]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[206]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[15]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[79]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[143]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[207]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[32]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[96]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[160]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[224]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[33]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[97]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[161]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[225]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[34]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[98]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[162]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[226]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[35]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[99]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[163]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[227]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[36]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[100]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[164]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[228]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[37]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[101]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[165]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[229]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[38]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[102]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[166]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[230]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[39]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[103]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[167]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[231]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[40]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[104]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[168]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[232]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[41]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[105]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[169]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[233]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[42]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[106]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[170]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[234]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[43]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[107]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[171]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[235]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[44]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[108]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[172]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[236]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[45]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[109]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[173]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[237]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[46]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[110]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[174]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[238]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[47]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[111]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[175]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[239]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[16]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[80]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[144]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[208]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[17]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[81]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[145]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[209]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[18]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[82]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[146]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[210]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[19]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[83]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[147]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[211]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[20]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[84]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[148]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[212]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[21]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[85]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[149]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[213]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[22]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[86]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[150]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[214]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[23]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[87]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[151]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[215]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[24]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[88]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[152]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[216]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[25]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[89]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[153]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[217]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[26]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[90]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[154]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[218]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[27]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[91]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[155]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[219]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[28]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[92]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[156]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[220]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[29]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[93]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[157]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[221]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[30]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[94]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[158]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[222]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[31]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[95]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[159]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[223]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[48]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[112]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[176]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[240]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[49]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[113]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[177]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[241]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[50]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[114]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[178]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[242]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[51]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[115]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[179]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[243]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[52]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[116]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[180]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[244]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[53]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[117]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[181]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[245]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[54]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[118]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[182]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[246]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[55]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[119]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[183]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[247]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[56]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[120]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[184]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[248]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[57]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[121]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[185]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[249]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[58]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[122]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[186]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[250]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[59]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[123]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[187]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[251]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[60]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[124]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[188]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[252]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[61]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[125]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[189]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[253]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[62]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[126]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[190]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[254]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[63]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[127]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[191]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[255]))
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[(threadIdx.x_1*2)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) - 6)], 0f32, dtype=float32)
              pad_temp.shared[((threadIdx.x_1*2) + 1)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) - 6)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 98)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 92)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 98)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 92)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 196)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 190)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 196)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 190)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 294)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 288)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 294)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 288)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 392)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 386)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 392)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 386)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 490)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 484)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 490)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 484)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 588)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 582)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 588)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 582)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 686)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 680)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 686)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 680)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 784)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 778)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 784)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 778)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 882)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 876)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 882)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 876)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 980)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 974)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 980)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 974)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1078)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1072)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1078)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1072)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1176)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1170)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1176)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1170)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1274)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1268)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1274)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1268)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1372)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1366)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1372)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1366)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              pad_temp.shared[((threadIdx.x_1*2) + 1470)] = @tir.if_then_else((((1 <= (floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer)) && ((floordiv(floormod((threadIdx.x_1*2), 49), 7) + ry.outer.outer) < 8)) && (floormod((threadIdx.x_1*2), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + (threadIdx.x_1*2)) + 1464)], 0f32, dtype=float32)
              pad_temp.shared[(((threadIdx.x_1*2) + 1) + 1470)] = @tir.if_then_else((((1 <= (floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer)) && ((floordiv(floormod(((threadIdx.x_1*2) + 1), 49), 7) + ry.outer.outer) < 8)) && (floormod(((threadIdx.x_1*2) + 1), 7) < 6)), (float32*)data_2[((((rc.outer.outer*1568) + (ry.outer.outer*7)) + ((threadIdx.x_1*2) + 1)) + 1464)], 0f32, dtype=float32)
            }
            attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[(threadIdx.x_2*12)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv((threadIdx.x_2*12), 32)*4608)) + (rc.outer.outer*288)) + (floormod((threadIdx.x_2*12), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 1)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 1), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 1), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 2)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 2), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 2), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 22), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 3)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 3), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 3), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 4)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 4), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 4), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 5)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 5), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 5), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 6)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 6), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 6), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 7)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 7), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 7), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 8)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 8), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 8), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 9)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 9), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 9), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 10)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 10), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 10), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
              if @tir.likely((threadIdx.x_2 < 21), dtype=bool) {
                kernel.shared[((threadIdx.x_2*12) + 11)] = (float32*)kernel_2[((((((blockIdx.x*36864) + (floordiv(((threadIdx.x_2*12) + 11), 32)*4608)) + (rc.outer.outer*288)) + (floormod(((threadIdx.x_2*12) + 11), 32)*9)) + (ry.outer.outer*3)) + 2)]
              }
            }
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[0]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[64]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[128]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[192]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[1]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[65]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[129]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[193]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[2]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[66]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[130]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[194]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[3]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[67]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[131]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[195]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[4]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[68]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[132]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[196]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[5]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[69]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[133]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[197]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[6]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[70]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[134]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[198]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[7]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[71]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[135]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[199]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[8]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[72]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[136]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[200]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[9]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[73]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[137]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[201]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[10]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[74]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[138]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[202]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[11]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[75]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[139]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[203]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[12]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[76]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[140]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[204]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[13]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[77]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[141]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[205]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[14]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[78]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[142]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[206]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[15]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[79]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[143]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[207]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[32]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[96]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[160]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[threadIdx.x]*(float32*)kernel.shared[224]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[33]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[97]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[161]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 49)]*(float32*)kernel.shared[225]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[34]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[98]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[162]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 98)]*(float32*)kernel.shared[226]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[35]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[99]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[163]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 147)]*(float32*)kernel.shared[227]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[36]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[100]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[164]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 196)]*(float32*)kernel.shared[228]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[37]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[101]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[165]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 245)]*(float32*)kernel.shared[229]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[38]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[102]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[166]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 294)]*(float32*)kernel.shared[230]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[39]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[103]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[167]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 343)]*(float32*)kernel.shared[231]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[40]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[104]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[168]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 392)]*(float32*)kernel.shared[232]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[41]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[105]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[169]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 441)]*(float32*)kernel.shared[233]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[42]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[106]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[170]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 490)]*(float32*)kernel.shared[234]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[43]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[107]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[171]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 539)]*(float32*)kernel.shared[235]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[44]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[108]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[172]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 588)]*(float32*)kernel.shared[236]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[45]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[109]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[173]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 637)]*(float32*)kernel.shared[237]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[46]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[110]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[174]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 686)]*(float32*)kernel.shared[238]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[47]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[111]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[175]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 735)]*(float32*)kernel.shared[239]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[16]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[80]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[144]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[208]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[17]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[81]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[145]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[209]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[18]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[82]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[146]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[210]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[19]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[83]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[147]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[211]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[20]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[84]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[148]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[212]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[21]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[85]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[149]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[213]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[22]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[86]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[150]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[214]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[23]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[87]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[151]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[215]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[24]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[88]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[152]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[216]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[25]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[89]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[153]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[217]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[26]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[90]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[154]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[218]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[27]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[91]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[155]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[219]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[28]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[92]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[156]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[220]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[29]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[93]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[157]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[221]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[30]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[94]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[158]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[222]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[31]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[95]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[159]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[223]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[48]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[112]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[176]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 784)]*(float32*)kernel.shared[240]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[49]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[113]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[177]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 833)]*(float32*)kernel.shared[241]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[50]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[114]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[178]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 882)]*(float32*)kernel.shared[242]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[51]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[115]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[179]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 931)]*(float32*)kernel.shared[243]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[52]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[116]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[180]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 980)]*(float32*)kernel.shared[244]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[53]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[117]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[181]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1029)]*(float32*)kernel.shared[245]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[54]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[118]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[182]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1078)]*(float32*)kernel.shared[246]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[55]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[119]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[183]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1127)]*(float32*)kernel.shared[247]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[56]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[120]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[184]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1176)]*(float32*)kernel.shared[248]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[57]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[121]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[185]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1225)]*(float32*)kernel.shared[249]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[58]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[122]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[186]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1274)]*(float32*)kernel.shared[250]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[59]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[123]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[187]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1323)]*(float32*)kernel.shared[251]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[60]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[124]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[188]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1372)]*(float32*)kernel.shared[252]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[61]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[125]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[189]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1421)]*(float32*)kernel.shared[253]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[62]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[126]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[190]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1470)]*(float32*)kernel.shared[254]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[63]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[127]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[191]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(threadIdx.x + 1519)]*(float32*)kernel.shared[255]))
          }
        }
        for (i1.inner: int32, 0, 2) {
          compute_2[(((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x)] = max(((float32*)compute_3[i1.inner] + (float32*)bias_2[((blockIdx.x*8) + i1.inner)]), 0f32)
          compute_2[((((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x) + 98)] = max(((float32*)compute_3[(i1.inner + 2)] + (float32*)bias_2[(((blockIdx.x*8) + i1.inner) + 2)]), 0f32)
          compute_2[((((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x) + 196)] = max(((float32*)compute_3[(i1.inner + 4)] + (float32*)bias_2[(((blockIdx.x*8) + i1.inner) + 4)]), 0f32)
          compute_2[((((blockIdx.x*392) + (i1.inner*49)) + threadIdx.x) + 294)] = max(((float32*)compute_3[(i1.inner + 6)] + (float32*)bias_2[(((blockIdx.x*8) + i1.inner) + 6)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    ctx = tvm.gpu()
    data_tvm = tvm.nd.array(data_np, ctx=ctx)
    weight_tvm = tvm.nd.array(weight_np, ctx=ctx)
    bias_tvm = tvm.nd.array(bias_np, ctx=ctx)
    out_tvm = tvm.nd.empty(out_np.shape, ctx=ctx)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    tvm.testing.assert_allclose(out_np, out_tvm.asnumpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, ctx, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.322 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measuremnt records are dumpped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API, and build the binary again.


.. code-block:: default


    # Load the measuremnt record for the best schedule
    inp, res = auto_scheduler.load_best("conv2d.json", task.workload_key)

    # Print equivalent python schedule API. This can be used for debugging and
    # learning the behavior of the auto-scheduler.
    print("Equivalent python schedule:")
    print(task.compute_dag.print_python_code_from_state(inp.state))

    # Rebuild the binary. This shows how you can apply the best schedule from a
    # log file without reruning the search again.
    sch, args = task.compute_dag.apply_steps_from_state(inp.state)
    func = tvm.build(sch, args, target)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    i0, i1, i2, i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    nn, ff, yy, xx, rc, ry, rx = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    ax0, ax1, ax2, ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    i0, i1, i2, i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    nn_o_i, nn_i = s[compute].split(nn, factor=1)
    nn_o_o_i, nn_o_i = s[compute].split(nn_o_i, factor=1)
    nn_o_o_o_i, nn_o_o_i = s[compute].split(nn_o_o_i, factor=1)
    nn_o_o_o_o, nn_o_o_o_i = s[compute].split(nn_o_o_o_i, factor=1)
    ff_o_i, ff_i = s[compute].split(ff, factor=1)
    ff_o_o_i, ff_o_i = s[compute].split(ff_o_i, factor=1)
    ff_o_o_o_i, ff_o_o_i = s[compute].split(ff_o_o_i, factor=32)
    ff_o_o_o_o, ff_o_o_o_i = s[compute].split(ff_o_o_o_i, factor=1)
    yy_o_i, yy_i = s[compute].split(yy, factor=7)
    yy_o_o_i, yy_o_i = s[compute].split(yy_o_i, factor=1)
    yy_o_o_o_i, yy_o_o_i = s[compute].split(yy_o_o_i, factor=1)
    yy_o_o_o_o, yy_o_o_o_i = s[compute].split(yy_o_o_o_i, factor=1)
    xx_o_i, xx_i = s[compute].split(xx, factor=1)
    xx_o_o_i, xx_o_i = s[compute].split(xx_o_i, factor=1)
    xx_o_o_o_i, xx_o_o_i = s[compute].split(xx_o_o_i, factor=1)
    xx_o_o_o_o, xx_o_o_o_i = s[compute].split(xx_o_o_o_i, factor=1)
    rc_o_i, rc_i = s[compute].split(rc, factor=16)
    rc_o_o, rc_o_i = s[compute].split(rc_o_i, factor=1)
    ry_o_i, ry_i = s[compute].split(ry, factor=3)
    ry_o_o, ry_o_i = s[compute].split(ry_o_i, factor=1)
    rx_o_i, rx_i = s[compute].split(rx, factor=3)
    rx_o_o, rx_o_i = s[compute].split(rx_o_i, factor=1)
    s[compute].reorder(nn_o_o_o_o, ff_o_o_o_o, yy_o_o_o_o, xx_o_o_o_o, nn_o_o_o_i, ff_o_o_o_i, yy_o_o_o_i, xx_o_o_o_i, nn_o_o_i, ff_o_o_i, yy_o_o_i, xx_o_o_i, rc_o_o, ry_o_o, rx_o_o, rc_o_i, ry_o_i, rx_o_i, nn_o_i, ff_o_i, yy_o_i, xx_o_i, rc_i, ry_i, rx_i, nn_i, ff_i, yy_i, xx_i)
    i0_o_i, i0_i = s[compute].split(i0, factor=1)
    i0_o_o_i, i0_o_i = s[compute].split(i0_o_i, factor=1)
    i0_o_o_o, i0_o_o_i = s[compute].split(i0_o_o_i, factor=1)
    i1_o_i, i1_i = s[compute].split(i1, factor=1)
    i1_o_o_i, i1_o_i = s[compute].split(i1_o_i, factor=32)
    i1_o_o_o, i1_o_o_i = s[compute].split(i1_o_o_i, factor=1)
    i2_o_i, i2_i = s[compute].split(i2, factor=7)
    i2_o_o_i, i2_o_i = s[compute].split(i2_o_i, factor=1)
    i2_o_o_o, i2_o_o_i = s[compute].split(i2_o_o_i, factor=1)
    i3_o_i, i3_i = s[compute].split(i3, factor=1)
    i3_o_o_i, i3_o_i = s[compute].split(i3_o_i, factor=1)
    i3_o_o_o, i3_o_o_i = s[compute].split(i3_o_o_i, factor=1)
    s[compute].reorder(i0_o_o_o, i1_o_o_o, i2_o_o_o, i3_o_o_o, i0_o_o_i, i1_o_o_i, i2_o_o_i, i3_o_o_i, i0_o_i, i1_o_i, i2_o_i, i3_o_i, i0_i, i1_i, i2_i, i3_i)
    s[compute].compute_at(s[compute], i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [compute])
    ax0, ax1, ax2, ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[compute], rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [compute])
    ax0, ax1, ax2, ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[compute], rx_o_o)
    s[pad_temp].compute_inline()
    i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(i0_o_o_o, i1_o_o_o, i2_o_o_o, i3_o_o_o)
    s[compute].bind(i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, tvm.thread_axis("blockIdx.x"))
    i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(i0_o_o_i, i1_o_o_i, i2_o_o_i, i3_o_o_i)
    s[compute].bind(i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, tvm.thread_axis("vthread"))
    i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(i0_o_i, i1_o_i, i2_o_i, i3_o_i)
    s[compute].bind(i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, tvm.thread_axis("threadIdx.x"))
    ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(ax0, ax1, ax2, ax3)
    ax0_ax1_fused_ax2_fused_ax3_fused_o, ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(ax0_ax1_fused_ax2_fused_ax3_fused_i)
    ax0_ax1_fused_ax2_fused_ax3_fused_o_o, ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[kernel_shared].bind(ax0_ax1_fused_ax2_fused_ax3_fused_o_i, tvm.thread_axis("threadIdx.x"))
    ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(ax0, ax1, ax2, ax3)
    ax0_ax1_fused_ax2_fused_ax3_fused_o, ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(ax0_ax1_fused_ax2_fused_ax3_fused_i)
    ax0_ax1_fused_ax2_fused_ax3_fused_o_o, ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=32)
    s[pad_temp_shared].bind(ax0_ax1_fused_ax2_fused_ax3_fused_o_i, tvm.thread_axis("threadIdx.x"))
    s[compute].pragma(nn_o_o_o_o, "auto_unroll_max_step", 64)
    s[compute].pragma(nn_o_o_o_o, "unroll_explicit", True)




A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    log_file = "conv2d.json"
    cost_model = auto_scheduler.XGBModel()
    cost_model.update_from_file(log_file)
    search_policy = auto_scheduler.SketchPolicy(
        task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
    )
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=5,
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
    )
    sch, args = auto_scheduler.auto_schedule(task, search_policy, tuning_options=tune_option)

    # kill the measurement process
    del measure_ctx




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  51.342 seconds)


.. _sphx_glr_download_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
