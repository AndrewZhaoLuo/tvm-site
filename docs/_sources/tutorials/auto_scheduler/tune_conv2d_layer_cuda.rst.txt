.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a convolution layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_


Different from the existing :ref:`autotvm <tutorials-autotvm-sec>` which relies on 
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.create_task(conv2d_layer, (N, H, W, CO, CI, KH, KW, strides, padding), target)

    # Inspect the computational graph
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    compute(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (compute[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search and auto-tuning.

* :code:`measure_ctx` launches a different process for measurement. This
  provides an isolation. It can protect the master process from GPU crashes
  happended during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value > 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, it will return the best schedule it found.


.. code-block:: default


    sch, args = auto_scheduler.auto_schedule(task, tuning_options=tune_option)

    # Kill the process for measurement
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none





We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    #[version = "0.0.5"]
    primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"global_symbol": "main", "tir.noalias": True}
      buffers = {compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 64;
      attr [compute_3: Pointer(float32)] "storage_scope" = "local";
      allocate(compute_3, float32, [7]);
      attr [pad_temp.shared: Pointer(float32)] "storage_scope" = "shared";
      allocate(pad_temp.shared, float32, [1296]);
      attr [kernel.shared: Pointer(float32)] "storage_scope" = "shared";
      allocate(kernel.shared, float32, [1152]);
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
        compute_3[0] = 0f32
        compute_3[1] = 0f32
        compute_3[2] = 0f32
        compute_3[3] = 0f32
        compute_3[4] = 0f32
        compute_3[5] = 0f32
        compute_3[6] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
            pad_temp.shared[(threadIdx.x_1*4)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1*4), 81)) && (floormod((threadIdx.x_1*4), 81) < 72)) && (1 <= floormod((threadIdx.x_1*4), 9))) && (floormod((threadIdx.x_1*4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1*4), 81)*49)) + (floordiv(floormod((threadIdx.x_1*4), 81), 9)*7)) + floormod((threadIdx.x_1*4), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 1)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 1), 81)) && (floormod(((threadIdx.x_1*4) + 1), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 1), 9))) && (floormod(((threadIdx.x_1*4) + 1), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 1), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 1), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 1), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 2)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 2), 81)) && (floormod(((threadIdx.x_1*4) + 2), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 2), 9))) && (floormod(((threadIdx.x_1*4) + 2), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 2), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 2), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 2), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 3)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 3), 81)) && (floormod(((threadIdx.x_1*4) + 3), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 3), 9))) && (floormod(((threadIdx.x_1*4) + 3), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 3), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 3), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 3), 9)) - 8)], 0f32, dtype=float32)
          }
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
            pad_temp.shared[((threadIdx.x_1*4) + 224)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 62), 81)) && (floormod(((threadIdx.x_1*4) + 62), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 8), 9))) && (floormod(((threadIdx.x_1*4) + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 224), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 62), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 8), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 225)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 63), 81)) && (floormod(((threadIdx.x_1*4) + 63), 81) < 72)) && (1 <= floormod((threadIdx.x_1*4), 9))) && (floormod((threadIdx.x_1*4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 225), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 63), 81), 9)*7)) + floormod((threadIdx.x_1*4), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 226)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 64), 81)) && (floormod(((threadIdx.x_1*4) + 64), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 1), 9))) && (floormod(((threadIdx.x_1*4) + 1), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 226), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 64), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 1), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 227)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 65), 81)) && (floormod(((threadIdx.x_1*4) + 65), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 2), 9))) && (floormod(((threadIdx.x_1*4) + 2), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 227), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 65), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 2), 9)) - 8)], 0f32, dtype=float32)
          }
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
            pad_temp.shared[((threadIdx.x_1*4) + 448)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 43), 81)) && (floormod(((threadIdx.x_1*4) + 43), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 7), 9))) && (floormod(((threadIdx.x_1*4) + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 448), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 43), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 7), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 449)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 44), 81)) && (floormod(((threadIdx.x_1*4) + 44), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 8), 9))) && (floormod(((threadIdx.x_1*4) + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 449), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 44), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 8), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 450)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 45), 81)) && (floormod(((threadIdx.x_1*4) + 45), 81) < 72)) && (1 <= floormod((threadIdx.x_1*4), 9))) && (floormod((threadIdx.x_1*4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 450), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 45), 81), 9)*7)) + floormod((threadIdx.x_1*4), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 451)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 46), 81)) && (floormod(((threadIdx.x_1*4) + 46), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 1), 9))) && (floormod(((threadIdx.x_1*4) + 1), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 451), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 46), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 1), 9)) - 8)], 0f32, dtype=float32)
          }
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
            pad_temp.shared[((threadIdx.x_1*4) + 672)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 24), 81)) && (floormod(((threadIdx.x_1*4) + 24), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 6), 9))) && (floormod(((threadIdx.x_1*4) + 6), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 672), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 24), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 6), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 673)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 25), 81)) && (floormod(((threadIdx.x_1*4) + 25), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 7), 9))) && (floormod(((threadIdx.x_1*4) + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 673), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 25), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 7), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 674)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 26), 81)) && (floormod(((threadIdx.x_1*4) + 26), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 8), 9))) && (floormod(((threadIdx.x_1*4) + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 674), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 26), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 8), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 675)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 27), 81)) && (floormod(((threadIdx.x_1*4) + 27), 81) < 72)) && (1 <= floormod((threadIdx.x_1*4), 9))) && (floormod((threadIdx.x_1*4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 675), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 27), 81), 9)*7)) + floormod((threadIdx.x_1*4), 9)) - 8)], 0f32, dtype=float32)
          }
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
            pad_temp.shared[((threadIdx.x_1*4) + 896)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 5), 81)) && (floormod(((threadIdx.x_1*4) + 5), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 5), 9))) && (floormod(((threadIdx.x_1*4) + 5), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 896), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 5), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 5), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 897)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 6), 81)) && (floormod(((threadIdx.x_1*4) + 6), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 6), 9))) && (floormod(((threadIdx.x_1*4) + 6), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 897), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 6), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 6), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 898)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 7), 81)) && (floormod(((threadIdx.x_1*4) + 7), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 7), 9))) && (floormod(((threadIdx.x_1*4) + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 898), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 7), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 7), 9)) - 8)], 0f32, dtype=float32)
            pad_temp.shared[((threadIdx.x_1*4) + 899)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 8), 81)) && (floormod(((threadIdx.x_1*4) + 8), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 8), 9))) && (floormod(((threadIdx.x_1*4) + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 899), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 8), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 8), 9)) - 8)], 0f32, dtype=float32)
          }
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56 {
            if @tir.likely((threadIdx.x_1 < 44), dtype=bool) {
              pad_temp.shared[((threadIdx.x_1*4) + 1120)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 67), 81)) && (floormod(((threadIdx.x_1*4) + 67), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 4), 9))) && (floormod(((threadIdx.x_1*4) + 4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 1120), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 67), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 4), 9)) - 8)], 0f32, dtype=float32)
            }
            if @tir.likely(((threadIdx.x_1*4) < 175), dtype=bool) {
              if @tir.likely((threadIdx.x_1 < 44), dtype=bool) {
                pad_temp.shared[((threadIdx.x_1*4) + 1121)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 68), 81)) && (floormod(((threadIdx.x_1*4) + 68), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 5), 9))) && (floormod(((threadIdx.x_1*4) + 5), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 1121), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 68), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 5), 9)) - 8)], 0f32, dtype=float32)
              }
            }
            if @tir.likely(((threadIdx.x_1*4) < 174), dtype=bool) {
              if @tir.likely((threadIdx.x_1 < 44), dtype=bool) {
                pad_temp.shared[((threadIdx.x_1*4) + 1122)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 69), 81)) && (floormod(((threadIdx.x_1*4) + 69), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 6), 9))) && (floormod(((threadIdx.x_1*4) + 6), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 1122), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 69), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 6), 9)) - 8)], 0f32, dtype=float32)
              }
            }
            if @tir.likely(((threadIdx.x_1*4) < 173), dtype=bool) {
              if @tir.likely((threadIdx.x_1 < 44), dtype=bool) {
                pad_temp.shared[((threadIdx.x_1*4) + 1123)] = @tir.if_then_else(((((9 <= floormod(((threadIdx.x_1*4) + 70), 81)) && (floormod(((threadIdx.x_1*4) + 70), 81) < 72)) && (1 <= floormod(((threadIdx.x_1*4) + 7), 9))) && (floormod(((threadIdx.x_1*4) + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv(((threadIdx.x_1*4) + 1123), 81)*49)) + (floordiv(floormod(((threadIdx.x_1*4) + 70), 81), 9)*7)) + floormod(((threadIdx.x_1*4) + 7), 9)) - 8)], 0f32, dtype=float32)
              }
            }
          }
          attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[threadIdx.x_2] = (float32*)kernel_2[(((blockIdx.x*36864) + (rc.outer.outer*144)) + threadIdx.x_2)]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 56)] = (float32*)kernel_2[(((blockIdx.x*36864) + (rc.outer.outer*144)) + (threadIdx.x_2 + 56))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 112)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 112), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 112), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 168)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 168), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 24), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 224)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 224), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 80), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 280)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 280), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 136), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 336)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 336), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 48), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 392)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 392), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 104), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 448)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 448), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 16), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 504)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 504), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 72), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 560)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 560), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 128), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 616)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 616), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 40), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 672)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 672), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 96), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 728)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 728), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 8), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 784)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 784), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 64), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 840)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 840), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 120), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 896)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 896), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 32), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 952)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 952), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 88), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 1008)] = (float32*)kernel_2[((((blockIdx.x*36864) + (rc.outer.outer*144)) + threadIdx.x_2) + 32256)]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          kernel.shared[(threadIdx.x_2 + 1064)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1064), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 56), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 56;
          if @tir.likely((threadIdx.x_2 < 32), dtype=bool) {
            kernel.shared[(threadIdx.x_2 + 1120)] = (float32*)kernel_2[((((blockIdx.x*36864) + (floordiv((threadIdx.x_2 + 1120), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 112), 144))]
          }
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(floormod(threadIdx.x, 7)*9)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 2)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 3)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 4)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 5)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 6)]*(float32*)kernel.shared[(floordiv(threadIdx.x, 7)*144)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 9)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 10)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 11)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 12)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 13)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 14)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 15)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 3)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 18)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 19)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 20)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 21)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 22)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 23)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 24)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 6)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 2)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 3)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 4)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 5)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 6)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 7)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 1)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 10)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 11)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 12)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 13)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 14)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 15)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 16)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 4)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 19)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 20)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 21)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 22)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 23)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 24)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 25)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 7)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 2)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 3)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 4)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 5)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 6)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 7)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 8)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 2)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 11)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 12)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 13)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 14)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 15)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 16)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 17)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 5)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 20)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 21)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 22)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 23)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 24)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 25)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 26)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 8)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 81)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 82)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 83)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 84)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 85)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 86)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 87)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 9)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 90)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 91)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 92)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 93)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 94)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 95)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 96)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 12)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 99)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 100)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 101)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 102)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 103)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 104)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 105)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 15)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 82)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 83)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 84)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 85)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 86)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 87)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 88)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 10)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 91)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 92)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 93)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 94)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 95)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 96)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 97)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 13)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 100)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 101)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 102)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 103)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 104)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 105)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 106)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 16)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 83)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 84)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 85)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 86)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 87)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 88)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 89)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 11)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 92)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 93)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 94)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 95)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 96)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 97)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 98)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 14)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 101)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 102)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 103)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 104)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 105)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 106)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 107)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 17)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 162)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 163)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 164)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 165)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 166)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 167)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 168)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 18)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 171)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 172)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 173)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 174)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 175)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 176)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 177)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 21)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 180)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 181)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 182)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 183)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 184)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 185)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 186)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 24)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 163)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 164)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 165)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 166)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 167)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 168)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 169)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 19)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 172)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 173)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 174)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 175)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 176)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 177)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 178)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 22)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 181)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 182)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 183)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 184)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 185)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 186)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 187)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 25)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 164)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 165)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 166)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 167)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 168)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 169)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 170)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 20)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 173)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 174)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 175)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 176)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 177)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 178)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 179)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 23)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 182)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 183)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 184)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 185)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 186)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 187)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 188)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 26)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 243)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 244)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 245)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 246)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 247)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 248)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 249)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 27)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 252)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 253)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 254)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 255)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 256)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 257)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 258)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 30)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 261)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 262)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 263)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 264)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 265)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 266)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 267)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 33)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 244)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 245)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 246)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 247)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 248)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 249)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 250)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 28)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 253)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 254)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 255)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 256)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 257)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 258)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 259)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 31)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 262)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 263)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 264)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 265)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 266)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 267)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 268)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 34)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 245)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 246)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 247)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 248)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 249)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 250)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 251)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 29)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 254)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 255)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 256)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 257)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 258)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 259)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 260)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 32)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 263)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 264)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 265)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 266)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 267)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 268)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 269)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 35)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 324)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 325)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 326)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 327)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 328)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 329)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 330)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 36)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 333)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 334)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 335)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 336)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 337)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 338)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 339)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 39)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 342)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 343)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 344)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 345)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 346)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 347)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 348)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 42)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 325)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 326)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 327)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 328)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 329)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 330)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 331)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 37)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 334)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 335)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 336)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 337)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 338)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 339)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 340)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 40)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 343)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 344)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 345)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 346)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 347)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 348)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 349)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 43)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 326)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 327)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 328)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 329)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 330)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 331)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 332)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 38)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 335)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 336)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 337)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 338)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 339)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 340)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 341)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 41)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 344)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 345)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 346)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 347)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 348)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 349)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 350)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 44)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 405)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 406)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 407)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 408)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 409)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 410)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 411)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 45)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 414)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 415)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 416)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 417)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 418)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 419)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 420)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 48)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 423)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 424)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 425)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 426)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 427)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 428)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 429)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 51)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 406)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 407)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 408)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 409)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 410)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 411)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 412)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 46)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 415)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 416)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 417)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 418)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 419)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 420)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 421)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 49)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 424)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 425)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 426)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 427)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 428)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 429)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 430)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 52)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 407)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 408)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 409)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 410)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 411)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 412)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 413)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 47)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 416)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 417)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 418)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 419)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 420)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 421)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 422)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 50)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 425)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 426)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 427)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 428)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 429)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 430)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 431)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 53)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 486)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 487)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 488)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 489)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 490)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 491)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 492)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 54)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 495)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 496)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 497)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 498)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 499)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 500)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 501)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 57)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 504)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 505)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 506)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 507)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 508)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 509)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 510)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 60)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 487)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 488)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 489)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 490)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 491)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 492)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 493)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 55)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 496)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 497)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 498)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 499)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 500)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 501)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 502)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 58)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 505)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 506)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 507)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 508)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 509)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 510)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 511)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 61)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 488)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 489)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 490)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 491)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 492)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 493)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 494)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 56)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 497)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 498)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 499)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 500)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 501)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 502)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 503)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 59)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 506)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 507)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 508)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 509)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 510)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 511)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 512)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 62)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 567)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 568)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 569)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 570)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 571)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 572)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 573)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 63)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 576)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 577)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 578)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 579)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 580)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 581)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 582)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 66)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 585)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 586)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 587)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 588)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 589)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 590)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 591)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 69)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 568)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 569)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 570)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 571)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 572)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 573)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 574)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 64)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 577)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 578)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 579)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 580)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 581)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 582)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 583)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 67)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 586)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 587)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 588)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 589)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 590)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 591)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 592)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 70)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 569)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 570)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 571)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 572)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 573)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 574)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 575)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 65)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 578)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 579)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 580)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 581)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 582)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 583)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 584)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 68)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 587)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 588)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 589)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 590)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 591)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 592)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 593)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 71)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 648)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 649)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 650)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 651)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 652)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 653)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 654)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 72)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 657)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 658)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 659)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 660)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 661)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 662)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 663)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 75)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 666)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 667)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 668)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 669)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 670)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 671)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 672)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 78)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 649)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 650)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 651)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 652)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 653)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 654)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 655)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 73)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 658)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 659)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 660)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 661)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 662)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 663)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 664)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 76)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 667)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 668)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 669)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 670)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 671)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 672)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 673)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 79)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 650)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 651)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 652)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 653)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 654)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 655)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 656)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 74)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 659)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 660)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 661)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 662)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 663)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 664)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 665)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 77)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 668)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 669)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 670)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 671)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 672)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 673)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 674)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 80)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 729)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 730)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 731)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 732)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 733)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 734)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 735)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 81)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 738)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 739)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 740)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 741)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 742)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 743)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 744)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 84)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 747)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 748)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 749)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 750)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 751)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 752)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 753)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 87)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 730)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 731)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 732)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 733)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 734)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 735)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 736)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 82)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 739)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 740)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 741)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 742)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 743)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 744)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 745)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 85)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 748)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 749)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 750)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 751)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 752)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 753)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 754)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 88)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 731)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 732)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 733)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 734)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 735)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 736)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 737)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 83)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 740)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 741)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 742)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 743)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 744)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 745)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 746)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 86)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 749)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 750)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 751)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 752)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 753)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 754)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 755)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 89)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 810)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 811)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 812)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 813)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 814)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 815)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 816)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 90)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 819)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 820)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 821)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 822)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 823)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 824)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 825)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 93)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 828)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 829)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 830)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 831)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 832)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 833)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 834)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 96)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 811)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 812)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 813)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 814)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 815)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 816)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 817)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 91)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 820)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 821)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 822)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 823)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 824)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 825)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 826)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 94)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 829)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 830)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 831)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 832)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 833)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 834)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 835)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 97)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 812)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 813)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 814)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 815)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 816)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 817)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 818)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 92)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 821)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 822)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 823)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 824)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 825)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 826)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 827)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 95)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 830)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 831)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 832)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 833)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 834)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 835)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 836)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 98)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 891)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 892)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 893)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 894)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 895)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 896)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 897)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 99)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 900)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 901)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 902)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 903)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 904)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 905)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 906)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 102)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 909)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 910)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 911)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 912)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 913)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 914)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 915)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 105)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 892)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 893)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 894)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 895)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 896)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 897)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 898)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 100)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 901)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 902)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 903)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 904)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 905)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 906)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 907)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 103)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 910)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 911)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 912)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 913)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 914)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 915)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 916)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 106)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 893)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 894)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 895)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 896)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 897)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 898)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 899)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 101)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 902)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 903)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 904)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 905)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 906)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 907)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 908)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 104)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 911)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 912)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 913)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 914)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 915)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 916)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 917)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 107)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 972)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 973)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 974)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 975)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 976)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 977)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 978)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 108)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 981)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 982)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 983)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 984)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 985)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 986)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 987)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 111)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 990)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 991)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 992)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 993)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 994)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 995)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 996)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 114)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 973)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 974)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 975)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 976)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 977)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 978)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 979)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 109)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 982)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 983)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 984)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 985)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 986)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 987)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 988)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 112)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 991)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 992)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 993)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 994)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 995)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 996)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 997)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 115)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 974)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 975)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 976)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 977)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 978)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 979)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 980)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 110)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 983)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 984)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 985)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 986)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 987)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 988)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 989)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 113)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 992)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 993)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 994)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 995)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 996)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 997)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 998)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 116)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1053)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1054)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1055)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1056)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1057)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1058)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1059)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 117)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1062)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1063)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1064)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1065)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1066)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1067)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1068)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 120)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1071)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1072)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1073)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1074)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1075)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1076)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1077)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 123)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1054)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1055)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1056)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1057)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1058)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1059)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1060)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 118)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1063)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1064)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1065)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1066)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1067)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1068)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1069)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 121)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1072)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1073)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1074)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1075)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1076)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1077)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1078)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 124)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1055)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1056)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1057)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1058)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1059)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1060)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1061)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 119)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1064)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1065)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1066)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1067)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1068)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1069)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1070)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 122)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1073)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1074)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1075)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1076)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1077)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1078)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1079)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 125)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1134)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1135)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1136)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1137)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1138)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1139)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1140)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 126)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1143)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1144)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1145)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1146)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1147)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1148)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1149)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 129)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1152)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1153)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1154)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1155)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1156)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1157)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1158)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 132)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1135)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1136)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1137)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1138)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1139)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1140)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1141)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 127)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1144)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1145)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1146)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1147)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1148)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1149)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1150)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 130)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1153)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1154)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1155)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1156)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1157)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1158)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1159)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 133)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1136)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1137)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1138)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1139)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1140)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1141)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1142)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 128)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1145)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1146)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1147)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1148)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1149)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1150)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1151)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 131)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1154)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1155)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1156)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1157)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1158)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1159)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1160)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 134)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1215)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1216)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1217)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1218)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1219)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1220)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1221)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 135)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1224)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1225)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1226)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1227)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1228)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1229)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1230)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 138)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1233)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1234)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1235)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1236)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1237)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1238)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1239)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 141)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1216)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1217)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1218)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1219)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1220)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1221)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1222)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 136)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1225)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1226)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1227)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1228)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1229)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1230)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1231)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 139)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1234)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1235)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1236)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1237)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1238)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1239)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1240)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 142)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1217)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1218)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1219)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1220)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1221)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1222)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1223)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 137)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1226)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1227)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1228)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1229)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1230)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1231)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1232)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 140)]))
          compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1235)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
          compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1236)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
          compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1237)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
          compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1238)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
          compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1239)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
          compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1240)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
          compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((floormod(threadIdx.x, 7)*9) + 1241)]*(float32*)kernel.shared[((floordiv(threadIdx.x, 7)*144) + 143)]))
        }
        for (i3.inner: int32, 0, 7) {
          compute_2[(((blockIdx.x*392) + (threadIdx.x*7)) + i3.inner)] = max(((float32*)compute_3[i3.inner] + (float32*)bias_2[((blockIdx.x*8) + floordiv(threadIdx.x, 7))]), 0f32)
        }
      }
    }

    #[metadata]
    {
      "root": 1, 
      "nodes": [
        {
          "type_key": ""
        }, 
        {
          "type_key": "Map", 
          "keys": [
            "IntImm"
          ], 
          "data": [2]
        }, 
        {
          "type_key": "Array", 
          "data": [3]
        }, 
        {
          "type_key": "IntImm", 
          "attrs": {
            "dtype": "bool", 
            "value": "1"
          }
        }
      ], 
      "b64ndarrays": [], 
      "attrs": {"tvm_version": "0.8.dev0"}
    }



Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    ctx = tvm.gpu()
    data_tvm = tvm.nd.array(data_np, ctx=ctx)
    weight_tvm = tvm.nd.array(weight_np, ctx=ctx)
    bias_tvm = tvm.nd.array(bias_np, ctx=ctx)
    out_tvm = tvm.nd.empty(out_np.shape, ctx=ctx)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.asnumpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, ctx, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.201 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measuremnt records are dumpped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API, and build the binary again.


.. code-block:: default


    # Load the measuremnt record for the best schedule
    inp, res = auto_scheduler.load_best(log_file, task.workload_key)

    # Print equivalent python schedule API. This can be used for debugging and
    # learning the behavior of the auto-scheduler.
    print("Equivalent python schedule:")
    print(task.compute_dag.print_python_code_from_state(inp.state))

    # Rebuild the binary. This shows how you can apply the best schedule from a
    # log file without reruning the search again.
    sch, args = task.compute_dag.apply_steps_from_state(inp.state)
    func = tvm.build(sch, args, target)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    compute_nn, compute_ff, compute_yy, compute_xx, compute_rc, compute_ry, compute_rx = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    compute_nn_o_i, compute_nn_i = s[compute].split(compute_nn, factor=1)
    compute_nn_o_o_i, compute_nn_o_i = s[compute].split(compute_nn_o_i, factor=1)
    compute_nn_o_o_o_i, compute_nn_o_o_i = s[compute].split(compute_nn_o_o_i, factor=1)
    compute_nn_o_o_o_o, compute_nn_o_o_o_i = s[compute].split(compute_nn_o_o_o_i, factor=1)
    compute_ff_o_i, compute_ff_i = s[compute].split(compute_ff, factor=1)
    compute_ff_o_o_i, compute_ff_o_i = s[compute].split(compute_ff_o_i, factor=1)
    compute_ff_o_o_o_i, compute_ff_o_o_i = s[compute].split(compute_ff_o_o_i, factor=8)
    compute_ff_o_o_o_o, compute_ff_o_o_o_i = s[compute].split(compute_ff_o_o_o_i, factor=1)
    compute_yy_o_i, compute_yy_i = s[compute].split(compute_yy, factor=1)
    compute_yy_o_o_i, compute_yy_o_i = s[compute].split(compute_yy_o_i, factor=1)
    compute_yy_o_o_o_i, compute_yy_o_o_i = s[compute].split(compute_yy_o_o_i, factor=7)
    compute_yy_o_o_o_o, compute_yy_o_o_o_i = s[compute].split(compute_yy_o_o_o_i, factor=1)
    compute_xx_o_i, compute_xx_i = s[compute].split(compute_xx, factor=7)
    compute_xx_o_o_i, compute_xx_o_i = s[compute].split(compute_xx_o_i, factor=1)
    compute_xx_o_o_o_i, compute_xx_o_o_i = s[compute].split(compute_xx_o_o_i, factor=1)
    compute_xx_o_o_o_o, compute_xx_o_o_o_i = s[compute].split(compute_xx_o_o_o_i, factor=1)
    compute_rc_o_i, compute_rc_i = s[compute].split(compute_rc, factor=1)
    compute_rc_o_o, compute_rc_o_i = s[compute].split(compute_rc_o_i, factor=16)
    compute_ry_o_i, compute_ry_i = s[compute].split(compute_ry, factor=3)
    compute_ry_o_o, compute_ry_o_i = s[compute].split(compute_ry_o_i, factor=1)
    compute_rx_o_i, compute_rx_i = s[compute].split(compute_rx, factor=1)
    compute_rx_o_o, compute_rx_o_i = s[compute].split(compute_rx_o_i, factor=3)
    s[compute].reorder(compute_nn_o_o_o_o, compute_ff_o_o_o_o, compute_yy_o_o_o_o, compute_xx_o_o_o_o, compute_nn_o_o_o_i, compute_ff_o_o_o_i, compute_yy_o_o_o_i, compute_xx_o_o_o_i, compute_nn_o_o_i, compute_ff_o_o_i, compute_yy_o_o_i, compute_xx_o_o_i, compute_rc_o_o, compute_ry_o_o, compute_rx_o_o, compute_rc_o_i, compute_ry_o_i, compute_rx_o_i, compute_nn_o_i, compute_ff_o_i, compute_yy_o_i, compute_xx_o_i, compute_rc_i, compute_ry_i, compute_rx_i, compute_nn_i, compute_ff_i, compute_yy_i, compute_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=1)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=8)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=7)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=1)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[compute].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [compute])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[compute], compute_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [compute])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[compute], compute_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=4)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=56)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[compute].pragma(compute_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[compute].pragma(compute_nn_o_o_o_o, "unroll_explicit", True)




A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    cost_model = auto_scheduler.XGBModel()
    cost_model.update_from_file(log_file)
    search_policy = auto_scheduler.SketchPolicy(
        task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
    )
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=5,
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
    )
    sch, args = auto_scheduler.auto_schedule(task, search_policy, tuning_options=tune_option)

    # Kill the measurement process
    del measure_ctx




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  40.668 seconds)


.. _sphx_glr_download_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
