.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py:


.. _auto-scheduler-conv-gpu:

Auto-scheduling a Convolution Layer for GPU
===========================================
**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_,             `Chengfan Jia <https://github.com/jcf94/>`_

This is a tutorial on how to use the auto-scheduler for GPUs.

Different from the template-based :ref:`autotvm <tutorials-autotvm-sec>` which relies on
manual templates to define the search space, the auto-scheduler does not require any templates.
Users only need to write the computation declaration without any schedule commands or templates.
The auto-scheduler can automatically generate a large search space and
find a good schedule in the space.

We use a convolution layer as an example in this tutorial.

Note that this tutorial will not run on Windows or recent versions of macOS. To
get it to run, you will need to wrap the body of this tutorial in a :code:`if
__name__ == "__main__":` block.


.. code-block:: default


    import os

    import numpy as np
    import tvm
    from tvm import te, auto_scheduler, topi
    from tvm.topi.testing import conv2d_nchw_python







Define the computation
^^^^^^^^^^^^^^^^^^^^^^
To begin with, let us define the computation of a convolution layer.
The function should return the list of input/output tensors.
From these tensors, the auto-scheduler can get the whole computational graph.


.. code-block:: default



    @auto_scheduler.register_workload
    def conv2d_layer(N, H, W, CO, CI, KH, KW, stride, padding):
        data = te.placeholder((N, CI, H, W), name="data")
        kernel = te.placeholder((CO, CI, KH, KW), name="kernel")
        bias = te.placeholder((1, CO, 1, 1), name="bias")
        conv = topi.nn.conv2d_nchw(data, kernel, stride, padding, dilation=1, out_dtype="float32")
        out = topi.nn.relu(conv + bias)
        return [data, kernel, bias, out]








Create the search task
^^^^^^^^^^^^^^^^^^^^^^
We then create a search task for the last convolution layer in the resnet.


.. code-block:: default


    target = tvm.target.Target("cuda")

    # Use the last layer in ResNet-50
    N, H, W, CO, CI, KH, KW, strides, padding = 1, 7, 7, 512, 512, 3, 3, (1, 1), (1, 1)
    task = auto_scheduler.SearchTask(
        func=conv2d_layer, args=(N, H, W, CO, CI, KH, KW, strides, padding), target=target
    )

    # Inspect the computational graph
    print("Computational DAG:")
    print(task.compute_dag)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Computational DAG:
    data = PLACEHOLDER [1, 512, 7, 7]
    pad_temp(i0, i1, i2, i3) = tir.if_then_else(((((i2 >= 1) && (i2 < 8)) && (i3 >= 1)) && (i3 < 8)), data[i0, i1, (i2 - 1), (i3 - 1)], 0f)
    kernel = PLACEHOLDER [512, 512, 3, 3]
    compute(nn, ff, yy, xx) += (pad_temp[nn, rc, (yy + ry), (xx + rx)]*kernel[ff, rc, ry, rx])
    bias = PLACEHOLDER [1, 512, 1, 1]
    T_add(ax0, ax1, ax2, ax3) = (compute[ax0, ax1, ax2, ax3] + bias[ax0, ax1, 0, 0])
    compute(i0, i1, i2, i3) = max(T_add[i0, i1, i2, i3], 0f)




Next, we set parameters for the auto-scheduler. These parameters
mainly specify how we do the measurement during the search.

* :code:`measure_ctx` launches a different process for measurement to
  provide isolation. It can protect the master process from GPU crashes
  during measurement and avoid other runtime conflicts.
* :code:`min_repeat_ms` defines the minimum duration of one "repeat" in every measurement.
  This can warmup the GPU, which is necessary to get accurate measurement results.
  Typically, we recommend a value >= 300 ms.
* :code:`num_measure_trials` is the number of measurement trials we can use during the search.
  We only make 10 trials in this tutorial for a fast demonstration. In practice, 1000 is a
  good value for the search to converge. You can do more trials according to your time budget.
* In addition, we use :code:`RecordToFile` to dump measurement records into a file `conv2d.json`.
  The measurement records can be used to query the history best, resume the search,
  and do more analyses later.
* see :any:`auto_scheduler.TuningOptions`,
  :any:`auto_scheduler.LocalRPCMeasureContext` for more parameters.


.. code-block:: default


    log_file = "conv2d.json"
    measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
    tune_option = auto_scheduler.TuningOptions(
        num_measure_trials=10,  # change this to 1000 to achieve the best performance
        runner=measure_ctx.runner,
        measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        verbose=2,
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Get devices for measurement successfully!



Run the search
^^^^^^^^^^^^^^
Now we get all inputs ready. Pretty simple, isn't it?
We can kick off the search and let the auto-scheduler do its magic.
After some measurement trials, we can load the best schedule from the log
file and apply it.


.. code-block:: default


    # Run auto-tuning (search)
    task.tune(tune_option)
    # Apply the best schedule
    sch, args = task.apply_best(log_file)

    # Kill the measurement process
    del measure_ctx





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none





We can lower the schedule to see the IR after auto-scheduling.
The auto-scheduler correctly performs optimizations including multi-level tiling,
cooperative fetching, unrolling and operator fusion.


.. code-block:: default


    print("Lowered TIR:")
    print(tvm.lower(sch, args, simple_mode=True))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Lowered TIR:
    primfn(data_1: handle, kernel_1: handle, bias_1: handle, compute_1: handle) -> ()
      attr = {"global_symbol": "main", "tir.noalias": True}
      buffers = {compute: Buffer(compute_2: Pointer(float32), float32, [1, 512, 7, 7], []),
                 bias: Buffer(bias_2: Pointer(float32), float32, [1, 512, 1, 1], []),
                 kernel: Buffer(kernel_2: Pointer(float32), float32, [512, 512, 3, 3], []),
                 data: Buffer(data_2: Pointer(float32), float32, [1, 512, 7, 7], [])}
      buffer_map = {data_1: data, kernel_1: kernel, bias_1: bias, compute_1: compute} {
      attr [IterVar(blockIdx.x: int32, (nullptr), "ThreadIndex", "blockIdx.x")] "thread_extent" = 32;
      attr [compute_3: Pointer(float32)] "storage_scope" = "local";
      allocate(compute_3, float32, [16]);
      attr [pad_temp.shared: Pointer(float32)] "storage_scope" = "shared";
      allocate(pad_temp.shared, float32, [1296]);
      attr [kernel.shared: Pointer(float32)] "storage_scope" = "shared";
      allocate(kernel.shared, float32, [2304]);
      attr [IterVar(threadIdx.x: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49 {
        compute_3[0] = 0f32
        compute_3[1] = 0f32
        compute_3[2] = 0f32
        compute_3[3] = 0f32
        compute_3[4] = 0f32
        compute_3[5] = 0f32
        compute_3[6] = 0f32
        compute_3[7] = 0f32
        compute_3[8] = 0f32
        compute_3[9] = 0f32
        compute_3[10] = 0f32
        compute_3[11] = 0f32
        compute_3[12] = 0f32
        compute_3[13] = 0f32
        compute_3[14] = 0f32
        compute_3[15] = 0f32
        for (rc.outer.outer: int32, 0, 32) {
          attr [IterVar(threadIdx.x_1: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[threadIdx.x_1] = @tir.if_then_else((((9 <= threadIdx.x_1) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), (float32*)data_2[((((rc.outer.outer*784) + (floordiv(threadIdx.x_1, 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 49)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 49), 81)) && (floormod((threadIdx.x_1 + 49), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 49), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 49), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 98)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 8), 9)) && (floormod((threadIdx.x_1 + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 98), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 17), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 147)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 66), 81)) && (floormod((threadIdx.x_1 + 66), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 147), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 66), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 196)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 34), 81)) && (floormod((threadIdx.x_1 + 34), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 196), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 34), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 245)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 2), 81)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 245), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 2), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 294)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 51), 81)) && (floormod((threadIdx.x_1 + 51), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 294), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 51), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 343)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 343), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 19), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 392)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 68), 81)) && (floormod((threadIdx.x_1 + 68), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 392), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 68), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 441)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 36), 81)) && (floormod((threadIdx.x_1 + 36), 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 441), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 36), 81), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 490)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 4), 81)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 490), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 4), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 539)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 53), 81)) && (floormod((threadIdx.x_1 + 53), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 539), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 53), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 588)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 3), 9)) && (floormod((threadIdx.x_1 + 3), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 588), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 21), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 637)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 70), 81)) && (floormod((threadIdx.x_1 + 70), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 637), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 70), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 686)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 38), 81)) && (floormod((threadIdx.x_1 + 38), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 686), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 38), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 735)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 6), 81)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 735), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 6), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 784)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 55), 81)) && (floormod((threadIdx.x_1 + 55), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 1), 9))) && (floormod((threadIdx.x_1 + 1), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 784), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 55), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 833)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 5), 9)) && (floormod((threadIdx.x_1 + 5), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 833), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 23), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 882)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 72), 81)) && (floormod((threadIdx.x_1 + 72), 81) < 72)) && (1 <= floormod(threadIdx.x_1, 9))) && (floormod(threadIdx.x_1, 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 882), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 72), 81), 9)*7)) + floormod(threadIdx.x_1, 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 931)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 40), 81)) && (floormod((threadIdx.x_1 + 40), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 4), 9))) && (floormod((threadIdx.x_1 + 4), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 931), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 40), 81), 9)*7)) + floormod((threadIdx.x_1 + 4), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 980)] = @tir.if_then_else((((9 <= floormod((threadIdx.x_1 + 8), 81)) && (1 <= floormod((threadIdx.x_1 + 8), 9))) && (floormod((threadIdx.x_1 + 8), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 980), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 8), 81), 9)*7)) + floormod((threadIdx.x_1 + 8), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 1029)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 57), 81)) && (floormod((threadIdx.x_1 + 57), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 3), 9))) && (floormod((threadIdx.x_1 + 3), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 1029), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 57), 81), 9)*7)) + floormod((threadIdx.x_1 + 3), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 1078)] = @tir.if_then_else((((floormod((threadIdx.x_1 + 25), 81) < 72) && (1 <= floormod((threadIdx.x_1 + 7), 9))) && (floormod((threadIdx.x_1 + 7), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 1078), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 25), 81), 9)*7)) + floormod((threadIdx.x_1 + 7), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 1127)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 74), 81)) && (floormod((threadIdx.x_1 + 74), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 2), 9))) && (floormod((threadIdx.x_1 + 2), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 1127), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 74), 81), 9)*7)) + floormod((threadIdx.x_1 + 2), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 1176)] = @tir.if_then_else(((((9 <= floormod((threadIdx.x_1 + 42), 81)) && (floormod((threadIdx.x_1 + 42), 81) < 72)) && (1 <= floormod((threadIdx.x_1 + 6), 9))) && (floormod((threadIdx.x_1 + 6), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 1176), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 42), 81), 9)*7)) + floormod((threadIdx.x_1 + 6), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          pad_temp.shared[(threadIdx.x_1 + 1225)] = @tir.if_then_else(((1 <= floormod((threadIdx.x_1 + 1), 9)) && (floormod((threadIdx.x_1 + 1), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 1225), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 10), 81), 9)*7)) + floormod((threadIdx.x_1 + 1), 9)) - 8)], 0f32, dtype=float32)
          attr [IterVar(threadIdx.x_1, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          if @tir.likely((threadIdx.x_1 < 22), dtype=bool) {
            pad_temp.shared[(threadIdx.x_1 + 1274)] = @tir.if_then_else((((floormod((threadIdx.x_1 + 59), 81) < 72) && (1 <= floormod((threadIdx.x_1 + 5), 9))) && (floormod((threadIdx.x_1 + 5), 9) < 8)), (float32*)data_2[(((((rc.outer.outer*784) + (floordiv((threadIdx.x_1 + 1274), 81)*49)) + (floordiv(floormod((threadIdx.x_1 + 59), 81), 9)*7)) + floormod((threadIdx.x_1 + 5), 9)) - 8)], 0f32, dtype=float32)
          }
          attr [IterVar(threadIdx.x_2: int32, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[threadIdx.x_2] = (float32*)kernel_2[(((blockIdx.x*73728) + (rc.outer.outer*144)) + threadIdx.x_2)]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 49)] = (float32*)kernel_2[(((blockIdx.x*73728) + (rc.outer.outer*144)) + (threadIdx.x_2 + 49))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 98)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 98), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 98), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 147)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 147), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 3), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 196)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 196), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 52), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 245)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 245), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 101), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 294)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 294), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 6), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 343)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 343), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 55), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 392)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 392), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 104), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 441)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 441), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 9), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 490)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 490), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 58), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 539)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 539), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 107), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 588)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 588), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 12), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 637)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 637), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 61), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 686)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 686), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 110), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 735)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 735), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 15), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 784)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 784), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 64), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 833)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 833), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 113), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 882)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 882), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 18), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 931)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 931), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 67), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 980)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 980), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 116), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1029)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1029), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 21), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1078)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1078), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 70), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1127)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1127), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 119), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1176)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1176), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 24), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1225)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1225), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 73), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1274)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1274), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 122), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1323)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1323), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 27), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1372)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1372), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 76), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1421)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1421), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 125), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1470)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1470), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 30), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1519)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1519), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 79), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1568)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1568), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 128), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1617)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1617), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 33), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1666)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1666), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 82), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1715)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1715), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 131), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1764)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1764), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 36), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1813)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1813), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 85), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1862)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1862), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 134), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1911)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1911), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 39), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 1960)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 1960), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 88), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 2009)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2009), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 137), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 2058)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2058), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 42), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 2107)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2107), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 91), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 2156)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2156), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 140), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 2205)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2205), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 45), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          kernel.shared[(threadIdx.x_2 + 2254)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2254), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 94), 144))]
          attr [IterVar(threadIdx.x_2, (nullptr), "ThreadIndex", "threadIdx.x")] "thread_extent" = 49;
          if @tir.likely((threadIdx.x_2 < 1), dtype=bool) {
            kernel.shared[(threadIdx.x_2 + 2303)] = (float32*)kernel_2[((((blockIdx.x*73728) + (floordiv((threadIdx.x_2 + 2303), 144)*4608)) + (rc.outer.outer*144)) + floormod((threadIdx.x_2 + 143), 144))]
          }
          for (rc.outer.inner: int32, 0, 8) {
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[(rc.outer.inner*18)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 9)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 10)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 11)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 144)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 145)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 146)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 153)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 154)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 155)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 288)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 289)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 290)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 297)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 298)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 299)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 432)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 433)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 434)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 441)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 442)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 443)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 576)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 577)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 578)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 585)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 586)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 587)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 720)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 721)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 722)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 729)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 730)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 731)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 864)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 865)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 866)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 873)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 874)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 875)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1008)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1009)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1010)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1017)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1018)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1019)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1152)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1153)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1154)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1161)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1162)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1163)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1296)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1297)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1298)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1305)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1306)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1307)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1440)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1441)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1442)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1449)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1450)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1451)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1584)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1585)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1586)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1593)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1594)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1595)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1728)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1729)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1730)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1737)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1738)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1739)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 1872)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1873)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1874)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1881)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1882)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1883)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 2016)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2017)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2018)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2025)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2026)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2027)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[(((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7))]*(float32*)kernel.shared[((rc.outer.inner*18) + 2160)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 1)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2161)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 2)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2162)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 81)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2169)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 82)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2170)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 83)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2171)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 3)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 4)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 5)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 12)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 13)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 14)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 147)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 148)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 149)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 156)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 157)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 158)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 291)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 292)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 293)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 300)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 301)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 302)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 435)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 436)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 437)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 444)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 445)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 446)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 579)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 580)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 581)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 588)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 589)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 590)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 723)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 724)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 725)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 732)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 733)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 734)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 867)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 868)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 869)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 876)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 877)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 878)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1011)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1012)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1013)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1020)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1021)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1022)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1155)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1156)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1157)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1164)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1165)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1166)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1299)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1300)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1301)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1308)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1309)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1310)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1443)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1444)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1445)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1452)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1453)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1454)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1587)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1588)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1589)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1596)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1597)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1598)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1731)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1732)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1733)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1740)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1741)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1742)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1875)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1876)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1877)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1884)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1885)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1886)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2019)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2020)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2021)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2028)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2029)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2030)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 9)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2163)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 10)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2164)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 11)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2165)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 90)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2172)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 91)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2173)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 92)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2174)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 6)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 7)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 8)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 15)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 16)]))
            compute_3[0] = ((float32*)compute_3[0] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 17)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 150)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 151)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 152)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 159)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 160)]))
            compute_3[1] = ((float32*)compute_3[1] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 161)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 294)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 295)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 296)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 303)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 304)]))
            compute_3[2] = ((float32*)compute_3[2] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 305)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 438)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 439)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 440)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 447)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 448)]))
            compute_3[3] = ((float32*)compute_3[3] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 449)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 582)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 583)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 584)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 591)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 592)]))
            compute_3[4] = ((float32*)compute_3[4] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 593)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 726)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 727)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 728)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 735)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 736)]))
            compute_3[5] = ((float32*)compute_3[5] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 737)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 870)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 871)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 872)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 879)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 880)]))
            compute_3[6] = ((float32*)compute_3[6] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 881)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1014)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1015)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1016)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1023)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1024)]))
            compute_3[7] = ((float32*)compute_3[7] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1025)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1158)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1159)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1160)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1167)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1168)]))
            compute_3[8] = ((float32*)compute_3[8] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1169)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1302)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1303)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1304)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1311)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1312)]))
            compute_3[9] = ((float32*)compute_3[9] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1313)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1446)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1447)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1448)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1455)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1456)]))
            compute_3[10] = ((float32*)compute_3[10] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1457)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1590)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1591)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1592)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1599)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1600)]))
            compute_3[11] = ((float32*)compute_3[11] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1601)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1734)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1735)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1736)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1743)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1744)]))
            compute_3[12] = ((float32*)compute_3[12] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1745)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1878)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1879)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1880)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1887)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1888)]))
            compute_3[13] = ((float32*)compute_3[13] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 1889)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2022)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2023)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2024)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2031)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2032)]))
            compute_3[14] = ((float32*)compute_3[14] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2033)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 18)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2166)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 19)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2167)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 20)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2168)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 99)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2175)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 100)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2176)]))
            compute_3[15] = ((float32*)compute_3[15] + ((float32*)pad_temp.shared[((((rc.outer.inner*162) + (floordiv(threadIdx.x, 7)*9)) + floormod(threadIdx.x, 7)) + 101)]*(float32*)kernel.shared[((rc.outer.inner*18) + 2177)]))
          }
        }
        for (i1.inner: int32, 0, 16) {
          compute_2[(((blockIdx.x*784) + (i1.inner*49)) + threadIdx.x)] = max(((float32*)compute_3[i1.inner] + (float32*)bias_2[((blockIdx.x*16) + i1.inner)]), 0f32)
        }
      }
    }





Check correctness and evaluate performance
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We build the binary and check its correctness and performance.


.. code-block:: default


    func = tvm.build(sch, args, target)

    # Check correctness
    data_np = np.random.uniform(size=(N, CI, H, W)).astype(np.float32)
    weight_np = np.random.uniform(size=(CO, CI, KH, KW)).astype(np.float32)
    bias_np = np.random.uniform(size=(1, CO, 1, 1)).astype(np.float32)
    conv_np = conv2d_nchw_python(data_np, weight_np, strides, padding)
    out_np = np.maximum(conv_np + bias_np, 0.0)

    ctx = tvm.gpu()
    data_tvm = tvm.nd.array(data_np, ctx=ctx)
    weight_tvm = tvm.nd.array(weight_np, ctx=ctx)
    bias_tvm = tvm.nd.array(bias_np, ctx=ctx)
    out_tvm = tvm.nd.empty(out_np.shape, ctx=ctx)
    func(data_tvm, weight_tvm, bias_tvm, out_tvm)

    # Check results
    np.testing.assert_allclose(out_np, out_tvm.asnumpy(), rtol=1e-3)

    # Evaluate execution time
    evaluator = func.time_evaluator(func.entry_name, ctx, min_repeat_ms=500)
    print(
        "Execution time of this operator: %.3f ms"
        % (np.median(evaluator(data_tvm, weight_tvm, bias_tvm, out_tvm).results) * 1000)
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Execution time of this operator: 0.318 ms



Using the record file
^^^^^^^^^^^^^^^^^^^^^
During the search, all measurement records are dumped into the record
file "conv2d.json". The measurement records can be used to re-apply search results,
resume the search, and perform other analyses.

Here is an example where we load the best schedule from a file,
print the equivalent python schedule API and CUDA source code.
They can be used for debugging and learning the behavior of the auto-scheduler.


.. code-block:: default


    print("Equivalent python schedule:")
    print(task.print_best(log_file, print_mode="schedule"))

    print("CUDA source code:")
    print(task.print_best(log_file, print_mode="cuda"))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Equivalent python schedule:
    pad_temp_i0, pad_temp_i1, pad_temp_i2, pad_temp_i3 = tuple(pad_temp.op.axis) + tuple(pad_temp.op.reduce_axis)
    compute_nn, compute_ff, compute_yy, compute_xx, compute_rc, compute_ry, compute_rx = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    T_add_ax0, T_add_ax1, T_add_ax2, T_add_ax3 = tuple(T_add.op.axis) + tuple(T_add.op.reduce_axis)
    compute_i0, compute_i1, compute_i2, compute_i3 = tuple(compute.op.axis) + tuple(compute.op.reduce_axis)
    s[T_add].compute_inline()
    compute_nn_o_i, compute_nn_i = s[compute].split(compute_nn, factor=1)
    compute_nn_o_o_i, compute_nn_o_i = s[compute].split(compute_nn_o_i, factor=1)
    compute_nn_o_o_o_i, compute_nn_o_o_i = s[compute].split(compute_nn_o_o_i, factor=1)
    compute_nn_o_o_o_o, compute_nn_o_o_o_i = s[compute].split(compute_nn_o_o_o_i, factor=1)
    compute_ff_o_i, compute_ff_i = s[compute].split(compute_ff, factor=1)
    compute_ff_o_o_i, compute_ff_o_i = s[compute].split(compute_ff_o_i, factor=16)
    compute_ff_o_o_o_i, compute_ff_o_o_i = s[compute].split(compute_ff_o_o_i, factor=1)
    compute_ff_o_o_o_o, compute_ff_o_o_o_i = s[compute].split(compute_ff_o_o_o_i, factor=1)
    compute_yy_o_i, compute_yy_i = s[compute].split(compute_yy, factor=1)
    compute_yy_o_o_i, compute_yy_o_i = s[compute].split(compute_yy_o_i, factor=1)
    compute_yy_o_o_o_i, compute_yy_o_o_i = s[compute].split(compute_yy_o_o_i, factor=7)
    compute_yy_o_o_o_o, compute_yy_o_o_o_i = s[compute].split(compute_yy_o_o_o_i, factor=1)
    compute_xx_o_i, compute_xx_i = s[compute].split(compute_xx, factor=1)
    compute_xx_o_o_i, compute_xx_o_i = s[compute].split(compute_xx_o_i, factor=1)
    compute_xx_o_o_o_i, compute_xx_o_o_i = s[compute].split(compute_xx_o_o_i, factor=7)
    compute_xx_o_o_o_o, compute_xx_o_o_o_i = s[compute].split(compute_xx_o_o_o_i, factor=1)
    compute_rc_o_i, compute_rc_i = s[compute].split(compute_rc, factor=2)
    compute_rc_o_o, compute_rc_o_i = s[compute].split(compute_rc_o_i, factor=8)
    compute_ry_o_i, compute_ry_i = s[compute].split(compute_ry, factor=1)
    compute_ry_o_o, compute_ry_o_i = s[compute].split(compute_ry_o_i, factor=3)
    compute_rx_o_i, compute_rx_i = s[compute].split(compute_rx, factor=3)
    compute_rx_o_o, compute_rx_o_i = s[compute].split(compute_rx_o_i, factor=1)
    s[compute].reorder(compute_nn_o_o_o_o, compute_ff_o_o_o_o, compute_yy_o_o_o_o, compute_xx_o_o_o_o, compute_nn_o_o_o_i, compute_ff_o_o_o_i, compute_yy_o_o_o_i, compute_xx_o_o_o_i, compute_nn_o_o_i, compute_ff_o_o_i, compute_yy_o_o_i, compute_xx_o_o_i, compute_rc_o_o, compute_ry_o_o, compute_rx_o_o, compute_rc_o_i, compute_ry_o_i, compute_rx_o_i, compute_nn_o_i, compute_ff_o_i, compute_yy_o_i, compute_xx_o_i, compute_rc_i, compute_ry_i, compute_rx_i, compute_nn_i, compute_ff_i, compute_yy_i, compute_xx_i)
    compute_i0_o_i, compute_i0_i = s[compute].split(compute_i0, factor=1)
    compute_i0_o_o_i, compute_i0_o_i = s[compute].split(compute_i0_o_i, factor=1)
    compute_i0_o_o_o, compute_i0_o_o_i = s[compute].split(compute_i0_o_o_i, factor=1)
    compute_i1_o_i, compute_i1_i = s[compute].split(compute_i1, factor=16)
    compute_i1_o_o_i, compute_i1_o_i = s[compute].split(compute_i1_o_i, factor=1)
    compute_i1_o_o_o, compute_i1_o_o_i = s[compute].split(compute_i1_o_o_i, factor=1)
    compute_i2_o_i, compute_i2_i = s[compute].split(compute_i2, factor=1)
    compute_i2_o_o_i, compute_i2_o_i = s[compute].split(compute_i2_o_i, factor=7)
    compute_i2_o_o_o, compute_i2_o_o_i = s[compute].split(compute_i2_o_o_i, factor=1)
    compute_i3_o_i, compute_i3_i = s[compute].split(compute_i3, factor=1)
    compute_i3_o_o_i, compute_i3_o_i = s[compute].split(compute_i3_o_i, factor=7)
    compute_i3_o_o_o, compute_i3_o_o_i = s[compute].split(compute_i3_o_o_i, factor=1)
    s[compute].reorder(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o, compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i, compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i, compute_i0_i, compute_i1_i, compute_i2_i, compute_i3_i)
    s[compute].compute_at(s[compute], compute_i3_o_i)
    kernel_shared = s.cache_read(kernel, "shared", [compute])
    kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3 = tuple(kernel_shared.op.axis)
    s[kernel_shared].compute_at(s[compute], compute_rx_o_o)
    pad_temp_shared = s.cache_read(pad_temp, "shared", [compute])
    pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3 = tuple(pad_temp_shared.op.axis)
    s[pad_temp_shared].compute_at(s[compute], compute_rx_o_o)
    s[pad_temp].compute_inline()
    compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused = s[compute].fuse(compute_i0_o_o_o, compute_i1_o_o_o, compute_i2_o_o_o, compute_i3_o_o_o)
    s[compute].bind(compute_i0_o_o_o_i1_o_o_o_fused_i2_o_o_o_fused_i3_o_o_o_fused, te.thread_axis("blockIdx.x"))
    compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused = s[compute].fuse(compute_i0_o_o_i, compute_i1_o_o_i, compute_i2_o_o_i, compute_i3_o_o_i)
    s[compute].bind(compute_i0_o_o_i_i1_o_o_i_fused_i2_o_o_i_fused_i3_o_o_i_fused, te.thread_axis("vthread"))
    compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused = s[compute].fuse(compute_i0_o_i, compute_i1_o_i, compute_i2_o_i, compute_i3_o_i)
    s[compute].bind(compute_i0_o_i_i1_o_i_fused_i2_o_i_fused_i3_o_i_fused, te.thread_axis("threadIdx.x"))
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[kernel_shared].fuse(kernel_shared_ax0, kernel_shared_ax1, kernel_shared_ax2, kernel_shared_ax3)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[kernel_shared].vectorize(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[kernel_shared].split(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[kernel_shared].bind(kernel_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused = s[pad_temp_shared].fuse(pad_temp_shared_ax0, pad_temp_shared_ax1, pad_temp_shared_ax2, pad_temp_shared_ax3)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused, factor=1)
    s[pad_temp_shared].vectorize(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_i)
    pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_o, pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i = s[pad_temp_shared].split(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o, factor=49)
    s[pad_temp_shared].bind(pad_temp_shared_ax0_ax1_fused_ax2_fused_ax3_fused_o_i, te.thread_axis("threadIdx.x"))
    s[compute].pragma(compute_nn_o_o_o_o, "auto_unroll_max_step", 1024)
    s[compute].pragma(compute_nn_o_o_o_o, "unroll_explicit", True)

    CUDA source code:
    extern "C" __global__ void default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {
      float compute1[16];
      __shared__ float pad_temp_shared[1296];
      __shared__ float kernel_shared[2304];
      compute1[(0)] = 0.000000e+00f;
      compute1[(1)] = 0.000000e+00f;
      compute1[(2)] = 0.000000e+00f;
      compute1[(3)] = 0.000000e+00f;
      compute1[(4)] = 0.000000e+00f;
      compute1[(5)] = 0.000000e+00f;
      compute1[(6)] = 0.000000e+00f;
      compute1[(7)] = 0.000000e+00f;
      compute1[(8)] = 0.000000e+00f;
      compute1[(9)] = 0.000000e+00f;
      compute1[(10)] = 0.000000e+00f;
      compute1[(11)] = 0.000000e+00f;
      compute1[(12)] = 0.000000e+00f;
      compute1[(13)] = 0.000000e+00f;
      compute1[(14)] = 0.000000e+00f;
      compute1[(15)] = 0.000000e+00f;
      for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
        __syncthreads();
        pad_temp_shared[(((int)threadIdx.x))] = ((((9 <= ((int)threadIdx.x)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[(((((rc_outer_outer * 784) + ((((int)threadIdx.x) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 49))] = (((((9 <= ((((int)threadIdx.x) + 49) % 81)) && (((((int)threadIdx.x) + 49) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 49) / 81) * 49)) + ((((((int)threadIdx.x) + 49) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 98))] = (((1 <= ((((int)threadIdx.x) + 8) % 9)) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 98) / 81) * 49)) + (((((int)threadIdx.x) + 17) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 147))] = (((((9 <= ((((int)threadIdx.x) + 66) % 81)) && (((((int)threadIdx.x) + 66) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 147) / 81) * 49)) + ((((((int)threadIdx.x) + 66) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 196))] = (((((9 <= ((((int)threadIdx.x) + 34) % 81)) && (((((int)threadIdx.x) + 34) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 196) / 81) * 49)) + ((((((int)threadIdx.x) + 34) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 245))] = ((((7 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 245) / 81) * 49)) + (((((int)threadIdx.x) + 2) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 294))] = (((((9 <= ((((int)threadIdx.x) + 51) % 81)) && (((((int)threadIdx.x) + 51) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 294) / 81) * 49)) + ((((((int)threadIdx.x) + 51) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 343))] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 343) / 81) * 49)) + (((((int)threadIdx.x) + 19) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 392))] = (((((9 <= ((((int)threadIdx.x) + 68) % 81)) && (((((int)threadIdx.x) + 68) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 392) / 81) * 49)) + ((((((int)threadIdx.x) + 68) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 441))] = (((((9 <= ((((int)threadIdx.x) + 36) % 81)) && (((((int)threadIdx.x) + 36) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 441) / 81) * 49)) + ((((((int)threadIdx.x) + 36) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 490))] = ((((5 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 490) / 81) * 49)) + (((((int)threadIdx.x) + 4) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 539))] = (((((9 <= ((((int)threadIdx.x) + 53) % 81)) && (((((int)threadIdx.x) + 53) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 539) / 81) * 49)) + ((((((int)threadIdx.x) + 53) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 588))] = (((1 <= ((((int)threadIdx.x) + 3) % 9)) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 588) / 81) * 49)) + (((((int)threadIdx.x) + 21) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 637))] = (((((9 <= ((((int)threadIdx.x) + 70) % 81)) && (((((int)threadIdx.x) + 70) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 637) / 81) * 49)) + ((((((int)threadIdx.x) + 70) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 686))] = (((((9 <= ((((int)threadIdx.x) + 38) % 81)) && (((((int)threadIdx.x) + 38) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 686) / 81) * 49)) + ((((((int)threadIdx.x) + 38) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 735))] = ((((3 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 735) / 81) * 49)) + (((((int)threadIdx.x) + 6) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 784))] = (((((9 <= ((((int)threadIdx.x) + 55) % 81)) && (((((int)threadIdx.x) + 55) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 1) % 9))) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 784) / 81) * 49)) + ((((((int)threadIdx.x) + 55) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 833))] = (((1 <= ((((int)threadIdx.x) + 5) % 9)) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 833) / 81) * 49)) + (((((int)threadIdx.x) + 23) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 882))] = (((((9 <= ((((int)threadIdx.x) + 72) % 81)) && (((((int)threadIdx.x) + 72) % 81) < 72)) && (1 <= (((int)threadIdx.x) % 9))) && ((((int)threadIdx.x) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 882) / 81) * 49)) + ((((((int)threadIdx.x) + 72) % 81) / 9) * 7)) + (((int)threadIdx.x) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 931))] = (((((9 <= ((((int)threadIdx.x) + 40) % 81)) && (((((int)threadIdx.x) + 40) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 4) % 9))) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 931) / 81) * 49)) + ((((((int)threadIdx.x) + 40) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 4) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 980))] = ((((1 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) + 8) % 9))) && (((((int)threadIdx.x) + 8) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 980) / 81) * 49)) + (((((int)threadIdx.x) + 8) / 9) * 7)) + ((((int)threadIdx.x) + 8) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 1029))] = (((((9 <= ((((int)threadIdx.x) + 57) % 81)) && (((((int)threadIdx.x) + 57) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 3) % 9))) && (((((int)threadIdx.x) + 3) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1029) / 81) * 49)) + ((((((int)threadIdx.x) + 57) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 3) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 1078))] = ((((((int)threadIdx.x) < 47) && (1 <= ((((int)threadIdx.x) + 7) % 9))) && (((((int)threadIdx.x) + 7) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1078) / 81) * 49)) + (((((int)threadIdx.x) + 25) / 9) * 7)) + ((((int)threadIdx.x) + 7) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 1127))] = (((((9 <= ((((int)threadIdx.x) + 74) % 81)) && (((((int)threadIdx.x) + 74) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 2) % 9))) && (((((int)threadIdx.x) + 2) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1127) / 81) * 49)) + ((((((int)threadIdx.x) + 74) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 2) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 1176))] = (((((9 <= ((((int)threadIdx.x) + 42) % 81)) && (((((int)threadIdx.x) + 42) % 81) < 72)) && (1 <= ((((int)threadIdx.x) + 6) % 9))) && (((((int)threadIdx.x) + 6) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1176) / 81) * 49)) + ((((((int)threadIdx.x) + 42) % 81) / 9) * 7)) + ((((int)threadIdx.x) + 6) % 9)) - 8))] : 0.000000e+00f);
        pad_temp_shared[((((int)threadIdx.x) + 1225))] = (((1 <= ((((int)threadIdx.x) + 1) % 9)) && (((((int)threadIdx.x) + 1) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1225) / 81) * 49)) + (((((int)threadIdx.x) + 10) / 9) * 7)) + ((((int)threadIdx.x) + 1) % 9)) - 8))] : 0.000000e+00f);
        if (((int)threadIdx.x) < 22) {
          pad_temp_shared[((((int)threadIdx.x) + 1274))] = ((((((int)threadIdx.x) < 13) && (1 <= ((((int)threadIdx.x) + 5) % 9))) && (((((int)threadIdx.x) + 5) % 9) < 8)) ? data[((((((rc_outer_outer * 784) + (((((int)threadIdx.x) + 1274) / 81) * 49)) + (((((int)threadIdx.x) + 59) / 9) * 7)) + ((((int)threadIdx.x) + 5) % 9)) - 8))] : 0.000000e+00f);
        }
        kernel_shared[(((int)threadIdx.x))] = kernel[((((((int)blockIdx.x) * 73728) + (rc_outer_outer * 144)) + ((int)threadIdx.x)))];
        kernel_shared[((((int)threadIdx.x) + 49))] = kernel[(((((((int)blockIdx.x) * 73728) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 49))];
        kernel_shared[((((int)threadIdx.x) + 98))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 98) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 98) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 147))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 147) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 3)))];
        kernel_shared[((((int)threadIdx.x) + 196))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 196) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 52)))];
        kernel_shared[((((int)threadIdx.x) + 245))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 245) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 101) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 294))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 294) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 6)))];
        kernel_shared[((((int)threadIdx.x) + 343))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 343) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 55)))];
        kernel_shared[((((int)threadIdx.x) + 392))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 392) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 104) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 441))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 441) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 9)))];
        kernel_shared[((((int)threadIdx.x) + 490))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 490) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 58)))];
        kernel_shared[((((int)threadIdx.x) + 539))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 539) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 107) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 588))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 588) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 12)))];
        kernel_shared[((((int)threadIdx.x) + 637))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 637) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 61)))];
        kernel_shared[((((int)threadIdx.x) + 686))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 686) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 110) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 735))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 735) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 15)))];
        kernel_shared[((((int)threadIdx.x) + 784))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 784) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 64)))];
        kernel_shared[((((int)threadIdx.x) + 833))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 833) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 113) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 882))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 882) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 18)))];
        kernel_shared[((((int)threadIdx.x) + 931))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 931) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 67)))];
        kernel_shared[((((int)threadIdx.x) + 980))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 980) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 116) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1029))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1029) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 21)))];
        kernel_shared[((((int)threadIdx.x) + 1078))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1078) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 70)))];
        kernel_shared[((((int)threadIdx.x) + 1127))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1127) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 119) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1176))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1176) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 24)))];
        kernel_shared[((((int)threadIdx.x) + 1225))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1225) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 73)))];
        kernel_shared[((((int)threadIdx.x) + 1274))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1274) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 122) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1323))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1323) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 27)))];
        kernel_shared[((((int)threadIdx.x) + 1372))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1372) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 76)))];
        kernel_shared[((((int)threadIdx.x) + 1421))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1421) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 125) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1470))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1470) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 30)))];
        kernel_shared[((((int)threadIdx.x) + 1519))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1519) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 79)))];
        kernel_shared[((((int)threadIdx.x) + 1568))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1568) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 128) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1617))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1617) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 33)))];
        kernel_shared[((((int)threadIdx.x) + 1666))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1666) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 82)))];
        kernel_shared[((((int)threadIdx.x) + 1715))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1715) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 131) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1764))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1764) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 36)))];
        kernel_shared[((((int)threadIdx.x) + 1813))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1813) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 85)))];
        kernel_shared[((((int)threadIdx.x) + 1862))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1862) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 134) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 1911))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1911) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 39)))];
        kernel_shared[((((int)threadIdx.x) + 1960))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 1960) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 88)))];
        kernel_shared[((((int)threadIdx.x) + 2009))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2009) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 137) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 2058))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2058) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 42)))];
        kernel_shared[((((int)threadIdx.x) + 2107))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2107) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 91)))];
        kernel_shared[((((int)threadIdx.x) + 2156))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2156) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((int)threadIdx.x) + 140) % 144)))];
        kernel_shared[((((int)threadIdx.x) + 2205))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2205) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 45)))];
        kernel_shared[((((int)threadIdx.x) + 2254))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2254) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 94)))];
        if (((int)threadIdx.x) < 1) {
          kernel_shared[((((int)threadIdx.x) + 2303))] = kernel[(((((((int)blockIdx.x) * 73728) + (((((int)threadIdx.x) + 2303) / 144) * 4608)) + (rc_outer_outer * 144)) + (((int)threadIdx.x) + 143)))];
        }
        __syncthreads();
        for (int rc_outer_inner = 0; rc_outer_inner < 8; ++rc_outer_inner) {
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[((rc_outer_inner * 18))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 2))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 9))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 10))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 11))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 144))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 145))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 146))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 153))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 154))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 155))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 288))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 289))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 290))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 297))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 298))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 299))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 432))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 433))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 434))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 441))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 442))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 443))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 576))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 577))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 578))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 585))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 586))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 587))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 720))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 721))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 722))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 729))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 730))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 731))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 864))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 865))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 866))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 873))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 874))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 875))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1008))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1009))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1010))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1017))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1018))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1019))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1152))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1153))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1154))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1161))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1162))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1163))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1296))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1297))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1298))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1305))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1306))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1307))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1440))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1441))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1442))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1449))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1450))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1451))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1584))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1585))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1586))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1593))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1594))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1595))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1728))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1729))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1730))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1737))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1738))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1739))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 1872))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 1873))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 1874))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 1881))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 1882))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 1883))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 2016))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 2017))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 2018))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 2025))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 2026))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 2027))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)))] * kernel_shared[(((rc_outer_inner * 18) + 2160))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 1))] * kernel_shared[(((rc_outer_inner * 18) + 2161))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 2))] * kernel_shared[(((rc_outer_inner * 18) + 2162))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 81))] * kernel_shared[(((rc_outer_inner * 18) + 2169))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 82))] * kernel_shared[(((rc_outer_inner * 18) + 2170))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 83))] * kernel_shared[(((rc_outer_inner * 18) + 2171))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 3))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 4))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 5))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 12))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 13))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 14))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 147))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 148))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 149))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 156))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 157))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 158))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 291))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 292))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 293))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 300))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 301))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 302))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 435))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 436))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 437))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 444))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 445))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 446))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 579))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 580))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 581))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 588))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 589))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 590))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 723))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 724))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 725))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 732))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 733))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 734))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 867))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 868))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 869))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 876))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 877))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 878))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1011))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1012))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1013))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1020))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1021))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1022))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1155))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1156))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1157))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1164))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1165))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1166))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1299))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1300))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1301))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1308))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1309))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1310))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1443))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1444))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1445))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1452))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1453))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1454))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1587))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1588))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1589))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1596))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1597))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1598))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1731))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1732))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1733))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1740))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1741))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1742))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 1875))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 1876))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 1877))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 1884))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 1885))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 1886))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 2019))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 2020))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 2021))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 2028))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 2029))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 2030))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 9))] * kernel_shared[(((rc_outer_inner * 18) + 2163))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 10))] * kernel_shared[(((rc_outer_inner * 18) + 2164))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 11))] * kernel_shared[(((rc_outer_inner * 18) + 2165))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 90))] * kernel_shared[(((rc_outer_inner * 18) + 2172))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 91))] * kernel_shared[(((rc_outer_inner * 18) + 2173))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 92))] * kernel_shared[(((rc_outer_inner * 18) + 2174))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 6))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 7))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 8))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 15))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 16))]));
          compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 17))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 150))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 151))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 152))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 159))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 160))]));
          compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 161))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 294))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 295))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 296))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 303))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 304))]));
          compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 305))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 438))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 439))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 440))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 447))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 448))]));
          compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 449))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 582))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 583))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 584))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 591))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 592))]));
          compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 593))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 726))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 727))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 728))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 735))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 736))]));
          compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 737))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 870))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 871))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 872))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 879))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 880))]));
          compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 881))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1014))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1015))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1016))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1023))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1024))]));
          compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1025))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1158))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1159))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1160))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1167))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1168))]));
          compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1169))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1302))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1303))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1304))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1311))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1312))]));
          compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1313))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1446))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1447))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1448))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1455))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1456))]));
          compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1457))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1590))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1591))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1592))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1599))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1600))]));
          compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1601))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1734))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1735))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1736))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1743))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1744))]));
          compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1745))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 1878))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 1879))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 1880))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 1887))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 1888))]));
          compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 1889))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 2022))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 2023))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 2024))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 2031))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 2032))]));
          compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 2033))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 18))] * kernel_shared[(((rc_outer_inner * 18) + 2166))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 19))] * kernel_shared[(((rc_outer_inner * 18) + 2167))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 20))] * kernel_shared[(((rc_outer_inner * 18) + 2168))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 99))] * kernel_shared[(((rc_outer_inner * 18) + 2175))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 100))] * kernel_shared[(((rc_outer_inner * 18) + 2176))]));
          compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((rc_outer_inner * 162) + ((((int)threadIdx.x) / 7) * 9)) + (((int)threadIdx.x) % 7)) + 101))] * kernel_shared[(((rc_outer_inner * 18) + 2177))]));
        }
      }
      for (int i1_inner = 0; i1_inner < 16; ++i1_inner) {
        compute[((((((int)blockIdx.x) * 784) + (i1_inner * 49)) + ((int)threadIdx.x)))] = max((compute1[(i1_inner)] + bias[(((((int)blockIdx.x) * 16) + i1_inner))]), 0.000000e+00f);
      }
    }





A more complicated example is to resume the search.
In this case, we need to create the search policy and cost model by ourselves
and resume the status of search policy and cost model with the log file.
In the example below we resume the status and do more 5 trials.


.. code-block:: default



    def resume_search(task, log_file):
        print("Resume search:")
        cost_model = auto_scheduler.XGBModel()
        cost_model.update_from_file(log_file)
        search_policy = auto_scheduler.SketchPolicy(
            task, cost_model, init_search_callbacks=[auto_scheduler.PreloadMeasuredStates(log_file)]
        )
        measure_ctx = auto_scheduler.LocalRPCMeasureContext(min_repeat_ms=300)
        tune_option = auto_scheduler.TuningOptions(
            num_measure_trials=5,
            runner=measure_ctx.runner,
            measure_callbacks=[auto_scheduler.RecordToFile(log_file)],
        )
        task.tune(tune_option, search_policy=search_policy)

        # Kill the measurement process
        del measure_ctx


    resume_search(task, log_file)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Resume search:
    Get devices for measurement successfully!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  36.369 seconds)


.. _sphx_glr_download_tutorials_auto_scheduler_tune_conv2d_layer_cuda.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tune_conv2d_layer_cuda.py <tune_conv2d_layer_cuda.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tune_conv2d_layer_cuda.ipynb <tune_conv2d_layer_cuda.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
