(function() {var implementors = {};
implementors["tvm"] = [{"text":"impl UnwindSafe for ConstIntBoundNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstIntBound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Attrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Diagnostic","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticBuilder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticRendererNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticRenderer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticContextNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DiagnosticLevel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseExprNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseExpr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimExprNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimExpr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalVarNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFuncNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFunc","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IRModuleNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IRModule","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Op","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Id","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstantNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TupleNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Tuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VarNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Var","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CallNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LetNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IfNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for If","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TupleGetItemNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TupleGetItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefCreateNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefCreate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefReadNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefRead","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefWriteNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefWrite","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ConstructorNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Constructor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pattern","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternWildcardNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternWildcard","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternVarNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternConstructorNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternConstructor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternTupleNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PatternTuple","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ClauseNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Clause","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MatchNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Conv2DAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Conv2DAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BiasAddAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BiasAddAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DenseAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DenseAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalPool2DAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalPool2DAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxPool2DAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxPool2DAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoftmaxAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SoftmaxAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BatchNormAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BatchNormAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpandDimsAttrsNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpandDimsAttrs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Source","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceMapNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceMap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceNameNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SourceName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpanNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntImmNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IntImm","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VarNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Var","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AddNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MulNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mul","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DivNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloorDivNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloorDiv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloorModNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FloorMod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Min","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Max","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CastNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cast","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RampNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ramp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Select","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EqNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LtNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GtNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AndNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for And","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OrNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Not","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LetNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrimType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PointerTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PointerType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeVarNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalTypeVarNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlobalTypeVar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TupleTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TupleType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeConstraintNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeConstraint","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuncTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuncType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncompleteTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IncompleteType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayRefTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RefType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseTensorTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseTensorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TensorTypeNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TensorType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeKind","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GraphRt","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassInfoNode","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PassInfo","synthetic":true,"types":[]}];
implementors["tvm_graph_rt"] = [{"text":"impl&lt;'a&gt; !UnwindSafe for Tensor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Graph","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Node","synthetic":true,"types":[]},{"text":"impl&lt;'m, 't&gt; !UnwindSafe for GraphExecutor&lt;'m, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for DsoModule&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SystemLibModule","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for Storage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionNotFound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InvalidPointer","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for GraphFormatError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArrayError","synthetic":true,"types":[]}];
implementors["tvm_rt"] = [{"text":"impl UnwindSafe for Object","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ObjectPtr&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ObjectRef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StringObj","synthetic":true,"types":[]},{"text":"impl UnwindSafe for String","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Array&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionNotFoundError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeMismatchError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NDArrayError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; UnwindSafe for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Module","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NDArrayContainer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NDArray","synthetic":true,"types":[]}];
implementors["tvm_sys"] = [{"text":"impl UnwindSafe for DLContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DLDataType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DLTensor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DLManagedTensor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TVMByteArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TVMParallelGroupEnv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TVMValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ByteArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsupportedDeviceError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeviceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseDataTypeError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValueDowncastError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FuncCallError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for ArgValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RetValue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnsupportedDeviceError","synthetic":true,"types":[]}];
implementors["tyck"] = [{"text":"impl UnwindSafe for Opt","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()