(function() {var implementors = {};
implementors["tvm"] = [{"text":"impl Unpin for ConstIntBoundNode","synthetic":true,"types":[]},{"text":"impl Unpin for ConstIntBound","synthetic":true,"types":[]},{"text":"impl Unpin for BaseAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for Attrs","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticNode","synthetic":true,"types":[]},{"text":"impl Unpin for Diagnostic","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticRendererNode","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticRenderer","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticContextNode","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticContext","synthetic":true,"types":[]},{"text":"impl Unpin for DiagnosticLevel","synthetic":true,"types":[]},{"text":"impl Unpin for BaseExprNode","synthetic":true,"types":[]},{"text":"impl Unpin for BaseExpr","synthetic":true,"types":[]},{"text":"impl Unpin for PrimExprNode","synthetic":true,"types":[]},{"text":"impl Unpin for PrimExpr","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalVarNode","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalVar","synthetic":true,"types":[]},{"text":"impl Unpin for BaseFuncNode","synthetic":true,"types":[]},{"text":"impl Unpin for BaseFunc","synthetic":true,"types":[]},{"text":"impl Unpin for IRModuleNode","synthetic":true,"types":[]},{"text":"impl Unpin for IRModule","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for OpNode","synthetic":true,"types":[]},{"text":"impl Unpin for Op","synthetic":true,"types":[]},{"text":"impl Unpin for ExprNode","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for IdNode","synthetic":true,"types":[]},{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl Unpin for ConstantNode","synthetic":true,"types":[]},{"text":"impl Unpin for Constant","synthetic":true,"types":[]},{"text":"impl Unpin for TupleNode","synthetic":true,"types":[]},{"text":"impl Unpin for Tuple","synthetic":true,"types":[]},{"text":"impl Unpin for VarNode","synthetic":true,"types":[]},{"text":"impl Unpin for Var","synthetic":true,"types":[]},{"text":"impl Unpin for CallNode","synthetic":true,"types":[]},{"text":"impl Unpin for Call","synthetic":true,"types":[]},{"text":"impl Unpin for LetNode","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for IfNode","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for TupleGetItemNode","synthetic":true,"types":[]},{"text":"impl Unpin for TupleGetItem","synthetic":true,"types":[]},{"text":"impl Unpin for RefCreateNode","synthetic":true,"types":[]},{"text":"impl Unpin for RefCreate","synthetic":true,"types":[]},{"text":"impl Unpin for RefReadNode","synthetic":true,"types":[]},{"text":"impl Unpin for RefRead","synthetic":true,"types":[]},{"text":"impl Unpin for RefWriteNode","synthetic":true,"types":[]},{"text":"impl Unpin for RefWrite","synthetic":true,"types":[]},{"text":"impl Unpin for ConstructorNode","synthetic":true,"types":[]},{"text":"impl Unpin for Constructor","synthetic":true,"types":[]},{"text":"impl Unpin for PatternNode","synthetic":true,"types":[]},{"text":"impl Unpin for Pattern","synthetic":true,"types":[]},{"text":"impl Unpin for PatternWildcardNode","synthetic":true,"types":[]},{"text":"impl Unpin for PatternWildcard","synthetic":true,"types":[]},{"text":"impl Unpin for PatternVarNode","synthetic":true,"types":[]},{"text":"impl Unpin for PatternVar","synthetic":true,"types":[]},{"text":"impl Unpin for PatternConstructorNode","synthetic":true,"types":[]},{"text":"impl Unpin for PatternConstructor","synthetic":true,"types":[]},{"text":"impl Unpin for PatternTupleNode","synthetic":true,"types":[]},{"text":"impl Unpin for PatternTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ClauseNode","synthetic":true,"types":[]},{"text":"impl Unpin for Clause","synthetic":true,"types":[]},{"text":"impl Unpin for MatchNode","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionNode","synthetic":true,"types":[]},{"text":"impl Unpin for Function","synthetic":true,"types":[]},{"text":"impl Unpin for Conv2DAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for Conv2DAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for BiasAddAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for BiasAddAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for DenseAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for DenseAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalPool2DAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalPool2DAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for MaxPool2DAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for MaxPool2DAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for SoftmaxAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for SoftmaxAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for BatchNormAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for BatchNormAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for LeakyReluAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for LeakyReluAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for AvgPool2DAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for AvgPool2DAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for UpSamplingAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for UpSamplingAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for ExpandDimsAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for ExpandDimsAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for ConcatenateAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for ConcatenateAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for ReshapeAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for ReshapeAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for SplitAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for SplitAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for TransposeAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for TransposeAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for SqueezeAttrsNode","synthetic":true,"types":[]},{"text":"impl Unpin for SqueezeAttrs","synthetic":true,"types":[]},{"text":"impl Unpin for SourceNode","synthetic":true,"types":[]},{"text":"impl Unpin for Source","synthetic":true,"types":[]},{"text":"impl Unpin for SourceMapNode","synthetic":true,"types":[]},{"text":"impl Unpin for SourceMap","synthetic":true,"types":[]},{"text":"impl Unpin for SourceNameNode","synthetic":true,"types":[]},{"text":"impl Unpin for SourceName","synthetic":true,"types":[]},{"text":"impl Unpin for SpanNode","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for IntImmNode","synthetic":true,"types":[]},{"text":"impl Unpin for IntImm","synthetic":true,"types":[]},{"text":"impl Unpin for VarNode","synthetic":true,"types":[]},{"text":"impl Unpin for Var","synthetic":true,"types":[]},{"text":"impl Unpin for AddNode","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for SubNode","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for MulNode","synthetic":true,"types":[]},{"text":"impl Unpin for Mul","synthetic":true,"types":[]},{"text":"impl Unpin for DivNode","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for ModNode","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for FloorDivNode","synthetic":true,"types":[]},{"text":"impl Unpin for FloorDiv","synthetic":true,"types":[]},{"text":"impl Unpin for FloorModNode","synthetic":true,"types":[]},{"text":"impl Unpin for FloorMod","synthetic":true,"types":[]},{"text":"impl Unpin for MinNode","synthetic":true,"types":[]},{"text":"impl Unpin for Min","synthetic":true,"types":[]},{"text":"impl Unpin for MaxNode","synthetic":true,"types":[]},{"text":"impl Unpin for Max","synthetic":true,"types":[]},{"text":"impl Unpin for CastNode","synthetic":true,"types":[]},{"text":"impl Unpin for Cast","synthetic":true,"types":[]},{"text":"impl Unpin for RampNode","synthetic":true,"types":[]},{"text":"impl Unpin for Ramp","synthetic":true,"types":[]},{"text":"impl Unpin for SelectNode","synthetic":true,"types":[]},{"text":"impl Unpin for Select","synthetic":true,"types":[]},{"text":"impl Unpin for EqNode","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for NeNode","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for LtNode","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for LeNode","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for GtNode","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for GeNode","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for AndNode","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for OrNode","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for NotNode","synthetic":true,"types":[]},{"text":"impl Unpin for Not","synthetic":true,"types":[]},{"text":"impl Unpin for LetNode","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for PrimTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for PrimType","synthetic":true,"types":[]},{"text":"impl Unpin for PointerTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for PointerType","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVarNode","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVar","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalTypeVarNode","synthetic":true,"types":[]},{"text":"impl Unpin for GlobalTypeVar","synthetic":true,"types":[]},{"text":"impl Unpin for TupleTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for TupleType","synthetic":true,"types":[]},{"text":"impl Unpin for TypeConstraintNode","synthetic":true,"types":[]},{"text":"impl Unpin for TypeConstraint","synthetic":true,"types":[]},{"text":"impl Unpin for FuncTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for FuncType","synthetic":true,"types":[]},{"text":"impl Unpin for IncompleteTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for IncompleteType","synthetic":true,"types":[]},{"text":"impl Unpin for RelayRefTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for RefType","synthetic":true,"types":[]},{"text":"impl Unpin for BaseTensorTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for BaseTensorType","synthetic":true,"types":[]},{"text":"impl Unpin for TensorTypeNode","synthetic":true,"types":[]},{"text":"impl Unpin for TensorType","synthetic":true,"types":[]},{"text":"impl Unpin for TypeDataNode","synthetic":true,"types":[]},{"text":"impl Unpin for TypeData","synthetic":true,"types":[]},{"text":"impl Unpin for TypeKind","synthetic":true,"types":[]},{"text":"impl Unpin for GraphRt","synthetic":true,"types":[]},{"text":"impl Unpin for PassInfoNode","synthetic":true,"types":[]},{"text":"impl Unpin for PassInfo","synthetic":true,"types":[]}];
implementors["tvm_graph_rt"] = [{"text":"impl&lt;'a&gt; Unpin for Tensor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Graph","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for Node","synthetic":true,"types":[]},{"text":"impl&lt;'m, 't&gt; Unpin for GraphExecutor&lt;'m, 't&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Unpin for DsoModule&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SystemLibModule","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Storage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionNotFound","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidPointer","synthetic":true,"types":[]},{"text":"impl Unpin for GraphFormatError","synthetic":true,"types":[]},{"text":"impl Unpin for ArrayError","synthetic":true,"types":[]}];
implementors["tvm_rt"] = [{"text":"impl Unpin for Object","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ObjectPtr&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ObjectRef","synthetic":true,"types":[]},{"text":"impl Unpin for StringObj","synthetic":true,"types":[]},{"text":"impl Unpin for String","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Array&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionNotFoundError","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMismatchError","synthetic":true,"types":[]},{"text":"impl Unpin for NDArrayError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Function","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Module","synthetic":true,"types":[]},{"text":"impl Unpin for NDArrayContainer","synthetic":true,"types":[]},{"text":"impl Unpin for NDArray","synthetic":true,"types":[]}];
implementors["tvm_sys"] = [{"text":"impl Unpin for DLContext","synthetic":true,"types":[]},{"text":"impl Unpin for DLDataType","synthetic":true,"types":[]},{"text":"impl Unpin for DLTensor","synthetic":true,"types":[]},{"text":"impl Unpin for DLManagedTensor","synthetic":true,"types":[]},{"text":"impl Unpin for TVMByteArray","synthetic":true,"types":[]},{"text":"impl Unpin for TVMParallelGroupEnv","synthetic":true,"types":[]},{"text":"impl Unpin for TVMValue","synthetic":true,"types":[]},{"text":"impl Unpin for ByteArray","synthetic":true,"types":[]},{"text":"impl Unpin for Context","synthetic":true,"types":[]},{"text":"impl Unpin for UnsupportedDeviceError","synthetic":true,"types":[]},{"text":"impl Unpin for DeviceType","synthetic":true,"types":[]},{"text":"impl Unpin for DataType","synthetic":true,"types":[]},{"text":"impl Unpin for ParseDataTypeError","synthetic":true,"types":[]},{"text":"impl Unpin for ValueDowncastError","synthetic":true,"types":[]},{"text":"impl Unpin for FuncCallError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ArgValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for RetValue","synthetic":true,"types":[]},{"text":"impl Unpin for UnsupportedDeviceError","synthetic":true,"types":[]}];
implementors["tyck"] = [{"text":"impl Unpin for Opt","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()