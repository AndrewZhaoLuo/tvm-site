var searchIndex = JSON.parse('{\
"array":{"doc":"","i":[[5,"main","array","",null,[[]]]],"p":[]},\
"basics":{"doc":"","i":[[5,"main","basics","",null,[[]]]],"p":[]},\
"compiler_ext":{"doc":"","i":[[5,"tvm_export","compiler_ext","",null,[[],[["result",4],["error",4]]]]],"p":[]},\
"error":{"doc":"","i":[[5,"main","error","",null,[[]]]],"p":[]},\
"float":{"doc":"","i":[[5,"main","float","",null,[[]]]],"p":[]},\
"int":{"doc":"","i":[[5,"main","int","",null,[[]]]],"p":[]},\
"resnet":{"doc":"","i":[[5,"main","resnet","",null,[[],["result",6]]]],"p":[]},\
"string":{"doc":"","i":[[5,"main","string","",null,[[]]]],"p":[]},\
"test_rt_nn":{"doc":"","i":[[5,"main","test_rt_nn","",null,[[]]],[17,"BATCH_SIZE","","",null,null],[17,"IN_DIM","","",null,null]],"p":[]},\
"test_rt_tvm_basic":{"doc":"","i":[[5,"main","test_rt_tvm_basic","",null,[[]]],[0,"tvm_mod","","",null,null],[5,"__tvm_module_startup","test_rt_tvm_basic::tvm_mod","",null,[[],[["funccallerror",3],["retvalue",4],["result",4]]]],[5,"__tvm_main__","","",null,[[],[["funccallerror",3],["retvalue",4],["result",4]]]],[5,"__tvm_module_ctx","","",null,[[],[["funccallerror",3],["retvalue",4],["result",4]]]],[5,"default_function","","",null,[[],[["funccallerror",3],["retvalue",4],["result",4]]]],[0,"ext","","",null,null],[5,"__tvm_module_startup","test_rt_tvm_basic::tvm_mod::ext","",null,null],[5,"__tvm_main__","","",null,null],[5,"__tvm_module_ctx","","",null,null],[5,"default_function","","",null,null]],"p":[]},\
"test_rt_tvm_dso":{"doc":"","i":[[5,"main","test_rt_tvm_dso","",null,[[]]]],"p":[]},\
"test_rt_wasm32":{"doc":"","i":[[5,"__get_tvm_module_ctx","test_rt_wasm32","",null,[[]]],[5,"main","","",null,[[]]],[7,"__tvm_module_ctx","","",null,null]],"p":[]},\
"tvm":{"doc":"TVM is a compiler stack for deep learning systems.","i":[[3,"FunctionNotFoundError","tvm","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[13,"DiagnosticError","","",3,null],[13,"Raw","","",3,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[3,"Module","","Wrapper around TVM module handle which contains an entry…",null,null],[3,"NDArray","","",null,null],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[3,"DataType","","",null,null],[4,"DeviceType","","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[0,"context","","",null,null],[5,"get_device_attr","tvm::context","",null,[[],[["result",4],["error",4]]]],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[4,"DeviceType","","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[3,"UnsupportedDeviceError","","",null,null],[0,"errors","tvm","",null,null],[3,"FunctionNotFoundError","tvm::errors","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::errors::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm::errors","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[13,"DiagnosticError","","",3,null],[13,"Raw","","",3,null],[0,"function","tvm","This module provides an idiomatic Rust API for creating…",null,null],[6,"Result","tvm::function","",null,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[5,"register","","Registers a Rust function with an arbitrary type signature…",null,[[],[["result",4],["error",4]]]],[5,"register_override","","Register a function with explicit control over whether to…",null,[[],[["result",4],["error",4]]]],[5,"register_untyped","","",null,[[],[["result",4],["error",4]]]],[8,"ToFunction","","",null,null],[16,"Handle","","",6,null],[10,"into_raw","","",6,[[]]],[10,"call","","",6,[[["vec",3],["argvalue",4]],[["retvalue",4],["result",4],["error",4]]]],[10,"drop","","",6,[[]]],[11,"to_function","","",6,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",6,[[]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",6,[[]]],[8,"Typed","","A trait representing whether the function arguments and…",null,null],[10,"args","","",7,[[["vec",3],["argvalue",4]],[["result",4],["error",4]]]],[10,"ret","","",7,[[],[["retvalue",4],["result",4],["error",4]]]],[0,"ffi","","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm::function::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",8,null],[12,"device_id","","\\\\brief The device index",8,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",9,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",9,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",9,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",10,null],[12,"ctx","","\\\\brief The device context of the tensor",10,null],[12,"ndim","","\\\\brief Number of dimensions",10,null],[12,"dtype","","\\\\brief The data type of the pointer",10,null],[12,"shape","","\\\\brief The shape of the tensor",10,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",10,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",10,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",11,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",11,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",11,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",12,null],[12,"v_float64","","",12,null],[12,"v_handle","","",12,null],[12,"v_str","","",12,null],[12,"v_type","","",12,null],[12,"v_ctx","","",12,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",13,null],[12,"size","","",13,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMFuncRemoveGlobal","","\\\\brief Remove a global function. \\\\param name The name of…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",14,null],[12,"num_task","","\\\\brief total amount of task",14,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[4,"ArgValue","tvm::function","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",15,null],[13,"UInt","","",15,null],[13,"Float","","",15,null],[13,"Null","","",15,null],[13,"DataType","","",15,null],[13,"String","","",15,null],[13,"Context","","",15,null],[13,"Handle","","",15,null],[13,"ArrayHandle","","",15,null],[13,"ObjectHandle","","",15,null],[13,"ModuleHandle","","",15,null],[13,"FuncHandle","","",15,null],[13,"NDArrayHandle","","",15,null],[13,"Bytes","","",15,null],[13,"Str","","",15,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[0,"module","tvm","Provides the [`Module`] type and methods for working with…",null,null],[3,"Module","tvm::module","Wrapper around TVM module handle which contains an entry…",null,null],[5,"runtime_enabled","","",null,[[["cstring",3]],[["result",4],["error",4]]]],[5,"load_from_file","","",null,[[["cstring",3]],[["error",4],["module",3],["result",4]]]],[0,"ndarray","tvm","This module implements the [`NDArray`] type for working…",null,null],[3,"NDArrayContainer","tvm::ndarray","See the `module-level documentation` for more details.",null,null],[3,"NDArray","","",null,null],[8,"Num32","","A trait for the supported 32-bits numerical types in…",null,null],[18,"BITS","","",17,null],[0,"value","tvm","This module implements [`ArgValue`] and [`RetValue`] types…",null,null],[5,"version","","Outputs the current TVM version.",null,[[]]],[0,"ir","","",null,null],[0,"arith","tvm::ir","",null,null],[3,"ConstIntBoundNode","tvm::ir::arith","",null,null],[12,"min_value","","",18,null],[12,"max_value","","",18,null],[3,"ConstIntBound","","",null,null],[11,"new","","",19,[[],["constintbound",3]]],[0,"attrs","tvm::ir","",null,null],[3,"BaseAttrsNode","tvm::ir::attrs","",null,null],[12,"base","","",20,null],[3,"Attrs","","",null,null],[0,"diagnostics","tvm::ir","",null,null],[3,"DiagnosticNode","tvm::ir::diagnostics","A compiler diagnostic.",null,null],[12,"base","","",21,null],[12,"level","","The level.",21,null],[12,"span","","The span at which to report an error.",21,null],[12,"message","","The diagnostic message.",21,null],[3,"Diagnostic","","",null,null],[3,"DiagnosticBuilder","","A wrapper around std::stringstream to build a diagnostic.",null,null],[12,"level","","The level.",22,null],[12,"span","","The span of the diagnostic.",22,null],[12,"message","","The in progress message.",22,null],[3,"DiagnosticRendererNode","","Display diagnostics in a given display format.",null,null],[12,"base","","The base type.",23,null],[3,"DiagnosticRenderer","","",null,null],[3,"DiagnosticContextNode","","A diagnostic context for recording errors against a source…",null,null],[12,"base","","",24,null],[12,"module","","The Module to report against.",24,null],[12,"diagnostics","","The set of diagnostics to report.",24,null],[12,"renderer","","The renderer set for the context.",24,null],[3,"DiagnosticContext","","",null,null],[4,"DiagnosticLevel","","The diagnostic level, controls the printing of the message.",null,null],[13,"Bug","","",25,null],[13,"Error","","",25,null],[13,"Warning","","",25,null],[13,"Note","","",25,null],[13,"Help","","",25,null],[5,"get_renderer","","",null,[[],[["result",6],["diagnosticrenderer",3]]]],[5,"diagnostic_renderer","","",null,[[["function",3]],[["result",6],["diagnosticrenderer",3]]]],[5,"emit","","",null,[[["diagnostic",3],["diagnosticcontext",3]],["result",6]]],[5,"diagnostic_context_default","","",null,[[["irmodule",3]],[["diagnosticcontext",3],["result",6]]]],[5,"diagnostic_context_render","","",null,[[["diagnosticcontext",3]],["result",6]]],[5,"diagnositc_renderer_render","","",null,[[["diagnosticrenderer",3],["diagnosticcontext",3]],["result",6]]],[5,"clear_renderer","","",null,[[],["result",6]]],[0,"codespan","","A TVM diagnostics renderer which uses the Rust `codespan`…",null,null],[5,"init","tvm::ir::diagnostics::codespan","Initialize the `codespan` based diagnostics.",null,[[],["result",6]]],[11,"new","tvm::ir::diagnostics","",26,[[["span",3],["tstring",3],["diagnosticlevel",4]],["diagnostic",3]]],[11,"bug","","",26,[[["span",3]],["diagnosticbuilder",3]]],[11,"error","","",26,[[["span",3]],["diagnosticbuilder",3]]],[11,"warning","","",26,[[["span",3]],["diagnosticbuilder",3]]],[11,"note","","",26,[[["span",3]],["diagnosticbuilder",3]]],[11,"help","","",26,[[["span",3]],["diagnosticbuilder",3]]],[11,"new","","",22,[[["span",3],["diagnosticlevel",4]],["diagnosticbuilder",3]]],[11,"render","","Render the provided context.",27,[[["diagnosticcontext",3]],["result",6]]],[11,"new","","",28,[[["irmodule",3]],["diagnosticcontext",3]]],[11,"default","","",28,[[["irmodule",3]],["diagnosticcontext",3]]],[11,"emit","","Emit a diagnostic.",28,[[["diagnostic",3]],["result",6]]],[11,"render","","Render the errors and raise a DiagnosticError exception.",28,[[],["result",6]]],[11,"emit_fatal","","Emit a diagnostic and then immediately attempt to render…",28,[[["diagnostic",3]],["result",6]]],[0,"expr","tvm::ir","",null,null],[3,"BaseExprNode","tvm::ir::expr","",null,null],[12,"base","","",29,null],[3,"BaseExpr","","",null,null],[3,"PrimExprNode","","",null,null],[12,"base","","",30,null],[12,"datatype","","",30,null],[3,"PrimExpr","","",null,null],[3,"GlobalVarNode","","",null,null],[12,"base","","",31,null],[12,"name_hint","","",31,null],[3,"GlobalVar","","",null,null],[5,"_as_text","","",null,[[["function",3],["objectref",3]],[["tstring",3],["result",6]]]],[5,"as_text","","",null,[[["isobjectref",8]],["string",3]]],[11,"base","","",29,[[],["baseexprnode",3]]],[11,"base","","",30,[[["datatype",3]],["primexprnode",3]]],[11,"new","","",32,[[["string",3],["objectref",3]],["globalvar",3]]],[0,"function","tvm::ir","",null,null],[3,"BaseFuncNode","tvm::ir::function","",null,null],[12,"base","","",33,null],[12,"attrs","","",33,null],[3,"BaseFunc","","",null,null],[6,"DictAttrs","","",null,null],[11,"base","","",33,[[],["basefuncnode",3]]],[0,"module","tvm::ir","",null,null],[3,"IRModuleNode","tvm::ir::module","",null,null],[12,"base","","",34,null],[12,"functions","","",34,null],[12,"type_definitions","","",34,null],[12,"source_map","","",34,null],[3,"IRModule","","",null,null],[4,"Error","","",null,null],[13,"IO","","",35,null],[13,"TVM","","",35,null],[5,"parse_module","","",null,[[["tvmstring",3]],[["irmodule",3],["result",6]]]],[5,"parse_expression","","",null,[[["tvmstring",3]],[["irmodule",3],["result",6]]]],[5,"module_add_def","","",null,[[["irmodule",3],["objectref",3]],["result",6]]],[5,"module_get_global_var","","",null,[[["irmodule",3],["tvmstring",3]],[["result",6],["globalvar",3]]]],[5,"module_get_global_vars","","",null,[[["irmodule",3]],[["array",3],["result",6]]]],[5,"module_lookup","","",null,[[["irmodule",3],["globalvar",3]],[["result",6],["basefunc",3]]]],[5,"module_lookup_str","","",null,[[["irmodule",3],["tvmstring",3]],[["result",6],["basefunc",3]]]],[11,"parse","","",36,[[],[["irmodule",3],["result",6]]]],[11,"parse_file","","",36,[[["asref",8],["path",3]],[["irmodule",3],["error",4],["result",4]]]],[11,"add_def","","",36,[[["objectref",3]],["result",6]]],[11,"get_global_var","","",36,[[["tvmstring",3]],[["result",6],["globalvar",3]]]],[11,"get_global_vars","","",36,[[],[["result",6],["array",3]]]],[11,"lookup","","",36,[[["globalvar",3]],[["result",6],["basefunc",3]]]],[11,"lookup_str","","",36,[[],[["result",6],["basefunc",3]]]],[0,"op","tvm::ir","",null,null],[3,"OpNode","tvm::ir::op","",null,null],[12,"base","","",37,null],[12,"name","","",37,null],[12,"op_type","","",37,null],[12,"description","","",37,null],[12,"arguments","","",37,null],[12,"attrs_type_key","","",37,null],[12,"attrs_type_index","","",37,null],[12,"num_inputs","","",37,null],[12,"support_level","","",37,null],[3,"Op","","",null,null],[0,"relay","tvm::ir","",null,null],[3,"ExprNode","tvm::ir::relay","",null,null],[12,"base","","",38,null],[12,"span","","",38,null],[12,"checked_type","","",38,null],[3,"Expr","","",null,null],[3,"IdNode","","",null,null],[12,"base","","",39,null],[12,"name_hint","","",39,null],[3,"Id","","",null,null],[3,"ConstantNode","","",null,null],[12,"base","","",40,null],[12,"data","","",40,null],[3,"Constant","","",null,null],[3,"TupleNode","","",null,null],[12,"base","","",41,null],[12,"fields","","",41,null],[3,"Tuple","","",null,null],[3,"VarNode","","",null,null],[12,"base","","",42,null],[12,"vid","","",42,null],[12,"type_annotation","","",42,null],[3,"Var","","",null,null],[3,"CallNode","","",null,null],[12,"base","","",43,null],[12,"op","","",43,null],[12,"args","","",43,null],[12,"attrs","","",43,null],[12,"type_args","","",43,null],[3,"Call","","",null,null],[3,"LetNode","","",null,null],[12,"base","","",44,null],[12,"var","","",44,null],[12,"value","","",44,null],[12,"body","","",44,null],[3,"Let","","",null,null],[3,"IfNode","","",null,null],[12,"base","","",45,null],[12,"cond","","",45,null],[12,"true_branch","","",45,null],[12,"false_branch","","",45,null],[3,"If","","",null,null],[3,"TupleGetItemNode","","",null,null],[12,"base","","",46,null],[12,"tuple","","",46,null],[12,"index","","",46,null],[3,"TupleGetItem","","",null,null],[3,"RefCreateNode","","",null,null],[12,"base","","",47,null],[12,"value","","",47,null],[3,"RefCreate","","",null,null],[3,"RefReadNode","","",null,null],[12,"base","","",48,null],[12,"ref_value","","",48,null],[3,"RefRead","","",null,null],[3,"RefWriteNode","","",null,null],[12,"base","","",49,null],[12,"ref_value","","",49,null],[12,"value","","",49,null],[3,"RefWrite","","",null,null],[3,"ConstructorNode","","",null,null],[12,"base","","",50,null],[12,"name_hint","","",50,null],[12,"inputs","","",50,null],[12,"tag","","",50,null],[3,"Constructor","","",null,null],[3,"PatternNode","","",null,null],[12,"base","","",51,null],[12,"span","","",51,null],[3,"Pattern","","",null,null],[3,"PatternWildcardNode","","",null,null],[12,"base","","",52,null],[3,"PatternWildcard","","",null,null],[3,"PatternVarNode","","",null,null],[12,"base","","",53,null],[12,"var","","",53,null],[3,"PatternVar","","",null,null],[3,"PatternConstructorNode","","",null,null],[12,"base","","",54,null],[12,"constructor","","",54,null],[12,"patterns","","",54,null],[3,"PatternConstructor","","",null,null],[3,"PatternTupleNode","","",null,null],[12,"base","","",55,null],[12,"patterns","","",55,null],[3,"PatternTuple","","",null,null],[3,"ClauseNode","","",null,null],[12,"base","","",56,null],[12,"lhs","","",56,null],[12,"rhs","","",56,null],[3,"Clause","","",null,null],[3,"MatchNode","","",null,null],[12,"base","","",57,null],[12,"data","","",57,null],[12,"clauses","","",57,null],[12,"complete","","",57,null],[3,"Match","","",null,null],[3,"FunctionNode","","",null,null],[12,"base","","",58,null],[12,"params","","",58,null],[12,"body","","",58,null],[12,"ret_type","","",58,null],[12,"type_params","","",58,null],[3,"Function","","",null,null],[0,"attrs","","",null,null],[0,"nn","tvm::ir::relay::attrs","",null,null],[3,"Conv2DAttrsNode","tvm::ir::relay::attrs::nn","",null,null],[12,"base","","",59,null],[12,"strides","","",59,null],[12,"padding","","",59,null],[12,"dilation","","",59,null],[12,"groups","","",59,null],[12,"channels","","",59,null],[12,"kernel_size","","",59,null],[12,"data_layout","","",59,null],[12,"kernel_layout","","",59,null],[12,"out_layout","","",59,null],[12,"out_dtype","","",59,null],[3,"Conv2DAttrs","","",null,null],[3,"BiasAddAttrsNode","","",null,null],[12,"base","","",60,null],[12,"axis","","",60,null],[3,"BiasAddAttrs","","",null,null],[3,"DenseAttrsNode","","",null,null],[12,"base","","",61,null],[12,"units","","",61,null],[12,"out_dtype","","",61,null],[3,"DenseAttrs","","",null,null],[3,"GlobalPool2DAttrsNode","","",null,null],[12,"base","","",62,null],[12,"layout","","",62,null],[3,"GlobalPool2DAttrs","","",null,null],[3,"MaxPool2DAttrsNode","","",null,null],[12,"base","","",63,null],[12,"pool_size","","",63,null],[12,"strides","","",63,null],[12,"padding","","",63,null],[12,"layout","","",63,null],[12,"ceil_mode","","",63,null],[3,"MaxPool2DAttrs","","",null,null],[3,"SoftmaxAttrsNode","","",null,null],[12,"base","","",64,null],[12,"axis","","",64,null],[3,"SoftmaxAttrs","","",null,null],[3,"BatchNormAttrsNode","","",null,null],[12,"base","","",65,null],[12,"axis","","",65,null],[12,"epsilon","","",65,null],[12,"center","","",65,null],[12,"scale","","",65,null],[3,"BatchNormAttrs","","",null,null],[0,"transform","tvm::ir::relay::attrs","",null,null],[3,"ExpandDimsAttrsNode","tvm::ir::relay::attrs::transform","",null,null],[12,"base","","",66,null],[12,"axis","","",66,null],[12,"num_newaxis","","",66,null],[3,"ExpandDimsAttrs","","",null,null],[11,"base","tvm::ir::relay","",38,[[],["exprnode",3]]],[11,"new","","",67,[[["ndarray",3],["objectref",3]],["constant",3]]],[11,"new","","",68,[[["expr",3],["array",3],["objectref",3]],["tuple",3]]],[11,"new","","",69,[[["string",3],["type",3],["objectref",3]],["var",3]]],[11,"name_hint","","",69,[[],["tstring",3]]],[11,"to_expr","","",69,[[],["expr",3]]],[11,"new","","",70,[[["type",3],["attrs",3],["expr",3],["objectref",3],["array",3],["array",3]],["call",3]]],[11,"new","","",71,[[["var",3],["expr",3],["objectref",3]],["let",3]]],[11,"new","","",72,[[["expr",3],["objectref",3]],["if",3]]],[11,"new","","",73,[[["expr",3],["objectref",3]],["tuplegetitem",3]]],[11,"new","","",74,[[["expr",3],["objectref",3]],["refcreate",3]]],[11,"new","","",75,[[["expr",3],["objectref",3]],["refread",3]]],[11,"new","","",76,[[["expr",3],["objectref",3]],["refwrite",3]]],[11,"new","","",77,[[["string",3],["type",3],["objectref",3],["array",3]],["constructor",3]]],[11,"base","","",51,[[],["patternnode",3]]],[11,"new","","",78,[[["objectref",3]],["patternwildcard",3]]],[11,"new","","",79,[[["var",3],["objectref",3]],["patternvar",3]]],[11,"new","","",80,[[["array",3],["objectref",3],["pattern",3],["constructor",3]],["patternconstructor",3]]],[11,"new","","",81,[[["array",3],["pattern",3],["objectref",3]],["patterntuple",3]]],[11,"new","","",82,[[["expr",3],["pattern",3],["objectref",3]],["clause",3]]],[11,"new","","",83,[[["array",3],["clause",3],["objectref",3],["expr",3]],["match",3]]],[11,"new","","",84,[[["type",3],["array",3],["var",3],["expr",3],["array",3]],["function",3]]],[0,"source_map","tvm::ir","",null,null],[3,"SourceNode","tvm::ir::source_map","A program source in any language.",null,null],[12,"base","","",85,null],[12,"source_name","","The source name.",85,null],[12,"source","","The raw source.",85,null],[3,"Source","","",null,null],[3,"SourceMapNode","","A mapping from a unique source name to source fragments.",null,null],[12,"base","","The base object.",86,null],[12,"source_map","","The source mapping.",86,null],[3,"SourceMap","","",null,null],[0,"span","tvm::ir","",null,null],[3,"SourceNameNode","tvm::ir::span","A source file name, contained in a Span.",null,null],[12,"base","","",87,null],[12,"name","","",87,null],[3,"SourceName","","",null,null],[3,"SpanNode","","Span information for diagnostic purposes.",null,null],[12,"base","","",88,null],[12,"source_name","","The source name.",88,null],[12,"line","","The line number.",88,null],[12,"column","","The column offset.",88,null],[12,"end_line","","The end line number.",88,null],[12,"end_column","","The end column number.",88,null],[3,"Span","","",null,null],[11,"new","","",89,[[["sourcename",3]],["span",3]]],[0,"tir","tvm::ir","",null,null],[3,"IntImmNode","tvm::ir::tir","",null,null],[12,"value","","",90,null],[3,"IntImm","","",null,null],[3,"VarNode","","",null,null],[12,"name_hint","","",91,null],[3,"Var","","",null,null],[3,"AddNode","","",null,null],[12,"a","","",92,null],[12,"b","","",92,null],[3,"Add","","",null,null],[3,"SubNode","","",null,null],[12,"a","","",93,null],[12,"b","","",93,null],[3,"Sub","","",null,null],[3,"MulNode","","",null,null],[12,"a","","",94,null],[12,"b","","",94,null],[3,"Mul","","",null,null],[3,"DivNode","","",null,null],[12,"a","","",95,null],[12,"b","","",95,null],[3,"Div","","",null,null],[3,"ModNode","","",null,null],[12,"a","","",96,null],[12,"b","","",96,null],[3,"Mod","","",null,null],[3,"FloorDivNode","","",null,null],[12,"a","","",97,null],[12,"b","","",97,null],[3,"FloorDiv","","",null,null],[3,"FloorModNode","","",null,null],[12,"a","","",98,null],[12,"b","","",98,null],[3,"FloorMod","","",null,null],[3,"MinNode","","",null,null],[12,"a","","",99,null],[12,"b","","",99,null],[3,"Min","","",null,null],[3,"MaxNode","","",null,null],[12,"a","","",100,null],[12,"b","","",100,null],[3,"Max","","",null,null],[3,"CastNode","","",null,null],[12,"value","","",101,null],[3,"Cast","","",null,null],[3,"RampNode","","",null,null],[12,"start","","",102,null],[12,"stride","","",102,null],[12,"lanes","","",102,null],[3,"Ramp","","",null,null],[3,"SelectNode","","",null,null],[12,"condition","","",103,null],[12,"true_value","","",103,null],[12,"false_value","","",103,null],[3,"Select","","",null,null],[3,"EqNode","","",null,null],[12,"a","","",104,null],[12,"b","","",104,null],[3,"Eq","","",null,null],[3,"NeNode","","",null,null],[12,"a","","",105,null],[12,"b","","",105,null],[3,"Ne","","",null,null],[3,"LtNode","","",null,null],[12,"a","","",106,null],[12,"b","","",106,null],[3,"Lt","","",null,null],[3,"LeNode","","",null,null],[12,"a","","",107,null],[12,"b","","",107,null],[3,"Le","","",null,null],[3,"GtNode","","",null,null],[12,"a","","",108,null],[12,"b","","",108,null],[3,"Gt","","",null,null],[3,"GeNode","","",null,null],[12,"a","","",109,null],[12,"b","","",109,null],[3,"Ge","","",null,null],[3,"AndNode","","",null,null],[12,"a","","",110,null],[12,"b","","",110,null],[3,"And","","",null,null],[3,"OrNode","","",null,null],[12,"a","","",111,null],[12,"b","","",111,null],[3,"Or","","",null,null],[3,"NotNode","","",null,null],[12,"value","","",112,null],[3,"Not","","",null,null],[3,"LetNode","","",null,null],[12,"var","","",113,null],[12,"value","","",113,null],[12,"body","","",113,null],[3,"Let","","",null,null],[11,"new","","",114,[[["datatype",3]],["intimm",3]]],[11,"new","","",115,[[["tvmstring",3],["datatype",3]],["var",3]]],[11,"new","","",116,[[["primexpr",3],["datatype",3]],["add",3]]],[11,"new","","",117,[[["primexpr",3],["datatype",3]],["sub",3]]],[11,"new","","",118,[[["primexpr",3],["datatype",3]],["mul",3]]],[11,"new","","",119,[[["primexpr",3],["datatype",3]],["div",3]]],[11,"new","","",120,[[["primexpr",3],["datatype",3]],["mod",3]]],[11,"new","","",121,[[["primexpr",3],["datatype",3]],["floordiv",3]]],[11,"new","","",122,[[["primexpr",3],["datatype",3]],["floormod",3]]],[11,"new","","",123,[[["primexpr",3],["datatype",3]],["min",3]]],[11,"new","","",124,[[["primexpr",3],["datatype",3]],["max",3]]],[11,"new","","",125,[[["primexpr",3],["datatype",3]],["cast",3]]],[11,"new","","",126,[[["primexpr",3],["datatype",3]],["ramp",3]]],[11,"new","","",127,[[["primexpr",3],["datatype",3]],["select",3]]],[11,"new","","",128,[[["primexpr",3],["datatype",3]],["eq",3]]],[11,"new","","",129,[[["primexpr",3],["datatype",3]],["ne",3]]],[11,"new","","",130,[[["primexpr",3],["datatype",3]],["lt",3]]],[11,"new","","",131,[[["primexpr",3],["datatype",3]],["le",3]]],[11,"new","","",132,[[["primexpr",3],["datatype",3]],["gt",3]]],[11,"new","","",133,[[["primexpr",3],["datatype",3]],["ge",3]]],[11,"new","","",134,[[["primexpr",3],["datatype",3]],["and",3]]],[11,"new","","",135,[[["primexpr",3],["datatype",3]],["or",3]]],[11,"new","","",136,[[["primexpr",3],["datatype",3]],["not",3]]],[11,"new","","",137,[[["datatype",3],["var",3],["primexpr",3]],["let",3]]],[0,"ty","tvm::ir","",null,null],[3,"TypeNode","tvm::ir::ty","",null,null],[12,"base","","",138,null],[12,"span","","",138,null],[3,"Type","","",null,null],[3,"PrimTypeNode","","",null,null],[12,"base","","",139,null],[12,"dtype","","The corresponding dtype field.",139,null],[3,"PrimType","","",null,null],[3,"PointerTypeNode","","",null,null],[12,"base","","",140,null],[12,"element_type","","The type of the element which the pointer points to.",140,null],[3,"PointerType","","",null,null],[3,"TypeVarNode","","",null,null],[12,"base","","",141,null],[12,"name_hint","","",141,null],[12,"kind","","",141,null],[3,"TypeVar","","",null,null],[3,"GlobalTypeVarNode","","A global type variable that is used for defining new types…",null,null],[12,"base","","",142,null],[12,"name_hint","","",142,null],[12,"kind","","",142,null],[3,"GlobalTypeVar","","",null,null],[3,"TupleTypeNode","","",null,null],[12,"base","","",143,null],[12,"fields","","",143,null],[3,"TupleType","","",null,null],[3,"TypeConstraintNode","","",null,null],[12,"base","","",144,null],[3,"TypeConstraint","","",null,null],[3,"FuncTypeNode","","The representation of a polymorphic function type.",null,null],[12,"base","","",145,null],[12,"arg_types","","The type of arguments.",145,null],[12,"ret_type","","The return type of the function.",145,null],[12,"type_params","","...",145,null],[12,"type_constraints","","Type constraints that must hold when calling this function.",145,null],[3,"FuncType","","",null,null],[3,"IncompleteTypeNode","","",null,null],[12,"base","","",146,null],[12,"kind","","",146,null],[3,"IncompleteType","","",null,null],[3,"RelayRefTypeNode","","",null,null],[12,"base","","",147,null],[12,"value","","",147,null],[3,"RefType","","",null,null],[3,"BaseTensorTypeNode","","",null,null],[12,"base","","",148,null],[3,"BaseTensorType","","",null,null],[3,"TensorTypeNode","","",null,null],[12,"base","","",149,null],[12,"shape","","",149,null],[12,"dtype","","",149,null],[3,"TensorType","","",null,null],[4,"TypeKind","","Possible kinds of type variables.",null,null],[13,"Type","","",150,null],[13,"ShapeVar","","Template variable in shape expression.",150,null],[13,"Constraint","","",150,null],[13,"AdtHandle","","",150,null],[13,"TypeData","","",150,null],[11,"empty","","",151,[[],["tupletype",3]]],[11,"new","","",152,[[["array",3],["datatype",3],["primexpr",3],["span",3]],["tensortype",3]]],[0,"python","tvm","",null,null],[5,"load","tvm::python","Load the Python interpreter into the address space.",null,[[],[["result",4],["string",3]]]],[0,"runtime","tvm","",null,null],[0,"object","tvm::runtime","",null,null],[8,"IsObjectRef","tvm::runtime::object","",null,null],[16,"Object","","",153,null],[10,"as_ptr","","",153,[[],[["option",4],["objectptr",3]]]],[10,"into_ptr","","",153,[[],[["objectptr",3],["option",4]]]],[10,"from_ptr","","",153,[[["objectptr",3],["option",4]]]],[11,"null","","",153,[[]]],[11,"into_arg_value","","",153,[[],["argvalue",4]]],[11,"from_arg_value","","",153,[[["argvalue",4]],[["result",4],["error",4]]]],[11,"into_ret_value","","",153,[[],["retvalue",4]]],[11,"from_ret_value","","",153,[[["retvalue",4]],[["result",4],["error",4]]]],[11,"upcast","","",153,[[]]],[11,"downcast","","",153,[[],[["result",4],["error",4]]]],[5,"debug_print","","",null,[[["objectref",3]],[["result",4],["cstring",3],["error",4]]]],[5,"structural_hash","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[5,"structural_equal","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[8,"IsObject","","An unsafe trait which should be implemented for an object…",null,null],[18,"TYPE_KEY","","",154,null],[11,"typed_delete","","",154,[[]]],[3,"Object","","A TVM intrusive smart pointer header, in TVM all FFI…",null,null],[3,"ObjectPtr","","A smart pointer for types which implement IsObject. This…",null,null],[12,"ptr","","",155,null],[3,"ObjectRef","","",null,null],[0,"string","tvm::runtime","",null,null],[3,"StringObj","tvm::runtime::string","",null,null],[3,"String","","",null,null],[5,"get_last_error","tvm::runtime","Gets the last error message.",null,[[]]],[0,"array","","",null,null],[3,"Array","tvm::runtime::array","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[5,"array_size","","",null,[[["objectref",3]],[["result",4],["error",4]]]],[3,"IntoIter","","",null,null],[0,"context","tvm::runtime","",null,null],[5,"get_device_attr","tvm::runtime::context","",null,[[],[["result",4],["error",4]]]],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[4,"DeviceType","","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[3,"UnsupportedDeviceError","","",null,null],[0,"errors","tvm::runtime","",null,null],[3,"FunctionNotFoundError","tvm::runtime::errors","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::runtime::errors::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm::runtime::errors","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[13,"DiagnosticError","","",3,null],[13,"Raw","","",3,null],[0,"function","tvm::runtime","This module provides an idiomatic Rust API for creating…",null,null],[6,"Result","tvm::runtime::function","",null,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[5,"register","","Registers a Rust function with an arbitrary type signature…",null,[[],[["result",4],["error",4]]]],[5,"register_override","","Register a function with explicit control over whether to…",null,[[],[["result",4],["error",4]]]],[5,"register_untyped","","",null,[[],[["result",4],["error",4]]]],[8,"ToFunction","","",null,null],[16,"Handle","","",6,null],[10,"into_raw","","",6,[[]]],[10,"call","","",6,[[["vec",3],["argvalue",4]],[["retvalue",4],["result",4],["error",4]]]],[10,"drop","","",6,[[]]],[11,"to_function","","",6,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",6,[[]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",6,[[]]],[8,"Typed","","A trait representing whether the function arguments and…",null,null],[10,"args","","",7,[[["vec",3],["argvalue",4]],[["result",4],["error",4]]]],[10,"ret","","",7,[[],[["retvalue",4],["result",4],["error",4]]]],[0,"ffi","","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm::runtime::function::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",8,null],[12,"device_id","","\\\\brief The device index",8,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",9,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",9,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",9,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",10,null],[12,"ctx","","\\\\brief The device context of the tensor",10,null],[12,"ndim","","\\\\brief Number of dimensions",10,null],[12,"dtype","","\\\\brief The data type of the pointer",10,null],[12,"shape","","\\\\brief The shape of the tensor",10,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",10,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",10,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",11,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",11,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",11,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",12,null],[12,"v_float64","","",12,null],[12,"v_handle","","",12,null],[12,"v_str","","",12,null],[12,"v_type","","",12,null],[12,"v_ctx","","",12,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",13,null],[12,"size","","",13,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMFuncRemoveGlobal","","\\\\brief Remove a global function. \\\\param name The name of…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",14,null],[12,"num_task","","\\\\brief total amount of task",14,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[4,"ArgValue","tvm::runtime::function","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",15,null],[13,"UInt","","",15,null],[13,"Float","","",15,null],[13,"Null","","",15,null],[13,"DataType","","",15,null],[13,"String","","",15,null],[13,"Context","","",15,null],[13,"Handle","","",15,null],[13,"ArrayHandle","","",15,null],[13,"ObjectHandle","","",15,null],[13,"ModuleHandle","","",15,null],[13,"FuncHandle","","",15,null],[13,"NDArrayHandle","","",15,null],[13,"Bytes","","",15,null],[13,"Str","","",15,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[0,"map","tvm::runtime","",null,null],[3,"Map","tvm::runtime::map","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[5,"map_size","","",null,[[["objectref",3]],[["result",4],["error",4]]]],[5,"map_get_item","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[5,"map_count","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[5,"map_items","","",null,[[["objectref",3]],[["array",3],["result",4],["error",4]]]],[3,"IntoIter","","",null,null],[0,"module","tvm::runtime","Provides the [`Module`] type and methods for working with…",null,null],[3,"Module","tvm::runtime::module","Wrapper around TVM module handle which contains an entry…",null,null],[5,"runtime_enabled","","",null,[[["cstring",3]],[["result",4],["error",4]]]],[5,"load_from_file","","",null,[[["cstring",3]],[["error",4],["module",3],["result",4]]]],[0,"ndarray","tvm::runtime","This module implements the [`NDArray`] type for working…",null,null],[3,"NDArrayContainer","tvm::runtime::ndarray","See the `module-level documentation` for more details.",null,null],[3,"NDArray","","",null,null],[8,"Num32","","A trait for the supported 32-bits numerical types in…",null,null],[18,"BITS","","",17,null],[0,"value","tvm::runtime","This module implements [`ArgValue`] and [`RetValue`] types…",null,null],[5,"version","","Outputs the current TVM version.",null,[[]]],[3,"Context","","",null,null],[12,"device_type","","",4,null],[12,"device_id","","",4,null],[4,"DeviceType","","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",5,null],[13,"GPU","","",5,null],[13,"CPUPinned","","",5,null],[13,"OpenCL","","",5,null],[13,"Vulkan","","",5,null],[13,"Metal","","",5,null],[13,"VPI","","",5,null],[13,"ROCM","","",5,null],[13,"ExtDev","","",5,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[3,"Module","","Wrapper around TVM module handle which contains an entry…",null,null],[3,"NDArray","","",null,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",15,null],[13,"UInt","","",15,null],[13,"Float","","",15,null],[13,"Null","","",15,null],[13,"DataType","","",15,null],[13,"String","","",15,null],[13,"Context","","",15,null],[13,"Handle","","",15,null],[13,"ArrayHandle","","",15,null],[13,"ObjectHandle","","",15,null],[13,"ModuleHandle","","",15,null],[13,"FuncHandle","","",15,null],[13,"NDArrayHandle","","",15,null],[13,"Bytes","","",15,null],[13,"Str","","",15,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",16,null],[13,"UInt","","",16,null],[13,"Float","","",16,null],[13,"Null","","",16,null],[13,"DataType","","",16,null],[13,"String","","",16,null],[13,"Context","","",16,null],[13,"Handle","","",16,null],[13,"ArrayHandle","","",16,null],[13,"ObjectHandle","","",16,null],[13,"ModuleHandle","","",16,null],[13,"FuncHandle","","",16,null],[13,"NDArrayHandle","","",16,null],[13,"Bytes","","",16,null],[13,"Str","","",16,null],[3,"ByteArray","","A newtype wrapping a raw TVM byte-array.",null,null],[3,"DataType","","",null,null],[14,"external","","",null,null],[14,"tvm_call","","",null,null],[14,"check_call","","",null,null],[3,"Object","","A TVM intrusive smart pointer header, in TVM all FFI…",null,null],[8,"IsObject","","An unsafe trait which should be implemented for an object…",null,null],[18,"TYPE_KEY","","",154,null],[11,"typed_delete","","",154,[[]]],[3,"ObjectPtr","","A smart pointer for types which implement IsObject. This…",null,null],[12,"ptr","","",155,null],[8,"IsObjectRef","","",null,null],[16,"Object","","",153,null],[10,"as_ptr","","",153,[[],[["option",4],["objectptr",3]]]],[10,"into_ptr","","",153,[[],[["objectptr",3],["option",4]]]],[10,"from_ptr","","",153,[[["objectptr",3],["option",4]]]],[11,"null","","",153,[[]]],[11,"into_arg_value","","",153,[[],["argvalue",4]]],[11,"from_arg_value","","",153,[[["argvalue",4]],[["result",4],["error",4]]]],[11,"into_ret_value","","",153,[[],["retvalue",4]]],[11,"from_ret_value","","",153,[[["retvalue",4]],[["result",4],["error",4]]]],[11,"upcast","","",153,[[]]],[11,"downcast","","",153,[[],[["result",4],["error",4]]]],[5,"debug_print","","",null,[[["objectref",3]],[["result",4],["cstring",3],["error",4]]]],[5,"structural_hash","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[5,"structural_equal","","",null,[[["objectref",3]],[["objectref",3],["error",4],["result",4]]]],[3,"StringObj","","",null,null],[3,"String","","",null,null],[3,"FunctionNotFoundError","","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",0,null],[12,"actual","","",0,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",1,null],[13,"InvalidDatatype","","",1,null],[13,"ShapeError","","",1,null],[13,"DataTypeMismatch","","",1,null],[12,"expected","tvm::runtime::NDArrayError","",2,null],[12,"actual","","",2,null],[4,"Error","tvm::runtime","",null,null],[13,"Downcast","","",3,null],[13,"Null","","",3,null],[13,"ModuleLoadPath","","",3,null],[13,"ToCString","","",3,null],[13,"FromCString","","",3,null],[13,"NullHandle","","",3,null],[13,"NDArray","","",3,null],[13,"CallFailed","","",3,null],[13,"Infallible","","",3,null],[13,"Panic","","",3,null],[13,"DiagnosticError","","",3,null],[13,"Raw","","",3,null],[3,"ObjectRef","","",null,null],[0,"graph_rt","","",null,null],[3,"GraphRt","tvm::runtime::graph_rt","An instance of the C++ graph runtime.",null,null],[11,"create_from_parts","","Create a graph runtime from the deprecated graph, lib, ctx…",156,[[["context",3],["module",3]],["result",6]]],[11,"load_params","","Load the parameters of the model into the runtime.",156,[[],["result",6]]],[11,"set_input","","Set the input with name `name` with the value of `input`.",156,[[["ndarray",3]],["result",6]]],[11,"run","","Run the graph module, once setting parameters and inputs.",156,[[],["result",6]]],[11,"get_output","","Extract the ith output from the graph runtime and returns…",156,[[],[["result",6],["ndarray",3]]]],[11,"get_output_into","","Extract the ith output from the graph runtime and write…",156,[[["ndarray",3]],["result",6]]],[0,"transform","tvm","",null,null],[3,"PassInfoNode","tvm::transform","",null,null],[12,"base","","",157,null],[12,"opt_level","","",157,null],[12,"name","","",157,null],[12,"required","","",157,null],[3,"PassInfo","","",null,null],[5,"create_func_pass","","",null,[[["passinfo",3],["function",3]],[["result",6],["pass",6]]]],[5,"function_pass","","",null,[[["passinfo",3],["fn",8]],[["result",6],["pass",6]]]],[6,"Pass","","",null,null],[6,"IRModule","","",null,null],[6,"PassContext","","",null,null],[11,"new","","",158,[[["string",3],["vec",3]],[["passinfo",3],["result",6]]]],[14,"initialize","tvm","A macro for generating the correct TVM symbols for plugin…",null,null],[14,"export_pass","","",null,null],[14,"export","","",null,null],[14,"export_mod","","",null,null],[11,"from","tvm::runtime","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_string","","",159,[[],["string",3]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_py","","",159,[[["python",3]]]],[11,"into_py","","",159,[[["python",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_py","","",1,[[["python",3]]]],[11,"into_py","","",1,[[["python",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_py","","",3,[[["python",3]]]],[11,"into_py","","",3,[[["python",3]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_py","","",160,[[["python",3]]]],[11,"into_py","","",160,[[["python",3]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from_py","","",161,[[["python",3]]]],[11,"into_py","","",161,[[["python",3]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from_py","","",162,[[["python",3]]]],[11,"into_py","","",162,[[["python",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_py","","",4,[[["python",3]]]],[11,"into_py","","",4,[[["python",3]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"to_string","","",163,[[],["string",3]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from_py","","",163,[[["python",3]]]],[11,"into_py","","",163,[[["python",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_py","","",5,[[["python",3]]]],[11,"into_py","","",5,[[["python",3]]]],[11,"from","tvm::runtime::context","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_string","","",164,[[],["string",3]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from_py","","",164,[[["python",3]]]],[11,"into_py","","",164,[[["python",3]]]],[11,"from","tvm::runtime::function::ffi","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_py","","",8,[[["python",3]]]],[11,"into_py","","",8,[[["python",3]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_py","","",9,[[["python",3]]]],[11,"into_py","","",9,[[["python",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_py","","",10,[[["python",3]]]],[11,"into_py","","",10,[[["python",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_py","","",11,[[["python",3]]]],[11,"into_py","","",11,[[["python",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_py","","",12,[[["python",3]]]],[11,"into_py","","",12,[[["python",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from_py","","",13,[[["python",3]]]],[11,"into_py","","",13,[[["python",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_py","","",14,[[["python",3]]]],[11,"into_py","","",14,[[["python",3]]]],[11,"from","tvm::runtime","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from_py","","",15,[[["python",3]]]],[11,"into_py","","",15,[[["python",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from_py","","",16,[[["python",3]]]],[11,"into_py","","",16,[[["python",3]]]],[11,"from","tvm::runtime::ndarray","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from_py","","",165,[[["python",3]]]],[11,"into_py","","",165,[[["python",3]]]],[11,"from","tvm::ir::arith","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from_py","","",18,[[["python",3]]]],[11,"into_py","","",18,[[["python",3]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_py","","",19,[[["python",3]]]],[11,"into_py","","",19,[[["python",3]]]],[11,"from","tvm::ir::attrs","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_py","","",20,[[["python",3]]]],[11,"into_py","","",20,[[["python",3]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from_py","","",166,[[["python",3]]]],[11,"into_py","","",166,[[["python",3]]]],[11,"from","tvm::ir::diagnostics","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from_py","","",21,[[["python",3]]]],[11,"into_py","","",21,[[["python",3]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_py","","",26,[[["python",3]]]],[11,"into_py","","",26,[[["python",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from_py","","",22,[[["python",3]]]],[11,"into_py","","",22,[[["python",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_py","","",23,[[["python",3]]]],[11,"into_py","","",23,[[["python",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from_py","","",27,[[["python",3]]]],[11,"into_py","","",27,[[["python",3]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from_py","","",24,[[["python",3]]]],[11,"into_py","","",24,[[["python",3]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from_py","","",28,[[["python",3]]]],[11,"into_py","","",28,[[["python",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from_py","","",25,[[["python",3]]]],[11,"into_py","","",25,[[["python",3]]]],[11,"from","tvm::ir::expr","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from_py","","",29,[[["python",3]]]],[11,"into_py","","",29,[[["python",3]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from_py","","",167,[[["python",3]]]],[11,"into_py","","",167,[[["python",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from_py","","",30,[[["python",3]]]],[11,"into_py","","",30,[[["python",3]]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from_py","","",168,[[["python",3]]]],[11,"into_py","","",168,[[["python",3]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_py","","",31,[[["python",3]]]],[11,"into_py","","",31,[[["python",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from_py","","",32,[[["python",3]]]],[11,"into_py","","",32,[[["python",3]]]],[11,"from","tvm::ir::function","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from_py","","",33,[[["python",3]]]],[11,"into_py","","",33,[[["python",3]]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from_py","","",169,[[["python",3]]]],[11,"into_py","","",169,[[["python",3]]]],[11,"from","tvm::ir::module","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from_py","","",34,[[["python",3]]]],[11,"into_py","","",34,[[["python",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_py","","",36,[[["python",3]]]],[11,"into_py","","",36,[[["python",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_py","","",35,[[["python",3]]]],[11,"into_py","","",35,[[["python",3]]]],[11,"from","tvm::ir::op","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_py","","",37,[[["python",3]]]],[11,"into_py","","",37,[[["python",3]]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from_py","","",170,[[["python",3]]]],[11,"into_py","","",170,[[["python",3]]]],[11,"from","tvm::ir::relay","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_py","","",38,[[["python",3]]]],[11,"into_py","","",38,[[["python",3]]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from_py","","",171,[[["python",3]]]],[11,"into_py","","",171,[[["python",3]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_py","","",39,[[["python",3]]]],[11,"into_py","","",39,[[["python",3]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from_py","","",172,[[["python",3]]]],[11,"into_py","","",172,[[["python",3]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_py","","",40,[[["python",3]]]],[11,"into_py","","",40,[[["python",3]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from_py","","",67,[[["python",3]]]],[11,"into_py","","",67,[[["python",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_py","","",41,[[["python",3]]]],[11,"into_py","","",41,[[["python",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from_py","","",68,[[["python",3]]]],[11,"into_py","","",68,[[["python",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from_py","","",42,[[["python",3]]]],[11,"into_py","","",42,[[["python",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from_py","","",69,[[["python",3]]]],[11,"into_py","","",69,[[["python",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_py","","",43,[[["python",3]]]],[11,"into_py","","",43,[[["python",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_py","","",70,[[["python",3]]]],[11,"into_py","","",70,[[["python",3]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_py","","",44,[[["python",3]]]],[11,"into_py","","",44,[[["python",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from_py","","",71,[[["python",3]]]],[11,"into_py","","",71,[[["python",3]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_py","","",45,[[["python",3]]]],[11,"into_py","","",45,[[["python",3]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_py","","",72,[[["python",3]]]],[11,"into_py","","",72,[[["python",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_py","","",46,[[["python",3]]]],[11,"into_py","","",46,[[["python",3]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from_py","","",73,[[["python",3]]]],[11,"into_py","","",73,[[["python",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_py","","",47,[[["python",3]]]],[11,"into_py","","",47,[[["python",3]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_py","","",74,[[["python",3]]]],[11,"into_py","","",74,[[["python",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_py","","",48,[[["python",3]]]],[11,"into_py","","",48,[[["python",3]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_py","","",75,[[["python",3]]]],[11,"into_py","","",75,[[["python",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_py","","",49,[[["python",3]]]],[11,"into_py","","",49,[[["python",3]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_py","","",76,[[["python",3]]]],[11,"into_py","","",76,[[["python",3]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_py","","",50,[[["python",3]]]],[11,"into_py","","",50,[[["python",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_py","","",77,[[["python",3]]]],[11,"into_py","","",77,[[["python",3]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_py","","",51,[[["python",3]]]],[11,"into_py","","",51,[[["python",3]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from_py","","",173,[[["python",3]]]],[11,"into_py","","",173,[[["python",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_py","","",52,[[["python",3]]]],[11,"into_py","","",52,[[["python",3]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from_py","","",78,[[["python",3]]]],[11,"into_py","","",78,[[["python",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_py","","",53,[[["python",3]]]],[11,"into_py","","",53,[[["python",3]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from_py","","",79,[[["python",3]]]],[11,"into_py","","",79,[[["python",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from_py","","",54,[[["python",3]]]],[11,"into_py","","",54,[[["python",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from_py","","",80,[[["python",3]]]],[11,"into_py","","",80,[[["python",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from_py","","",55,[[["python",3]]]],[11,"into_py","","",55,[[["python",3]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from_py","","",81,[[["python",3]]]],[11,"into_py","","",81,[[["python",3]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_py","","",56,[[["python",3]]]],[11,"into_py","","",56,[[["python",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_py","","",82,[[["python",3]]]],[11,"into_py","","",82,[[["python",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_py","","",57,[[["python",3]]]],[11,"into_py","","",57,[[["python",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from_py","","",83,[[["python",3]]]],[11,"into_py","","",83,[[["python",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_py","","",58,[[["python",3]]]],[11,"into_py","","",58,[[["python",3]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_py","","",84,[[["python",3]]]],[11,"into_py","","",84,[[["python",3]]]],[11,"from","tvm::ir::relay::attrs::nn","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from_py","","",59,[[["python",3]]]],[11,"into_py","","",59,[[["python",3]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from_py","","",174,[[["python",3]]]],[11,"into_py","","",174,[[["python",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_py","","",60,[[["python",3]]]],[11,"into_py","","",60,[[["python",3]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from_py","","",175,[[["python",3]]]],[11,"into_py","","",175,[[["python",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_py","","",61,[[["python",3]]]],[11,"into_py","","",61,[[["python",3]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from_py","","",176,[[["python",3]]]],[11,"into_py","","",176,[[["python",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from_py","","",62,[[["python",3]]]],[11,"into_py","","",62,[[["python",3]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from_py","","",177,[[["python",3]]]],[11,"into_py","","",177,[[["python",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_py","","",63,[[["python",3]]]],[11,"into_py","","",63,[[["python",3]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from_py","","",178,[[["python",3]]]],[11,"into_py","","",178,[[["python",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_py","","",64,[[["python",3]]]],[11,"into_py","","",64,[[["python",3]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from_py","","",179,[[["python",3]]]],[11,"into_py","","",179,[[["python",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_py","","",65,[[["python",3]]]],[11,"into_py","","",65,[[["python",3]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from_py","","",180,[[["python",3]]]],[11,"into_py","","",180,[[["python",3]]]],[11,"from","tvm::ir::relay::attrs::transform","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_py","","",66,[[["python",3]]]],[11,"into_py","","",66,[[["python",3]]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from_py","","",181,[[["python",3]]]],[11,"into_py","","",181,[[["python",3]]]],[11,"from","tvm::ir::source_map","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from_py","","",85,[[["python",3]]]],[11,"into_py","","",85,[[["python",3]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from_py","","",182,[[["python",3]]]],[11,"into_py","","",182,[[["python",3]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from_py","","",86,[[["python",3]]]],[11,"into_py","","",86,[[["python",3]]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from_py","","",183,[[["python",3]]]],[11,"into_py","","",183,[[["python",3]]]],[11,"from","tvm::ir::span","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from_py","","",87,[[["python",3]]]],[11,"into_py","","",87,[[["python",3]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from_py","","",184,[[["python",3]]]],[11,"into_py","","",184,[[["python",3]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from_py","","",88,[[["python",3]]]],[11,"into_py","","",88,[[["python",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from_py","","",89,[[["python",3]]]],[11,"into_py","","",89,[[["python",3]]]],[11,"from","tvm::ir::tir","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_py","","",90,[[["python",3]]]],[11,"into_py","","",90,[[["python",3]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from_py","","",114,[[["python",3]]]],[11,"into_py","","",114,[[["python",3]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from_py","","",91,[[["python",3]]]],[11,"into_py","","",91,[[["python",3]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from_py","","",115,[[["python",3]]]],[11,"into_py","","",115,[[["python",3]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from_py","","",92,[[["python",3]]]],[11,"into_py","","",92,[[["python",3]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from_py","","",116,[[["python",3]]]],[11,"into_py","","",116,[[["python",3]]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_py","","",93,[[["python",3]]]],[11,"into_py","","",93,[[["python",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from_py","","",117,[[["python",3]]]],[11,"into_py","","",117,[[["python",3]]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_py","","",94,[[["python",3]]]],[11,"into_py","","",94,[[["python",3]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from_py","","",118,[[["python",3]]]],[11,"into_py","","",118,[[["python",3]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_py","","",95,[[["python",3]]]],[11,"into_py","","",95,[[["python",3]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from_py","","",119,[[["python",3]]]],[11,"into_py","","",119,[[["python",3]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from_py","","",96,[[["python",3]]]],[11,"into_py","","",96,[[["python",3]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from_py","","",120,[[["python",3]]]],[11,"into_py","","",120,[[["python",3]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from_py","","",97,[[["python",3]]]],[11,"into_py","","",97,[[["python",3]]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from_py","","",121,[[["python",3]]]],[11,"into_py","","",121,[[["python",3]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from_py","","",98,[[["python",3]]]],[11,"into_py","","",98,[[["python",3]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from_py","","",122,[[["python",3]]]],[11,"into_py","","",122,[[["python",3]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from_py","","",99,[[["python",3]]]],[11,"into_py","","",99,[[["python",3]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from_py","","",123,[[["python",3]]]],[11,"into_py","","",123,[[["python",3]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from_py","","",100,[[["python",3]]]],[11,"into_py","","",100,[[["python",3]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from_py","","",124,[[["python",3]]]],[11,"into_py","","",124,[[["python",3]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from_py","","",101,[[["python",3]]]],[11,"into_py","","",101,[[["python",3]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from_py","","",125,[[["python",3]]]],[11,"into_py","","",125,[[["python",3]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from_py","","",102,[[["python",3]]]],[11,"into_py","","",102,[[["python",3]]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from_py","","",126,[[["python",3]]]],[11,"into_py","","",126,[[["python",3]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from_py","","",103,[[["python",3]]]],[11,"into_py","","",103,[[["python",3]]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from_py","","",127,[[["python",3]]]],[11,"into_py","","",127,[[["python",3]]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from_py","","",104,[[["python",3]]]],[11,"into_py","","",104,[[["python",3]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from_py","","",128,[[["python",3]]]],[11,"into_py","","",128,[[["python",3]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from_py","","",105,[[["python",3]]]],[11,"into_py","","",105,[[["python",3]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from_py","","",129,[[["python",3]]]],[11,"into_py","","",129,[[["python",3]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from_py","","",106,[[["python",3]]]],[11,"into_py","","",106,[[["python",3]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from_py","","",130,[[["python",3]]]],[11,"into_py","","",130,[[["python",3]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from_py","","",107,[[["python",3]]]],[11,"into_py","","",107,[[["python",3]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from_py","","",131,[[["python",3]]]],[11,"into_py","","",131,[[["python",3]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from_py","","",108,[[["python",3]]]],[11,"into_py","","",108,[[["python",3]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from_py","","",132,[[["python",3]]]],[11,"into_py","","",132,[[["python",3]]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from_py","","",109,[[["python",3]]]],[11,"into_py","","",109,[[["python",3]]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from_py","","",133,[[["python",3]]]],[11,"into_py","","",133,[[["python",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_py","","",110,[[["python",3]]]],[11,"into_py","","",110,[[["python",3]]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from_py","","",134,[[["python",3]]]],[11,"into_py","","",134,[[["python",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from_py","","",111,[[["python",3]]]],[11,"into_py","","",111,[[["python",3]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from_py","","",135,[[["python",3]]]],[11,"into_py","","",135,[[["python",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from_py","","",112,[[["python",3]]]],[11,"into_py","","",112,[[["python",3]]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from_py","","",136,[[["python",3]]]],[11,"into_py","","",136,[[["python",3]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from_py","","",113,[[["python",3]]]],[11,"into_py","","",113,[[["python",3]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from_py","","",137,[[["python",3]]]],[11,"into_py","","",137,[[["python",3]]]],[11,"from","tvm::ir::ty","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from_py","","",138,[[["python",3]]]],[11,"into_py","","",138,[[["python",3]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from_py","","",185,[[["python",3]]]],[11,"into_py","","",185,[[["python",3]]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from_py","","",139,[[["python",3]]]],[11,"into_py","","",139,[[["python",3]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from_py","","",186,[[["python",3]]]],[11,"into_py","","",186,[[["python",3]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_py","","",140,[[["python",3]]]],[11,"into_py","","",140,[[["python",3]]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from_py","","",187,[[["python",3]]]],[11,"into_py","","",187,[[["python",3]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_py","","",141,[[["python",3]]]],[11,"into_py","","",141,[[["python",3]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from_py","","",188,[[["python",3]]]],[11,"into_py","","",188,[[["python",3]]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_py","","",142,[[["python",3]]]],[11,"into_py","","",142,[[["python",3]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from_py","","",189,[[["python",3]]]],[11,"into_py","","",189,[[["python",3]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_py","","",143,[[["python",3]]]],[11,"into_py","","",143,[[["python",3]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_py","","",151,[[["python",3]]]],[11,"into_py","","",151,[[["python",3]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_py","","",144,[[["python",3]]]],[11,"into_py","","",144,[[["python",3]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from_py","","",190,[[["python",3]]]],[11,"into_py","","",190,[[["python",3]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_py","","",145,[[["python",3]]]],[11,"into_py","","",145,[[["python",3]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from_py","","",191,[[["python",3]]]],[11,"into_py","","",191,[[["python",3]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_py","","",146,[[["python",3]]]],[11,"into_py","","",146,[[["python",3]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from_py","","",192,[[["python",3]]]],[11,"into_py","","",192,[[["python",3]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_py","","",147,[[["python",3]]]],[11,"into_py","","",147,[[["python",3]]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from_py","","",193,[[["python",3]]]],[11,"into_py","","",193,[[["python",3]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_py","","",148,[[["python",3]]]],[11,"into_py","","",148,[[["python",3]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from_py","","",194,[[["python",3]]]],[11,"into_py","","",194,[[["python",3]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_py","","",149,[[["python",3]]]],[11,"into_py","","",149,[[["python",3]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_py","","",152,[[["python",3]]]],[11,"into_py","","",152,[[["python",3]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_py","","",150,[[["python",3]]]],[11,"into_py","","",150,[[["python",3]]]],[11,"from","tvm::runtime","",195,[[]]],[11,"into","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from_py","","",195,[[["python",3]]]],[11,"into_py","","",195,[[["python",3]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_py","","",155,[[["python",3]]]],[11,"into_py","","",155,[[["python",3]]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from_py","","",196,[[["python",3]]]],[11,"into_py","","",196,[[["python",3]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from_py","","",197,[[["python",3]]]],[11,"into_py","","",197,[[["python",3]]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"to_string","","",198,[[],["string",3]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from_py","","",198,[[["python",3]]]],[11,"into_py","","",198,[[["python",3]]]],[11,"from","tvm::runtime::array","",199,[[]]],[11,"into","","",199,[[]]],[11,"into_iter","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from_py","","",199,[[["python",3]]]],[11,"into_py","","",199,[[["python",3]]]],[11,"into_py_dict","","",199,[[["python",3]],["pydict",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"into_iter","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from_py","","",200,[[["python",3]]]],[11,"into_py","","",200,[[["python",3]]]],[11,"into_py_dict","","",200,[[["python",3]],["pydict",3]]],[11,"from","tvm::runtime::map","",201,[[]]],[11,"into","","",201,[[]]],[11,"into_iter","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from_py","","",201,[[["python",3]]]],[11,"into_py","","",201,[[["python",3]]]],[11,"into_py_dict","","",201,[[["python",3]],["pydict",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"into_iter","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from_py","","",202,[[["python",3]]]],[11,"into_py","","",202,[[["python",3]]]],[11,"into_py_dict","","",202,[[["python",3]],["pydict",3]]],[11,"from","tvm::runtime","",203,[[]]],[11,"into","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from_py","","",203,[[["python",3]]]],[11,"into_py","","",203,[[["python",3]]]],[11,"from","tvm::runtime::graph_rt","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_py","","",156,[[["python",3]]]],[11,"into_py","","",156,[[["python",3]]]],[11,"from","tvm::transform","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_py","","",157,[[["python",3]]]],[11,"into_py","","",157,[[["python",3]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_py","","",158,[[["python",3]]]],[11,"into_py","","",158,[[["python",3]]]],[11,"clone","tvm::runtime::map","",201,[[],["map",3]]],[11,"clone","tvm::runtime","",162,[[],["ndarray",3]]],[11,"clone","","",161,[[],["module",3]]],[11,"clone","tvm::runtime::array","",199,[[],["array",3]]],[11,"clone","tvm::runtime","",198,[[],["string",3]]],[11,"clone","","",196,[[],["objectref",3]]],[11,"clone","","",160,[[],["function",3]]],[11,"clone","","",155,[[],["objectptr",3]]],[11,"from_iter","tvm::runtime::map","",201,[[],["map",3]]],[11,"as_ptr","tvm::runtime","",162,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",162,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",162,[[["option",4],["objectptr",3]],["ndarray",3]]],[11,"as_ptr","","",196,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",196,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",196,[[["objectptr",3],["option",4]],["objectref",3]]],[11,"as_ptr","","",198,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",198,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",198,[[["option",4],["objectptr",3]],["string",3]]],[11,"drop","","",161,[[]]],[11,"drop","","",155,[[]]],[11,"try_from","","",198,[[["argvalue",4]],[["string",3],["result",4],["error",4]]]],[11,"try_from","","",198,[[["retvalue",4]],[["string",3],["result",4],["error",4]]]],[11,"try_from","tvm::runtime::array","",199,[[["retvalue",4]],[["array",3],["result",4],["error",4]]]],[11,"try_from","tvm::runtime","",160,[[["argvalue",4]],[["function",3],["result",4],["error",4]]]],[11,"try_from","","",161,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",162,[[["argvalue",4]],[["error",4],["result",4],["ndarray",3]]]],[11,"try_from","","",155,[[["retvalue",4]],[["objectptr",3],["result",4]]]],[11,"try_from","","",162,[[["retvalue",4]],[["error",4],["result",4],["ndarray",3]]]],[11,"try_from","tvm::runtime::map","",201,[[["retvalue",4]],[["error",4],["result",4],["map",3]]]],[11,"try_from","","",201,[[["argvalue",4]],[["error",4],["result",4],["map",3]]]],[11,"try_from","tvm::runtime","",196,[[["argvalue",4]],[["objectref",3],["error",4],["result",4]]]],[11,"try_from","","",160,[[["argvalue",4]],[["function",3],["result",4],["error",4]]]],[11,"try_from","","",160,[[["retvalue",4]],[["function",3],["result",4],["error",4]]]],[11,"try_from","","",161,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",196,[[["retvalue",4]],[["objectref",3],["error",4],["result",4]]]],[11,"try_from","","",161,[[["retvalue",4]],[["result",4],["module",3]]]],[11,"try_from","tvm::runtime::array","",199,[[["argvalue",4]],[["array",3],["result",4],["error",4]]]],[11,"try_from","tvm::runtime","",155,[[["argvalue",4]],[["objectptr",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::map","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",198,[[]]],[11,"hash","","",160,[[]]],[11,"source","","",3,[[],[["error",8],["option",4]]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"deref","","",196,[[]]],[11,"deref","","",198,[[]]],[11,"deref","","",155,[[]]],[11,"deref","","",162,[[]]],[11,"into_iter","tvm::runtime::map","",201,[[],["intoiter",3]]],[11,"into_iter","tvm::runtime::array","",199,[[]]],[11,"fmt","tvm::runtime","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","tvm::runtime::array","",200,[[],["option",4]]],[11,"next","tvm::runtime::map","",202,[[],["option",4]]],[11,"size_hint","","",202,[[]]],[11,"from","tvm::runtime","",16,[[["string",3]],["retvalue",4]]],[11,"from","","",3,[[["infallible",4]],["error",4]]],[11,"from","","",15,[[["module",3]],["argvalue",4]]],[11,"from","","",15,[[["string",3]],["argvalue",4]]],[11,"from","","",15,[[["objectref",3]],["argvalue",4]]],[11,"from","","",16,[[["array",3]],["retvalue",4]]],[11,"from","","",16,[[["function",3]],["retvalue",4]]],[11,"from","","",3,[[["nulerror",3]],["error",4]]],[11,"from","","",1,[[["shapeerror",3]],["ndarrayerror",4]]],[11,"from","","",3,[[["intostringerror",3]],["error",4]]],[11,"from","","",15,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",15,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",15,[[["module",3]],["argvalue",4]]],[11,"from","","",15,[[["array",3]],["argvalue",4]]],[11,"from","","",198,[[["stringobj",3]],["string",3]]],[11,"from","","",198,[[["objectptr",3],["stringobj",3]],["string",3]]],[11,"from","","",15,[[["objectref",3]],["argvalue",4]]],[11,"from","","",196,[[["object",3],["objectptr",3]],["objectref",3]]],[11,"from","","",1,[[["parsedatatypeerror",4]],["ndarrayerror",4]]],[11,"from","","",15,[[["objectptr",3]],["argvalue",4]]],[11,"from","","",3,[[["valuedowncasterror",3]],["error",4]]],[11,"from","","",198,[[["string",3]],["string",3]]],[11,"from","","",16,[[["objectref",3]],["retvalue",4]]],[11,"from","","",162,[[["ndarraycontainer",3],["objectptr",3]],["ndarray",3]]],[11,"from","","",15,[[["map",3]],["argvalue",4]]],[11,"from","","",162,[[["ndarraycontainer",3]],["ndarray",3]]],[11,"from","","",16,[[["ndarray",3]],["retvalue",4]]],[11,"from","","",196,[[["object",3]],["objectref",3]]],[11,"from","","",15,[[["function",3]],["argvalue",4]]],[11,"from","","",16,[[["map",3]],["retvalue",4]]],[11,"from","","",16,[[["module",3]],["retvalue",4]]],[11,"from","","",3,[[["ndarrayerror",4]],["error",4]]],[11,"from","","",16,[[["objectptr",3]],["retvalue",4]]],[11,"from","","",15,[[["string",3]],["argvalue",4]]],[11,"from","","",198,[[],["string",3]]],[11,"partial_cmp","","",198,[[],[["ordering",4],["option",4]]]],[11,"cmp","","",198,[[["string",3]],["ordering",4]]],[11,"as_ref","tvm::runtime::ndarray","",165,[[]]],[11,"as_ref","tvm::runtime","",197,[[]]],[11,"as_ref","","",195,[[],["object",3]]],[11,"as_ref","tvm::runtime::ndarray","",165,[[],["ndarraycontainer",3]]],[11,"as_ref","tvm::runtime","",198,[[]]],[11,"as_ref","","",197,[[],["stringobj",3]]],[11,"eq","","",198,[[]]],[11,"eq","","",4,[[["context",3]]]],[11,"ne","","",4,[[["context",3]]]],[11,"eq","tvm::runtime::function::ffi","",10,[[["dltensor",3]]]],[11,"ne","","",10,[[["dltensor",3]]]],[11,"eq","tvm::runtime","",5,[[["devicetype",4]]]],[11,"eq","tvm::runtime::function::ffi","",11,[[["dlmanagedtensor",3]]]],[11,"ne","","",11,[[["dlmanagedtensor",3]]]],[11,"eq","","",8,[[["dlcontext",3]]]],[11,"ne","","",8,[[["dlcontext",3]]]],[11,"eq","","",9,[[["dldatatype",3]]]],[11,"ne","","",9,[[["dldatatype",3]]]],[11,"eq","","",14,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",14,[[["tvmparallelgroupenv",3]]]],[11,"eq","","",13,[[["tvmbytearray",3]]]],[11,"ne","","",13,[[["tvmbytearray",3]]]],[11,"eq","tvm::runtime","",163,[[["datatype",3]]]],[11,"ne","","",163,[[["datatype",3]]]],[11,"clone","tvm::runtime::function::ffi","",13,[[],["tvmbytearray",3]]],[11,"clone","tvm::runtime","",4,[[],["context",3]]],[11,"clone","","",5,[[],["devicetype",4]]],[11,"clone","tvm::runtime::function::ffi","",14,[[],["tvmparallelgroupenv",3]]],[11,"clone","","",11,[[],["dlmanagedtensor",3]]],[11,"clone","","",12,[[],["tvmvalue",19]]],[11,"clone","","",9,[[],["dldatatype",3]]],[11,"clone","","",8,[[],["dlcontext",3]]],[11,"clone","tvm::runtime","",16,[[],["retvalue",4]]],[11,"clone","","",163,[[],["datatype",3]]],[11,"clone","tvm::runtime::function::ffi","",10,[[],["dltensor",3]]],[11,"clone","tvm::runtime","",15,[[],["argvalue",4]]],[11,"fmt","tvm::runtime::function::ffi","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::function::ffi","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::context","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::function::ffi","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","tvm::runtime::function::ffi","",9,[[["argvalue",4]],[["dldatatype",3],["result",4]]]],[11,"try_from","","",9,[[["retvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","","",9,[[["argvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","tvm::runtime","",16,[[["result",4]],[["retvalue",4],["result",4]]]],[11,"try_from","","",4,[[["retvalue",4]],[["context",3],["result",4],["error",3]]]],[11,"try_from","","",203,[[["argvalue",4]],[["bytearray",3],["result",4]]]],[11,"try_from","tvm::runtime::function::ffi","",13,[[["retvalue",4]],[["tvmbytearray",3],["result",4]]]],[11,"try_from","","",8,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","","",8,[[["retvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","tvm::runtime","",163,[[["retvalue",4]],[["datatype",3],["result",4],["error",3]]]],[11,"try_from","tvm::runtime::function::ffi","",8,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","tvm::runtime","",203,[[["retvalue",4]],[["bytearray",3],["result",4]]]],[11,"default","","",4,[[],["context",3]]],[11,"default","","default device is cpu.",5,[[],["devicetype",4]]],[11,"default","tvm::runtime::function::ffi","",14,[[],["tvmparallelgroupenv",3]]],[11,"default","","",12,[[],["tvmvalue",19]]],[11,"default","","",8,[[],["dlcontext",3]]],[11,"default","","",10,[[],["dltensor",3]]],[11,"default","","",13,[[],["tvmbytearray",3]]],[11,"default","","",9,[[],["dldatatype",3]]],[11,"default","tvm::runtime","",16,[[],["retvalue",4]]],[11,"default","tvm::runtime::function::ffi","",11,[[],["dlmanagedtensor",3]]],[11,"hash","tvm::runtime","",163,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",4,[[]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime::context","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm::runtime","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",16,[[["tvmbytearray",3]],["retvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","","",16,[[["dldatatype",3]],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[["string",3]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[["dlcontext",3]],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[["tvmbytearray",3]],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",5,[[],["devicetype",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",4,[[["dlcontext",3]],["context",3]]],[11,"from","tvm::runtime::function::ffi","",8,[[["tvmvalue",19]],["dlcontext",3]]],[11,"from","tvm::runtime","",15,[[],["argvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[["dlcontext",3]],["retvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[["cstring",3]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",9,[[["tvmvalue",19]],["dldatatype",3]]],[11,"from","tvm::runtime","",16,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",15,[[],["argvalue",4]]],[11,"from","","",203,[[],["bytearray",3]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","","",10,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",15,[[["context",3]],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",9,[[["datatype",3]],["dldatatype",3]]],[11,"from","tvm::runtime","",16,[[],["retvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",16,[[["datatype",3]],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm::runtime","",163,[[["dldatatype",3]],["datatype",3]]],[11,"from","","",15,[[["devicetype",4]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",8,[[["context",3]],["dlcontext",3]]],[11,"from","tvm::runtime","",15,[[],["argvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",10,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",8,[[["context",3]],["dlcontext",3]]],[11,"from","tvm::runtime","",5,[[],["devicetype",4]]],[11,"from","","",15,[[["dltensor",3]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",9,[[["datatype",3]],["dldatatype",3]]],[11,"from","","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",16,[[["context",3]],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",16,[[["bytearray",3]],["retvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",16,[[],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",4,[[],["context",3]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[["dldatatype",3]],["argvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[],["tvmvalue",19]]],[11,"from","tvm::runtime","",16,[[],["retvalue",4]]],[11,"from","tvm::runtime::function::ffi","",12,[[["dldatatype",3]],["tvmvalue",19]]],[11,"from","tvm::runtime","",15,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",15,[[["cstr",3]],["argvalue",4]]],[11,"from","","",16,[[["string",3]],["retvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"from","","",15,[[["bytearray",3]],["argvalue",4]]],[11,"from","","",15,[[["context",3]],["argvalue",4]]],[11,"from","","",15,[[],["argvalue",4]]],[11,"partial_cmp","","",163,[[["datatype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",163,[[["datatype",3]]]],[11,"le","","",163,[[["datatype",3]]]],[11,"gt","","",163,[[["datatype",3]]]],[11,"ge","","",163,[[["datatype",3]]]],[11,"cmp","","",163,[[["datatype",3]],["ordering",4]]],[11,"from_str","","",163,[[],[["datatype",3],["result",4]]]],[11,"from_str","tvm::runtime::function::ffi","",8,[[],[["dlcontext",3],["result",4]]]],[11,"from_str","tvm::runtime","",4,[[],[["context",3],["result",4]]]],[11,"as_ref","tvm::ir::arith","",18,[[]]],[11,"as_ref","","",18,[[]]],[11,"as_ref","tvm::ir::attrs","",20,[[]]],[11,"as_ref","","",20,[[]]],[11,"as_ref","tvm::ir::diagnostics","",21,[[]]],[11,"as_ref","","",21,[[]]],[11,"as_ref","","",23,[[]]],[11,"as_ref","","",23,[[]]],[11,"as_ref","","",24,[[]]],[11,"as_ref","","",24,[[]]],[11,"as_ref","tvm::ir::expr","",29,[[]]],[11,"as_ref","","",29,[[]]],[11,"as_ref","","",30,[[]]],[11,"as_ref","","",30,[[]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","tvm::ir::function","",33,[[]]],[11,"as_ref","","",33,[[]]],[11,"as_ref","tvm::ir::module","",34,[[]]],[11,"as_ref","","",34,[[]]],[11,"as_ref","tvm::ir::op","",37,[[]]],[11,"as_ref","","",37,[[]]],[11,"as_ref","tvm::ir::relay::attrs::nn","",59,[[]]],[11,"as_ref","","",59,[[]]],[11,"as_ref","","",60,[[]]],[11,"as_ref","","",60,[[]]],[11,"as_ref","","",61,[[]]],[11,"as_ref","","",61,[[]]],[11,"as_ref","","",62,[[]]],[11,"as_ref","","",62,[[]]],[11,"as_ref","","",63,[[]]],[11,"as_ref","","",63,[[]]],[11,"as_ref","","",64,[[]]],[11,"as_ref","","",64,[[]]],[11,"as_ref","","",65,[[]]],[11,"as_ref","","",65,[[]]],[11,"as_ref","tvm::ir::relay::attrs::transform","",66,[[]]],[11,"as_ref","","",66,[[]]],[11,"as_ref","tvm::ir::relay","",38,[[]]],[11,"as_ref","","",38,[[]]],[11,"as_ref","","",39,[[]]],[11,"as_ref","","",39,[[]]],[11,"as_ref","","",40,[[]]],[11,"as_ref","","",40,[[]]],[11,"as_ref","","",41,[[]]],[11,"as_ref","","",41,[[]]],[11,"as_ref","","",42,[[]]],[11,"as_ref","","",42,[[]]],[11,"as_ref","","",43,[[]]],[11,"as_ref","","",43,[[]]],[11,"as_ref","","",44,[[]]],[11,"as_ref","","",44,[[]]],[11,"as_ref","","",45,[[]]],[11,"as_ref","","",45,[[]]],[11,"as_ref","","",46,[[]]],[11,"as_ref","","",46,[[]]],[11,"as_ref","","",47,[[]]],[11,"as_ref","","",47,[[]]],[11,"as_ref","","",48,[[]]],[11,"as_ref","","",48,[[]]],[11,"as_ref","","",49,[[]]],[11,"as_ref","","",49,[[]]],[11,"as_ref","","",50,[[]]],[11,"as_ref","","",50,[[]]],[11,"as_ref","","",51,[[]]],[11,"as_ref","","",51,[[]]],[11,"as_ref","","",52,[[]]],[11,"as_ref","","",52,[[]]],[11,"as_ref","","",53,[[]]],[11,"as_ref","","",53,[[]]],[11,"as_ref","","",54,[[]]],[11,"as_ref","","",54,[[]]],[11,"as_ref","","",55,[[]]],[11,"as_ref","","",55,[[]]],[11,"as_ref","","",56,[[]]],[11,"as_ref","","",56,[[]]],[11,"as_ref","","",57,[[]]],[11,"as_ref","","",57,[[]]],[11,"as_ref","","",58,[[]]],[11,"as_ref","","",58,[[]]],[11,"as_ref","tvm::ir::source_map","",85,[[]]],[11,"as_ref","","",85,[[]]],[11,"as_ref","","",86,[[]]],[11,"as_ref","","",86,[[]]],[11,"as_ref","tvm::ir::span","",87,[[]]],[11,"as_ref","","",87,[[]]],[11,"as_ref","","",88,[[]]],[11,"as_ref","","",88,[[]]],[11,"as_ref","tvm::ir::tir","",90,[[]]],[11,"as_ref","","",90,[[]]],[11,"as_ref","","",91,[[]]],[11,"as_ref","","",91,[[]]],[11,"as_ref","","",92,[[]]],[11,"as_ref","","",92,[[]]],[11,"as_ref","","",93,[[]]],[11,"as_ref","","",93,[[]]],[11,"as_ref","","",94,[[]]],[11,"as_ref","","",94,[[]]],[11,"as_ref","","",95,[[]]],[11,"as_ref","","",95,[[]]],[11,"as_ref","","",96,[[]]],[11,"as_ref","","",96,[[]]],[11,"as_ref","","",97,[[]]],[11,"as_ref","","",97,[[]]],[11,"as_ref","","",98,[[]]],[11,"as_ref","","",98,[[]]],[11,"as_ref","","",99,[[]]],[11,"as_ref","","",99,[[]]],[11,"as_ref","","",100,[[]]],[11,"as_ref","","",100,[[]]],[11,"as_ref","","",101,[[]]],[11,"as_ref","","",101,[[]]],[11,"as_ref","","",102,[[]]],[11,"as_ref","","",102,[[]]],[11,"as_ref","","",103,[[]]],[11,"as_ref","","",103,[[]]],[11,"as_ref","","",104,[[]]],[11,"as_ref","","",104,[[]]],[11,"as_ref","","",105,[[]]],[11,"as_ref","","",105,[[]]],[11,"as_ref","","",106,[[]]],[11,"as_ref","","",106,[[]]],[11,"as_ref","","",107,[[]]],[11,"as_ref","","",107,[[]]],[11,"as_ref","","",108,[[]]],[11,"as_ref","","",108,[[]]],[11,"as_ref","","",109,[[]]],[11,"as_ref","","",109,[[]]],[11,"as_ref","","",110,[[]]],[11,"as_ref","","",110,[[]]],[11,"as_ref","","",111,[[]]],[11,"as_ref","","",111,[[]]],[11,"as_ref","","",112,[[]]],[11,"as_ref","","",112,[[]]],[11,"as_ref","","",113,[[]]],[11,"as_ref","","",113,[[]]],[11,"as_ref","tvm::ir::ty","",138,[[]]],[11,"as_ref","","",138,[[]]],[11,"as_ref","","",139,[[]]],[11,"as_ref","","",139,[[]]],[11,"as_ref","","",140,[[]]],[11,"as_ref","","",140,[[]]],[11,"as_ref","","",141,[[]]],[11,"as_ref","","",141,[[]]],[11,"as_ref","","",142,[[]]],[11,"as_ref","","",142,[[]]],[11,"as_ref","","",143,[[]]],[11,"as_ref","","",143,[[]]],[11,"as_ref","","",144,[[]]],[11,"as_ref","","",144,[[]]],[11,"as_ref","","",145,[[]]],[11,"as_ref","","",145,[[]]],[11,"as_ref","","",146,[[]]],[11,"as_ref","","",146,[[]]],[11,"as_ref","","",147,[[]]],[11,"as_ref","","",147,[[]]],[11,"as_ref","","",148,[[]]],[11,"as_ref","","",148,[[]]],[11,"as_ref","","",149,[[]]],[11,"as_ref","","",149,[[]]],[11,"as_ref","tvm::transform","",157,[[]]],[11,"as_ref","","",157,[[]]],[11,"from","tvm::ir::arith","",19,[[["constintboundnode",3]]]],[11,"from","","",19,[[["objectptr",3],["constintboundnode",3]]]],[11,"from","tvm::runtime","",15,[[["constintbound",3]],["argvalue",4]]],[11,"from","","",15,[[["constintbound",3]],["argvalue",4]]],[11,"from","","",16,[[["constintbound",3]],["retvalue",4]]],[11,"from","tvm::ir::attrs","",166,[[["baseattrsnode",3]]]],[11,"from","","",166,[[["objectptr",3],["baseattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["attrs",3]],["argvalue",4]]],[11,"from","","",15,[[["attrs",3]],["argvalue",4]]],[11,"from","","",16,[[["attrs",3]],["retvalue",4]]],[11,"from","tvm::ir::diagnostics","",26,[[["diagnosticnode",3]]]],[11,"from","","",26,[[["objectptr",3],["diagnosticnode",3]]]],[11,"from","tvm::runtime","",15,[[["diagnostic",3]],["argvalue",4]]],[11,"from","","",15,[[["diagnostic",3]],["argvalue",4]]],[11,"from","","",16,[[["diagnostic",3]],["retvalue",4]]],[11,"from","tvm::ir::diagnostics","",27,[[["diagnosticrenderernode",3]]]],[11,"from","","",27,[[["diagnosticrenderernode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["diagnosticrenderer",3]],["argvalue",4]]],[11,"from","","",15,[[["diagnosticrenderer",3]],["argvalue",4]]],[11,"from","","",16,[[["diagnosticrenderer",3]],["retvalue",4]]],[11,"from","tvm::ir::diagnostics","",28,[[["diagnosticcontextnode",3]]]],[11,"from","","",28,[[["objectptr",3],["diagnosticcontextnode",3]]]],[11,"from","tvm::runtime","",15,[[["diagnosticcontext",3]],["argvalue",4]]],[11,"from","","",15,[[["diagnosticcontext",3]],["argvalue",4]]],[11,"from","","",16,[[["diagnosticcontext",3]],["retvalue",4]]],[11,"from","tvm::ir::expr","",167,[[["baseexprnode",3]]]],[11,"from","","",167,[[["objectptr",3],["baseexprnode",3]]]],[11,"from","tvm::runtime","",15,[[["baseexpr",3]],["argvalue",4]]],[11,"from","","",15,[[["baseexpr",3]],["argvalue",4]]],[11,"from","","",16,[[["baseexpr",3]],["retvalue",4]]],[11,"from","tvm::ir::expr","",168,[[["primexprnode",3]]]],[11,"from","","",168,[[["objectptr",3],["primexprnode",3]]]],[11,"from","tvm::runtime","",15,[[["primexpr",3]],["argvalue",4]]],[11,"from","","",15,[[["primexpr",3]],["argvalue",4]]],[11,"from","","",16,[[["primexpr",3]],["retvalue",4]]],[11,"from","tvm::ir::expr","",32,[[["globalvarnode",3]]]],[11,"from","","",32,[[["objectptr",3],["globalvarnode",3]]]],[11,"from","tvm::runtime","",15,[[["globalvar",3]],["argvalue",4]]],[11,"from","","",15,[[["globalvar",3]],["argvalue",4]]],[11,"from","","",16,[[["globalvar",3]],["retvalue",4]]],[11,"from","tvm::ir::function","",169,[[["basefuncnode",3]]]],[11,"from","","",169,[[["objectptr",3],["basefuncnode",3]]]],[11,"from","tvm::runtime","",15,[[["basefunc",3]],["argvalue",4]]],[11,"from","","",15,[[["basefunc",3]],["argvalue",4]]],[11,"from","","",16,[[["basefunc",3]],["retvalue",4]]],[11,"from","tvm::ir::module","",35,[[["error",3]]]],[11,"from","","",35,[[["error",4]]]],[11,"from","","",36,[[["irmodulenode",3]]]],[11,"from","","",36,[[["objectptr",3],["irmodulenode",3]]]],[11,"from","tvm::runtime","",15,[[["irmodule",3]],["argvalue",4]]],[11,"from","","",15,[[["irmodule",3]],["argvalue",4]]],[11,"from","","",16,[[["irmodule",3]],["retvalue",4]]],[11,"from","tvm::ir::op","",170,[[["opnode",3]]]],[11,"from","","",170,[[["opnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["op",3]],["argvalue",4]]],[11,"from","","",15,[[["op",3]],["argvalue",4]]],[11,"from","","",16,[[["op",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",174,[[["conv2dattrsnode",3]]]],[11,"from","","",174,[[["objectptr",3],["conv2dattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["conv2dattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["conv2dattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["conv2dattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",175,[[["biasaddattrsnode",3]]]],[11,"from","","",175,[[["objectptr",3],["biasaddattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["biasaddattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["biasaddattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["biasaddattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",176,[[["denseattrsnode",3]]]],[11,"from","","",176,[[["denseattrsnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["denseattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["denseattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["denseattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",177,[[["globalpool2dattrsnode",3]]]],[11,"from","","",177,[[["objectptr",3],["globalpool2dattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["globalpool2dattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["globalpool2dattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["globalpool2dattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",178,[[["maxpool2dattrsnode",3]]]],[11,"from","","",178,[[["objectptr",3],["maxpool2dattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["maxpool2dattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["maxpool2dattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["maxpool2dattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",179,[[["softmaxattrsnode",3]]]],[11,"from","","",179,[[["softmaxattrsnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["softmaxattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["softmaxattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["softmaxattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::nn","",180,[[["batchnormattrsnode",3]]]],[11,"from","","",180,[[["objectptr",3],["batchnormattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["batchnormattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["batchnormattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["batchnormattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay::attrs::transform","",181,[[["expanddimsattrsnode",3]]]],[11,"from","","",181,[[["objectptr",3],["expanddimsattrsnode",3]]]],[11,"from","tvm::runtime","",15,[[["expanddimsattrs",3]],["argvalue",4]]],[11,"from","","",15,[[["expanddimsattrs",3]],["argvalue",4]]],[11,"from","","",16,[[["expanddimsattrs",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",171,[[["exprnode",3]]]],[11,"from","","",171,[[["objectptr",3],["exprnode",3]]]],[11,"from","tvm::runtime","",15,[[["expr",3]],["argvalue",4]]],[11,"from","","",15,[[["expr",3]],["argvalue",4]]],[11,"from","","",16,[[["expr",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",172,[[["idnode",3]]]],[11,"from","","",172,[[["objectptr",3],["idnode",3]]]],[11,"from","tvm::runtime","",15,[[["id",3]],["argvalue",4]]],[11,"from","","",15,[[["id",3]],["argvalue",4]]],[11,"from","","",16,[[["id",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",67,[[["constantnode",3]]]],[11,"from","","",67,[[["objectptr",3],["constantnode",3]]]],[11,"from","tvm::runtime","",15,[[["constant",3]],["argvalue",4]]],[11,"from","","",15,[[["constant",3]],["argvalue",4]]],[11,"from","","",16,[[["constant",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",68,[[["tuplenode",3]]]],[11,"from","","",68,[[["tuplenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["tuple",3]],["argvalue",4]]],[11,"from","","",15,[[["tuple",3]],["argvalue",4]]],[11,"from","","",16,[[["tuple",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",69,[[["varnode",3]]]],[11,"from","","",69,[[["varnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["var",3]],["argvalue",4]]],[11,"from","","",15,[[["var",3]],["argvalue",4]]],[11,"from","","",16,[[["var",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",70,[[["callnode",3]]]],[11,"from","","",70,[[["objectptr",3],["callnode",3]]]],[11,"from","tvm::runtime","",15,[[["call",3]],["argvalue",4]]],[11,"from","","",15,[[["call",3]],["argvalue",4]]],[11,"from","","",16,[[["call",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",71,[[["letnode",3]]]],[11,"from","","",71,[[["letnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["let",3]],["argvalue",4]]],[11,"from","","",15,[[["let",3]],["argvalue",4]]],[11,"from","","",16,[[["let",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",72,[[["ifnode",3]]]],[11,"from","","",72,[[["ifnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["if",3]],["argvalue",4]]],[11,"from","","",15,[[["if",3]],["argvalue",4]]],[11,"from","","",16,[[["if",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",73,[[["tuplegetitemnode",3]]]],[11,"from","","",73,[[["objectptr",3],["tuplegetitemnode",3]]]],[11,"from","tvm::runtime","",15,[[["tuplegetitem",3]],["argvalue",4]]],[11,"from","","",15,[[["tuplegetitem",3]],["argvalue",4]]],[11,"from","","",16,[[["tuplegetitem",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",74,[[["refcreatenode",3]]]],[11,"from","","",74,[[["objectptr",3],["refcreatenode",3]]]],[11,"from","tvm::runtime","",15,[[["refcreate",3]],["argvalue",4]]],[11,"from","","",15,[[["refcreate",3]],["argvalue",4]]],[11,"from","","",16,[[["refcreate",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",75,[[["refreadnode",3]]]],[11,"from","","",75,[[["objectptr",3],["refreadnode",3]]]],[11,"from","tvm::runtime","",15,[[["refread",3]],["argvalue",4]]],[11,"from","","",15,[[["refread",3]],["argvalue",4]]],[11,"from","","",16,[[["refread",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",76,[[["refwritenode",3]]]],[11,"from","","",76,[[["objectptr",3],["refwritenode",3]]]],[11,"from","tvm::runtime","",15,[[["refwrite",3]],["argvalue",4]]],[11,"from","","",15,[[["refwrite",3]],["argvalue",4]]],[11,"from","","",16,[[["refwrite",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",77,[[["constructornode",3]]]],[11,"from","","",77,[[["constructornode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["constructor",3]],["argvalue",4]]],[11,"from","","",15,[[["constructor",3]],["argvalue",4]]],[11,"from","","",16,[[["constructor",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",173,[[["patternnode",3]]]],[11,"from","","",173,[[["objectptr",3],["patternnode",3]]]],[11,"from","tvm::runtime","",15,[[["pattern",3]],["argvalue",4]]],[11,"from","","",15,[[["pattern",3]],["argvalue",4]]],[11,"from","","",16,[[["pattern",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",78,[[["patternwildcardnode",3]]]],[11,"from","","",78,[[["objectptr",3],["patternwildcardnode",3]]]],[11,"from","tvm::runtime","",15,[[["patternwildcard",3]],["argvalue",4]]],[11,"from","","",15,[[["patternwildcard",3]],["argvalue",4]]],[11,"from","","",16,[[["patternwildcard",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",79,[[["patternvarnode",3]]]],[11,"from","","",79,[[["objectptr",3],["patternvarnode",3]]]],[11,"from","tvm::runtime","",15,[[["patternvar",3]],["argvalue",4]]],[11,"from","","",15,[[["patternvar",3]],["argvalue",4]]],[11,"from","","",16,[[["patternvar",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",80,[[["patternconstructornode",3]]]],[11,"from","","",80,[[["patternconstructornode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["patternconstructor",3]],["argvalue",4]]],[11,"from","","",15,[[["patternconstructor",3]],["argvalue",4]]],[11,"from","","",16,[[["patternconstructor",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",81,[[["patterntuplenode",3]]]],[11,"from","","",81,[[["patterntuplenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["patterntuple",3]],["argvalue",4]]],[11,"from","","",15,[[["patterntuple",3]],["argvalue",4]]],[11,"from","","",16,[[["patterntuple",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",82,[[["clausenode",3]]]],[11,"from","","",82,[[["objectptr",3],["clausenode",3]]]],[11,"from","tvm::runtime","",15,[[["clause",3]],["argvalue",4]]],[11,"from","","",15,[[["clause",3]],["argvalue",4]]],[11,"from","","",16,[[["clause",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",83,[[["matchnode",3]]]],[11,"from","","",83,[[["objectptr",3],["matchnode",3]]]],[11,"from","tvm::runtime","",15,[[["match",3]],["argvalue",4]]],[11,"from","","",15,[[["match",3]],["argvalue",4]]],[11,"from","","",16,[[["match",3]],["retvalue",4]]],[11,"from","tvm::ir::relay","",84,[[["functionnode",3]]]],[11,"from","","",84,[[["objectptr",3],["functionnode",3]]]],[11,"from","tvm::runtime","",15,[[["function",3]],["argvalue",4]]],[11,"from","","",15,[[["function",3]],["argvalue",4]]],[11,"from","","",16,[[["function",3]],["retvalue",4]]],[11,"from","tvm::ir::source_map","",182,[[["sourcenode",3]]]],[11,"from","","",182,[[["sourcenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["source",3]],["argvalue",4]]],[11,"from","","",15,[[["source",3]],["argvalue",4]]],[11,"from","","",16,[[["source",3]],["retvalue",4]]],[11,"from","tvm::ir::source_map","",183,[[["sourcemapnode",3]]]],[11,"from","","",183,[[["sourcemapnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["sourcemap",3]],["argvalue",4]]],[11,"from","","",15,[[["sourcemap",3]],["argvalue",4]]],[11,"from","","",16,[[["sourcemap",3]],["retvalue",4]]],[11,"from","tvm::ir::span","",184,[[["sourcenamenode",3]]]],[11,"from","","",184,[[["sourcenamenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["sourcename",3]],["argvalue",4]]],[11,"from","","",15,[[["sourcename",3]],["argvalue",4]]],[11,"from","","",16,[[["sourcename",3]],["retvalue",4]]],[11,"from","tvm::ir::span","",89,[[["spannode",3]]]],[11,"from","","",89,[[["spannode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["span",3]],["argvalue",4]]],[11,"from","","",15,[[["span",3]],["argvalue",4]]],[11,"from","","",16,[[["span",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",114,[[["intimmnode",3]]]],[11,"from","","",114,[[["intimmnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["intimm",3]],["argvalue",4]]],[11,"from","","",15,[[["intimm",3]],["argvalue",4]]],[11,"from","","",16,[[["intimm",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",115,[[["varnode",3]]]],[11,"from","","",115,[[["objectptr",3],["varnode",3]]]],[11,"from","tvm::runtime","",15,[[["var",3]],["argvalue",4]]],[11,"from","","",15,[[["var",3]],["argvalue",4]]],[11,"from","","",16,[[["var",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",116,[[["addnode",3]]]],[11,"from","","",116,[[["objectptr",3],["addnode",3]]]],[11,"from","tvm::runtime","",15,[[["add",3]],["argvalue",4]]],[11,"from","","",15,[[["add",3]],["argvalue",4]]],[11,"from","","",16,[[["add",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",117,[[["subnode",3]]]],[11,"from","","",117,[[["objectptr",3],["subnode",3]]]],[11,"from","tvm::runtime","",15,[[["sub",3]],["argvalue",4]]],[11,"from","","",15,[[["sub",3]],["argvalue",4]]],[11,"from","","",16,[[["sub",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",118,[[["mulnode",3]]]],[11,"from","","",118,[[["objectptr",3],["mulnode",3]]]],[11,"from","tvm::runtime","",15,[[["mul",3]],["argvalue",4]]],[11,"from","","",15,[[["mul",3]],["argvalue",4]]],[11,"from","","",16,[[["mul",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",119,[[["divnode",3]]]],[11,"from","","",119,[[["objectptr",3],["divnode",3]]]],[11,"from","tvm::runtime","",15,[[["div",3]],["argvalue",4]]],[11,"from","","",15,[[["div",3]],["argvalue",4]]],[11,"from","","",16,[[["div",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",120,[[["modnode",3]]]],[11,"from","","",120,[[["objectptr",3],["modnode",3]]]],[11,"from","tvm::runtime","",15,[[["mod",3]],["argvalue",4]]],[11,"from","","",15,[[["mod",3]],["argvalue",4]]],[11,"from","","",16,[[["mod",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",121,[[["floordivnode",3]]]],[11,"from","","",121,[[["floordivnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["floordiv",3]],["argvalue",4]]],[11,"from","","",15,[[["floordiv",3]],["argvalue",4]]],[11,"from","","",16,[[["floordiv",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",122,[[["floormodnode",3]]]],[11,"from","","",122,[[["objectptr",3],["floormodnode",3]]]],[11,"from","tvm::runtime","",15,[[["floormod",3]],["argvalue",4]]],[11,"from","","",15,[[["floormod",3]],["argvalue",4]]],[11,"from","","",16,[[["floormod",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",123,[[["minnode",3]]]],[11,"from","","",123,[[["objectptr",3],["minnode",3]]]],[11,"from","tvm::runtime","",15,[[["min",3]],["argvalue",4]]],[11,"from","","",15,[[["min",3]],["argvalue",4]]],[11,"from","","",16,[[["min",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",124,[[["maxnode",3]]]],[11,"from","","",124,[[["maxnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["max",3]],["argvalue",4]]],[11,"from","","",15,[[["max",3]],["argvalue",4]]],[11,"from","","",16,[[["max",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",125,[[["castnode",3]]]],[11,"from","","",125,[[["objectptr",3],["castnode",3]]]],[11,"from","tvm::runtime","",15,[[["cast",3]],["argvalue",4]]],[11,"from","","",15,[[["cast",3]],["argvalue",4]]],[11,"from","","",16,[[["cast",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",126,[[["rampnode",3]]]],[11,"from","","",126,[[["objectptr",3],["rampnode",3]]]],[11,"from","tvm::runtime","",15,[[["ramp",3]],["argvalue",4]]],[11,"from","","",15,[[["ramp",3]],["argvalue",4]]],[11,"from","","",16,[[["ramp",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",127,[[["selectnode",3]]]],[11,"from","","",127,[[["objectptr",3],["selectnode",3]]]],[11,"from","tvm::runtime","",15,[[["select",3]],["argvalue",4]]],[11,"from","","",15,[[["select",3]],["argvalue",4]]],[11,"from","","",16,[[["select",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",128,[[["eqnode",3]]]],[11,"from","","",128,[[["eqnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["eq",3]],["argvalue",4]]],[11,"from","","",15,[[["eq",3]],["argvalue",4]]],[11,"from","","",16,[[["eq",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",129,[[["nenode",3]]]],[11,"from","","",129,[[["nenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["ne",3]],["argvalue",4]]],[11,"from","","",15,[[["ne",3]],["argvalue",4]]],[11,"from","","",16,[[["ne",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",130,[[["ltnode",3]]]],[11,"from","","",130,[[["ltnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["lt",3]],["argvalue",4]]],[11,"from","","",15,[[["lt",3]],["argvalue",4]]],[11,"from","","",16,[[["lt",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",131,[[["lenode",3]]]],[11,"from","","",131,[[["objectptr",3],["lenode",3]]]],[11,"from","tvm::runtime","",15,[[["le",3]],["argvalue",4]]],[11,"from","","",15,[[["le",3]],["argvalue",4]]],[11,"from","","",16,[[["le",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",132,[[["gtnode",3]]]],[11,"from","","",132,[[["objectptr",3],["gtnode",3]]]],[11,"from","tvm::runtime","",15,[[["gt",3]],["argvalue",4]]],[11,"from","","",15,[[["gt",3]],["argvalue",4]]],[11,"from","","",16,[[["gt",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",133,[[["genode",3]]]],[11,"from","","",133,[[["genode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["ge",3]],["argvalue",4]]],[11,"from","","",15,[[["ge",3]],["argvalue",4]]],[11,"from","","",16,[[["ge",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",134,[[["andnode",3]]]],[11,"from","","",134,[[["objectptr",3],["andnode",3]]]],[11,"from","tvm::runtime","",15,[[["and",3]],["argvalue",4]]],[11,"from","","",15,[[["and",3]],["argvalue",4]]],[11,"from","","",16,[[["and",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",135,[[["ornode",3]]]],[11,"from","","",135,[[["objectptr",3],["ornode",3]]]],[11,"from","tvm::runtime","",15,[[["or",3]],["argvalue",4]]],[11,"from","","",15,[[["or",3]],["argvalue",4]]],[11,"from","","",16,[[["or",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",136,[[["notnode",3]]]],[11,"from","","",136,[[["objectptr",3],["notnode",3]]]],[11,"from","tvm::runtime","",15,[[["not",3]],["argvalue",4]]],[11,"from","","",15,[[["not",3]],["argvalue",4]]],[11,"from","","",16,[[["not",3]],["retvalue",4]]],[11,"from","tvm::ir::tir","",137,[[["letnode",3]]]],[11,"from","","",137,[[["letnode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["let",3]],["argvalue",4]]],[11,"from","","",15,[[["let",3]],["argvalue",4]]],[11,"from","","",16,[[["let",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",185,[[["typenode",3]]]],[11,"from","","",185,[[["typenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["type",3]],["argvalue",4]]],[11,"from","","",15,[[["type",3]],["argvalue",4]]],[11,"from","","",16,[[["type",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",186,[[["primtypenode",3]]]],[11,"from","","",186,[[["objectptr",3],["primtypenode",3]]]],[11,"from","tvm::runtime","",15,[[["primtype",3]],["argvalue",4]]],[11,"from","","",15,[[["primtype",3]],["argvalue",4]]],[11,"from","","",16,[[["primtype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",187,[[["pointertypenode",3]]]],[11,"from","","",187,[[["pointertypenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["pointertype",3]],["argvalue",4]]],[11,"from","","",15,[[["pointertype",3]],["argvalue",4]]],[11,"from","","",16,[[["pointertype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",188,[[["typevarnode",3]]]],[11,"from","","",188,[[["objectptr",3],["typevarnode",3]]]],[11,"from","tvm::runtime","",15,[[["typevar",3]],["argvalue",4]]],[11,"from","","",15,[[["typevar",3]],["argvalue",4]]],[11,"from","","",16,[[["typevar",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",189,[[["globaltypevarnode",3]]]],[11,"from","","",189,[[["objectptr",3],["globaltypevarnode",3]]]],[11,"from","tvm::runtime","",15,[[["globaltypevar",3]],["argvalue",4]]],[11,"from","","",15,[[["globaltypevar",3]],["argvalue",4]]],[11,"from","","",16,[[["globaltypevar",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",151,[[["tupletypenode",3]]]],[11,"from","","",151,[[["objectptr",3],["tupletypenode",3]]]],[11,"from","tvm::runtime","",15,[[["tupletype",3]],["argvalue",4]]],[11,"from","","",15,[[["tupletype",3]],["argvalue",4]]],[11,"from","","",16,[[["tupletype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",190,[[["typeconstraintnode",3]]]],[11,"from","","",190,[[["objectptr",3],["typeconstraintnode",3]]]],[11,"from","tvm::runtime","",15,[[["typeconstraint",3]],["argvalue",4]]],[11,"from","","",15,[[["typeconstraint",3]],["argvalue",4]]],[11,"from","","",16,[[["typeconstraint",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",191,[[["functypenode",3]]]],[11,"from","","",191,[[["objectptr",3],["functypenode",3]]]],[11,"from","tvm::runtime","",15,[[["functype",3]],["argvalue",4]]],[11,"from","","",15,[[["functype",3]],["argvalue",4]]],[11,"from","","",16,[[["functype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",192,[[["incompletetypenode",3]]]],[11,"from","","",192,[[["objectptr",3],["incompletetypenode",3]]]],[11,"from","tvm::runtime","",15,[[["incompletetype",3]],["argvalue",4]]],[11,"from","","",15,[[["incompletetype",3]],["argvalue",4]]],[11,"from","","",16,[[["incompletetype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",193,[[["relayreftypenode",3]]]],[11,"from","","",193,[[["objectptr",3],["relayreftypenode",3]]]],[11,"from","tvm::runtime","",15,[[["reftype",3]],["argvalue",4]]],[11,"from","","",15,[[["reftype",3]],["argvalue",4]]],[11,"from","","",16,[[["reftype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",194,[[["basetensortypenode",3]]]],[11,"from","","",194,[[["basetensortypenode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["basetensortype",3]],["argvalue",4]]],[11,"from","","",15,[[["basetensortype",3]],["argvalue",4]]],[11,"from","","",16,[[["basetensortype",3]],["retvalue",4]]],[11,"from","tvm::ir::ty","",152,[[["tensortypenode",3]]]],[11,"from","","",152,[[["objectptr",3],["tensortypenode",3]]]],[11,"from","tvm::runtime","",15,[[["tensortype",3]],["argvalue",4]]],[11,"from","","",15,[[["tensortype",3]],["argvalue",4]]],[11,"from","","",16,[[["tensortype",3]],["retvalue",4]]],[11,"from","tvm::transform","",158,[[["passinfonode",3]]]],[11,"from","","",158,[[["passinfonode",3],["objectptr",3]]]],[11,"from","tvm::runtime","",15,[[["passinfo",3]],["argvalue",4]]],[11,"from","","",15,[[["passinfo",3]],["argvalue",4]]],[11,"from","","",16,[[["passinfo",3]],["retvalue",4]]],[11,"clone","tvm::ir::arith","",19,[[],["constintbound",3]]],[11,"clone","tvm::ir::attrs","",166,[[],["attrs",3]]],[11,"clone","tvm::ir::diagnostics","",26,[[],["diagnostic",3]]],[11,"clone","","",27,[[],["diagnosticrenderer",3]]],[11,"clone","","",28,[[],["diagnosticcontext",3]]],[11,"clone","tvm::ir::expr","",167,[[],["baseexpr",3]]],[11,"clone","","",168,[[],["primexpr",3]]],[11,"clone","","",32,[[],["globalvar",3]]],[11,"clone","tvm::ir::function","",169,[[],["basefunc",3]]],[11,"clone","tvm::ir::module","",36,[[],["irmodule",3]]],[11,"clone","tvm::ir::op","",170,[[],["op",3]]],[11,"clone","tvm::ir::relay::attrs::nn","",174,[[],["conv2dattrs",3]]],[11,"clone","","",175,[[],["biasaddattrs",3]]],[11,"clone","","",176,[[],["denseattrs",3]]],[11,"clone","","",177,[[],["globalpool2dattrs",3]]],[11,"clone","","",178,[[],["maxpool2dattrs",3]]],[11,"clone","","",179,[[],["softmaxattrs",3]]],[11,"clone","","",180,[[],["batchnormattrs",3]]],[11,"clone","tvm::ir::relay::attrs::transform","",181,[[],["expanddimsattrs",3]]],[11,"clone","tvm::ir::relay","",171,[[],["expr",3]]],[11,"clone","","",172,[[],["id",3]]],[11,"clone","","",67,[[],["constant",3]]],[11,"clone","","",68,[[],["tuple",3]]],[11,"clone","","",69,[[],["var",3]]],[11,"clone","","",70,[[],["call",3]]],[11,"clone","","",71,[[],["let",3]]],[11,"clone","","",72,[[],["if",3]]],[11,"clone","","",73,[[],["tuplegetitem",3]]],[11,"clone","","",74,[[],["refcreate",3]]],[11,"clone","","",75,[[],["refread",3]]],[11,"clone","","",76,[[],["refwrite",3]]],[11,"clone","","",77,[[],["constructor",3]]],[11,"clone","","",173,[[],["pattern",3]]],[11,"clone","","",78,[[],["patternwildcard",3]]],[11,"clone","","",79,[[],["patternvar",3]]],[11,"clone","","",80,[[],["patternconstructor",3]]],[11,"clone","","",81,[[],["patterntuple",3]]],[11,"clone","","",82,[[],["clause",3]]],[11,"clone","","",83,[[],["match",3]]],[11,"clone","","",84,[[],["function",3]]],[11,"clone","tvm::ir::source_map","",182,[[],["source",3]]],[11,"clone","","",183,[[],["sourcemap",3]]],[11,"clone","tvm::ir::span","",184,[[],["sourcename",3]]],[11,"clone","","",89,[[],["span",3]]],[11,"clone","tvm::ir::tir","",114,[[],["intimm",3]]],[11,"clone","","",115,[[],["var",3]]],[11,"clone","","",116,[[],["add",3]]],[11,"clone","","",117,[[],["sub",3]]],[11,"clone","","",118,[[],["mul",3]]],[11,"clone","","",119,[[],["div",3]]],[11,"clone","","",120,[[],["mod",3]]],[11,"clone","","",121,[[],["floordiv",3]]],[11,"clone","","",122,[[],["floormod",3]]],[11,"clone","","",123,[[],["min",3]]],[11,"clone","","",124,[[],["max",3]]],[11,"clone","","",125,[[],["cast",3]]],[11,"clone","","",126,[[],["ramp",3]]],[11,"clone","","",127,[[],["select",3]]],[11,"clone","","",128,[[],["eq",3]]],[11,"clone","","",129,[[],["ne",3]]],[11,"clone","","",130,[[],["lt",3]]],[11,"clone","","",131,[[],["le",3]]],[11,"clone","","",132,[[],["gt",3]]],[11,"clone","","",133,[[],["ge",3]]],[11,"clone","","",134,[[],["and",3]]],[11,"clone","","",135,[[],["or",3]]],[11,"clone","","",136,[[],["not",3]]],[11,"clone","","",137,[[],["let",3]]],[11,"clone","tvm::ir::ty","",185,[[],["type",3]]],[11,"clone","","",186,[[],["primtype",3]]],[11,"clone","","",187,[[],["pointertype",3]]],[11,"clone","","",188,[[],["typevar",3]]],[11,"clone","","",189,[[],["globaltypevar",3]]],[11,"clone","","",151,[[],["tupletype",3]]],[11,"clone","","",190,[[],["typeconstraint",3]]],[11,"clone","","",191,[[],["functype",3]]],[11,"clone","","",192,[[],["incompletetype",3]]],[11,"clone","","",193,[[],["reftype",3]]],[11,"clone","","",194,[[],["basetensortype",3]]],[11,"clone","","",152,[[],["tensortype",3]]],[11,"clone","tvm::transform","",158,[[],["passinfo",3]]],[11,"eq","tvm::ir::relay","",171,[[]]],[11,"deref","tvm::ir::arith","",19,[[]]],[11,"deref","tvm::ir::attrs","",166,[[]]],[11,"deref","tvm::ir::diagnostics","",26,[[]]],[11,"deref","","",27,[[]]],[11,"deref","","",28,[[]]],[11,"deref","tvm::ir::expr","",167,[[]]],[11,"deref","","",168,[[]]],[11,"deref","","",32,[[]]],[11,"deref","tvm::ir::function","",169,[[]]],[11,"deref","tvm::ir::module","",36,[[]]],[11,"deref","tvm::ir::op","",170,[[]]],[11,"deref","tvm::ir::relay::attrs::nn","",174,[[]]],[11,"deref","","",175,[[]]],[11,"deref","","",176,[[]]],[11,"deref","","",177,[[]]],[11,"deref","","",178,[[]]],[11,"deref","","",179,[[]]],[11,"deref","","",180,[[]]],[11,"deref","tvm::ir::relay::attrs::transform","",181,[[]]],[11,"deref","tvm::ir::relay","",171,[[]]],[11,"deref","","",172,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",69,[[]]],[11,"deref","","",70,[[]]],[11,"deref","","",71,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",73,[[]]],[11,"deref","","",74,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",76,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",173,[[]]],[11,"deref","","",78,[[]]],[11,"deref","","",79,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",81,[[]]],[11,"deref","","",82,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","tvm::ir::source_map","",182,[[]]],[11,"deref","","",183,[[]]],[11,"deref","tvm::ir::span","",184,[[]]],[11,"deref","","",89,[[]]],[11,"deref","tvm::ir::tir","",114,[[]]],[11,"deref","","",115,[[]]],[11,"deref","","",116,[[]]],[11,"deref","","",117,[[]]],[11,"deref","","",118,[[]]],[11,"deref","","",119,[[]]],[11,"deref","","",120,[[]]],[11,"deref","","",121,[[]]],[11,"deref","","",122,[[]]],[11,"deref","","",123,[[]]],[11,"deref","","",124,[[]]],[11,"deref","","",125,[[]]],[11,"deref","","",126,[[]]],[11,"deref","","",127,[[]]],[11,"deref","","",128,[[]]],[11,"deref","","",129,[[]]],[11,"deref","","",130,[[]]],[11,"deref","","",131,[[]]],[11,"deref","","",132,[[]]],[11,"deref","","",133,[[]]],[11,"deref","","",134,[[]]],[11,"deref","","",135,[[]]],[11,"deref","","",136,[[]]],[11,"deref","","",137,[[]]],[11,"deref","tvm::ir::ty","",185,[[]]],[11,"deref","","",186,[[]]],[11,"deref","","",187,[[]]],[11,"deref","","",188,[[]]],[11,"deref","","",189,[[]]],[11,"deref","","",151,[[]]],[11,"deref","","",190,[[]]],[11,"deref","","",191,[[]]],[11,"deref","","",192,[[]]],[11,"deref","","",193,[[]]],[11,"deref","","",194,[[]]],[11,"deref","","",152,[[]]],[11,"deref","tvm::transform","",158,[[]]],[11,"fmt","tvm::ir::module","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"hash","tvm::ir::relay","",171,[[]]],[11,"try_from","tvm::ir::arith","",19,[[["retvalue",4]],[["result",6],["constintbound",3]]]],[11,"try_from","","",19,[[["argvalue",4]],[["result",6],["constintbound",3]]]],[11,"try_from","tvm::ir::attrs","",166,[[["retvalue",4]],[["result",6],["attrs",3]]]],[11,"try_from","","",166,[[["argvalue",4]],[["result",6],["attrs",3]]]],[11,"try_from","tvm::ir::diagnostics","",26,[[["retvalue",4]],[["diagnostic",3],["result",6]]]],[11,"try_from","","",26,[[["argvalue",4]],[["diagnostic",3],["result",6]]]],[11,"try_from","","",27,[[["retvalue",4]],[["result",6],["diagnosticrenderer",3]]]],[11,"try_from","","",27,[[["argvalue",4]],[["result",6],["diagnosticrenderer",3]]]],[11,"try_from","","",28,[[["retvalue",4]],[["diagnosticcontext",3],["result",6]]]],[11,"try_from","","",28,[[["argvalue",4]],[["diagnosticcontext",3],["result",6]]]],[11,"try_from","tvm::ir::expr","",167,[[["retvalue",4]],[["baseexpr",3],["result",6]]]],[11,"try_from","","",167,[[["argvalue",4]],[["baseexpr",3],["result",6]]]],[11,"try_from","","",168,[[["retvalue",4]],[["result",6],["primexpr",3]]]],[11,"try_from","","",168,[[["argvalue",4]],[["result",6],["primexpr",3]]]],[11,"try_from","","",32,[[["retvalue",4]],[["result",6],["globalvar",3]]]],[11,"try_from","","",32,[[["argvalue",4]],[["result",6],["globalvar",3]]]],[11,"try_from","tvm::ir::function","",169,[[["retvalue",4]],[["result",6],["basefunc",3]]]],[11,"try_from","","",169,[[["argvalue",4]],[["result",6],["basefunc",3]]]],[11,"try_from","tvm::ir::module","",36,[[["retvalue",4]],[["irmodule",3],["result",6]]]],[11,"try_from","","",36,[[["argvalue",4]],[["irmodule",3],["result",6]]]],[11,"try_from","tvm::ir::op","",170,[[["retvalue",4]],[["result",6],["op",3]]]],[11,"try_from","","",170,[[["argvalue",4]],[["result",6],["op",3]]]],[11,"try_from","tvm::ir::relay::attrs::nn","",174,[[["retvalue",4]],[["conv2dattrs",3],["result",6]]]],[11,"try_from","","",174,[[["argvalue",4]],[["conv2dattrs",3],["result",6]]]],[11,"try_from","","",175,[[["retvalue",4]],[["result",6],["biasaddattrs",3]]]],[11,"try_from","","",175,[[["argvalue",4]],[["result",6],["biasaddattrs",3]]]],[11,"try_from","","",176,[[["retvalue",4]],[["result",6],["denseattrs",3]]]],[11,"try_from","","",176,[[["argvalue",4]],[["result",6],["denseattrs",3]]]],[11,"try_from","","",177,[[["retvalue",4]],[["globalpool2dattrs",3],["result",6]]]],[11,"try_from","","",177,[[["argvalue",4]],[["globalpool2dattrs",3],["result",6]]]],[11,"try_from","","",178,[[["retvalue",4]],[["maxpool2dattrs",3],["result",6]]]],[11,"try_from","","",178,[[["argvalue",4]],[["maxpool2dattrs",3],["result",6]]]],[11,"try_from","","",179,[[["retvalue",4]],[["softmaxattrs",3],["result",6]]]],[11,"try_from","","",179,[[["argvalue",4]],[["softmaxattrs",3],["result",6]]]],[11,"try_from","","",180,[[["retvalue",4]],[["result",6],["batchnormattrs",3]]]],[11,"try_from","","",180,[[["argvalue",4]],[["result",6],["batchnormattrs",3]]]],[11,"try_from","tvm::ir::relay::attrs::transform","",181,[[["retvalue",4]],[["result",6],["expanddimsattrs",3]]]],[11,"try_from","","",181,[[["argvalue",4]],[["result",6],["expanddimsattrs",3]]]],[11,"try_from","tvm::ir::relay","",171,[[["retvalue",4]],[["expr",3],["result",6]]]],[11,"try_from","","",171,[[["argvalue",4]],[["expr",3],["result",6]]]],[11,"try_from","","",172,[[["retvalue",4]],[["id",3],["result",6]]]],[11,"try_from","","",172,[[["argvalue",4]],[["id",3],["result",6]]]],[11,"try_from","","",67,[[["retvalue",4]],[["constant",3],["result",6]]]],[11,"try_from","","",67,[[["argvalue",4]],[["constant",3],["result",6]]]],[11,"try_from","","",68,[[["retvalue",4]],[["result",6],["tuple",3]]]],[11,"try_from","","",68,[[["argvalue",4]],[["result",6],["tuple",3]]]],[11,"try_from","","",69,[[["retvalue",4]],[["var",3],["result",6]]]],[11,"try_from","","",69,[[["argvalue",4]],[["var",3],["result",6]]]],[11,"try_from","","",70,[[["retvalue",4]],[["result",6],["call",3]]]],[11,"try_from","","",70,[[["argvalue",4]],[["result",6],["call",3]]]],[11,"try_from","","",71,[[["retvalue",4]],[["result",6],["let",3]]]],[11,"try_from","","",71,[[["argvalue",4]],[["result",6],["let",3]]]],[11,"try_from","","",72,[[["retvalue",4]],[["if",3],["result",6]]]],[11,"try_from","","",72,[[["argvalue",4]],[["if",3],["result",6]]]],[11,"try_from","","",73,[[["retvalue",4]],[["result",6],["tuplegetitem",3]]]],[11,"try_from","","",73,[[["argvalue",4]],[["result",6],["tuplegetitem",3]]]],[11,"try_from","","",74,[[["retvalue",4]],[["result",6],["refcreate",3]]]],[11,"try_from","","",74,[[["argvalue",4]],[["result",6],["refcreate",3]]]],[11,"try_from","","",75,[[["retvalue",4]],[["result",6],["refread",3]]]],[11,"try_from","","",75,[[["argvalue",4]],[["result",6],["refread",3]]]],[11,"try_from","","",76,[[["retvalue",4]],[["refwrite",3],["result",6]]]],[11,"try_from","","",76,[[["argvalue",4]],[["refwrite",3],["result",6]]]],[11,"try_from","","",77,[[["retvalue",4]],[["result",6],["constructor",3]]]],[11,"try_from","","",77,[[["argvalue",4]],[["result",6],["constructor",3]]]],[11,"try_from","","",173,[[["retvalue",4]],[["result",6],["pattern",3]]]],[11,"try_from","","",173,[[["argvalue",4]],[["result",6],["pattern",3]]]],[11,"try_from","","",78,[[["retvalue",4]],[["patternwildcard",3],["result",6]]]],[11,"try_from","","",78,[[["argvalue",4]],[["patternwildcard",3],["result",6]]]],[11,"try_from","","",79,[[["retvalue",4]],[["result",6],["patternvar",3]]]],[11,"try_from","","",79,[[["argvalue",4]],[["result",6],["patternvar",3]]]],[11,"try_from","","",80,[[["retvalue",4]],[["result",6],["patternconstructor",3]]]],[11,"try_from","","",80,[[["argvalue",4]],[["result",6],["patternconstructor",3]]]],[11,"try_from","","",81,[[["retvalue",4]],[["result",6],["patterntuple",3]]]],[11,"try_from","","",81,[[["argvalue",4]],[["result",6],["patterntuple",3]]]],[11,"try_from","","",82,[[["retvalue",4]],[["result",6],["clause",3]]]],[11,"try_from","","",82,[[["argvalue",4]],[["result",6],["clause",3]]]],[11,"try_from","","",83,[[["retvalue",4]],[["match",3],["result",6]]]],[11,"try_from","","",83,[[["argvalue",4]],[["match",3],["result",6]]]],[11,"try_from","","",84,[[["retvalue",4]],[["result",6],["function",3]]]],[11,"try_from","","",84,[[["argvalue",4]],[["result",6],["function",3]]]],[11,"try_from","tvm::ir::source_map","",182,[[["retvalue",4]],[["result",6],["source",3]]]],[11,"try_from","","",182,[[["argvalue",4]],[["result",6],["source",3]]]],[11,"try_from","","",183,[[["retvalue",4]],[["sourcemap",3],["result",6]]]],[11,"try_from","","",183,[[["argvalue",4]],[["sourcemap",3],["result",6]]]],[11,"try_from","tvm::ir::span","",184,[[["retvalue",4]],[["result",6],["sourcename",3]]]],[11,"try_from","","",184,[[["argvalue",4]],[["result",6],["sourcename",3]]]],[11,"try_from","","",89,[[["retvalue",4]],[["span",3],["result",6]]]],[11,"try_from","","",89,[[["argvalue",4]],[["span",3],["result",6]]]],[11,"try_from","tvm::ir::tir","",114,[[["retvalue",4]],[["result",6],["intimm",3]]]],[11,"try_from","","",114,[[["argvalue",4]],[["result",6],["intimm",3]]]],[11,"try_from","","",115,[[["retvalue",4]],[["var",3],["result",6]]]],[11,"try_from","","",115,[[["argvalue",4]],[["var",3],["result",6]]]],[11,"try_from","","",116,[[["retvalue",4]],[["add",3],["result",6]]]],[11,"try_from","","",116,[[["argvalue",4]],[["add",3],["result",6]]]],[11,"try_from","","",117,[[["retvalue",4]],[["sub",3],["result",6]]]],[11,"try_from","","",117,[[["argvalue",4]],[["sub",3],["result",6]]]],[11,"try_from","","",118,[[["retvalue",4]],[["mul",3],["result",6]]]],[11,"try_from","","",118,[[["argvalue",4]],[["mul",3],["result",6]]]],[11,"try_from","","",119,[[["retvalue",4]],[["div",3],["result",6]]]],[11,"try_from","","",119,[[["argvalue",4]],[["div",3],["result",6]]]],[11,"try_from","","",120,[[["retvalue",4]],[["result",6],["mod",3]]]],[11,"try_from","","",120,[[["argvalue",4]],[["result",6],["mod",3]]]],[11,"try_from","","",121,[[["retvalue",4]],[["result",6],["floordiv",3]]]],[11,"try_from","","",121,[[["argvalue",4]],[["result",6],["floordiv",3]]]],[11,"try_from","","",122,[[["retvalue",4]],[["floormod",3],["result",6]]]],[11,"try_from","","",122,[[["argvalue",4]],[["floormod",3],["result",6]]]],[11,"try_from","","",123,[[["retvalue",4]],[["result",6],["min",3]]]],[11,"try_from","","",123,[[["argvalue",4]],[["result",6],["min",3]]]],[11,"try_from","","",124,[[["retvalue",4]],[["result",6],["max",3]]]],[11,"try_from","","",124,[[["argvalue",4]],[["result",6],["max",3]]]],[11,"try_from","","",125,[[["retvalue",4]],[["result",6],["cast",3]]]],[11,"try_from","","",125,[[["argvalue",4]],[["result",6],["cast",3]]]],[11,"try_from","","",126,[[["retvalue",4]],[["result",6],["ramp",3]]]],[11,"try_from","","",126,[[["argvalue",4]],[["result",6],["ramp",3]]]],[11,"try_from","","",127,[[["retvalue",4]],[["result",6],["select",3]]]],[11,"try_from","","",127,[[["argvalue",4]],[["result",6],["select",3]]]],[11,"try_from","","",128,[[["retvalue",4]],[["result",6],["eq",3]]]],[11,"try_from","","",128,[[["argvalue",4]],[["result",6],["eq",3]]]],[11,"try_from","","",129,[[["retvalue",4]],[["result",6],["ne",3]]]],[11,"try_from","","",129,[[["argvalue",4]],[["result",6],["ne",3]]]],[11,"try_from","","",130,[[["retvalue",4]],[["result",6],["lt",3]]]],[11,"try_from","","",130,[[["argvalue",4]],[["result",6],["lt",3]]]],[11,"try_from","","",131,[[["retvalue",4]],[["result",6],["le",3]]]],[11,"try_from","","",131,[[["argvalue",4]],[["result",6],["le",3]]]],[11,"try_from","","",132,[[["retvalue",4]],[["result",6],["gt",3]]]],[11,"try_from","","",132,[[["argvalue",4]],[["result",6],["gt",3]]]],[11,"try_from","","",133,[[["retvalue",4]],[["result",6],["ge",3]]]],[11,"try_from","","",133,[[["argvalue",4]],[["result",6],["ge",3]]]],[11,"try_from","","",134,[[["retvalue",4]],[["result",6],["and",3]]]],[11,"try_from","","",134,[[["argvalue",4]],[["result",6],["and",3]]]],[11,"try_from","","",135,[[["retvalue",4]],[["or",3],["result",6]]]],[11,"try_from","","",135,[[["argvalue",4]],[["or",3],["result",6]]]],[11,"try_from","","",136,[[["retvalue",4]],[["not",3],["result",6]]]],[11,"try_from","","",136,[[["argvalue",4]],[["not",3],["result",6]]]],[11,"try_from","","",137,[[["retvalue",4]],[["result",6],["let",3]]]],[11,"try_from","","",137,[[["argvalue",4]],[["result",6],["let",3]]]],[11,"try_from","tvm::ir::ty","",185,[[["retvalue",4]],[["type",3],["result",6]]]],[11,"try_from","","",185,[[["argvalue",4]],[["type",3],["result",6]]]],[11,"try_from","","",186,[[["retvalue",4]],[["result",6],["primtype",3]]]],[11,"try_from","","",186,[[["argvalue",4]],[["result",6],["primtype",3]]]],[11,"try_from","","",187,[[["retvalue",4]],[["result",6],["pointertype",3]]]],[11,"try_from","","",187,[[["argvalue",4]],[["result",6],["pointertype",3]]]],[11,"try_from","","",188,[[["retvalue",4]],[["result",6],["typevar",3]]]],[11,"try_from","","",188,[[["argvalue",4]],[["result",6],["typevar",3]]]],[11,"try_from","","",189,[[["retvalue",4]],[["globaltypevar",3],["result",6]]]],[11,"try_from","","",189,[[["argvalue",4]],[["globaltypevar",3],["result",6]]]],[11,"try_from","","",151,[[["retvalue",4]],[["result",6],["tupletype",3]]]],[11,"try_from","","",151,[[["argvalue",4]],[["result",6],["tupletype",3]]]],[11,"try_from","","",190,[[["retvalue",4]],[["result",6],["typeconstraint",3]]]],[11,"try_from","","",190,[[["argvalue",4]],[["result",6],["typeconstraint",3]]]],[11,"try_from","","",191,[[["retvalue",4]],[["result",6],["functype",3]]]],[11,"try_from","","",191,[[["argvalue",4]],[["result",6],["functype",3]]]],[11,"try_from","","",192,[[["retvalue",4]],[["incompletetype",3],["result",6]]]],[11,"try_from","","",192,[[["argvalue",4]],[["incompletetype",3],["result",6]]]],[11,"try_from","","",193,[[["retvalue",4]],[["reftype",3],["result",6]]]],[11,"try_from","","",193,[[["argvalue",4]],[["reftype",3],["result",6]]]],[11,"try_from","","",194,[[["retvalue",4]],[["result",6],["basetensortype",3]]]],[11,"try_from","","",194,[[["argvalue",4]],[["result",6],["basetensortype",3]]]],[11,"try_from","","",152,[[["retvalue",4]],[["tensortype",3],["result",6]]]],[11,"try_from","","",152,[[["argvalue",4]],[["tensortype",3],["result",6]]]],[11,"try_from","tvm::transform","",158,[[["retvalue",4]],[["passinfo",3],["result",6]]]],[11,"try_from","","",158,[[["argvalue",4]],[["passinfo",3],["result",6]]]],[11,"source","tvm::ir::module","",35,[[],[["option",4],["error",8]]]],[11,"as_ptr","tvm::ir::arith","",19,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",19,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",19,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::attrs","",166,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",166,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",166,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::diagnostics","",26,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",26,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",26,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",27,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",27,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",27,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",28,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",28,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",28,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::expr","",167,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",167,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",167,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",168,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",168,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",168,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",32,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",32,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",32,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::function","",169,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",169,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",169,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::module","",36,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",36,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",36,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::op","",170,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",170,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",170,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::relay::attrs::nn","",174,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",174,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",174,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",175,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",175,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",175,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",176,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",176,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",176,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",177,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",177,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",177,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",178,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",178,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",178,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",179,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",179,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",179,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",180,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",180,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",180,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::relay::attrs::transform","",181,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",181,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",181,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::relay","",171,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",171,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",171,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",172,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",172,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",172,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",67,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",67,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",67,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",68,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",68,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",68,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",69,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",69,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",69,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",70,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",70,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",70,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",71,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",71,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",71,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",72,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",72,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",72,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",73,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",73,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",73,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",74,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",74,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",74,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",75,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",75,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",75,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",76,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",76,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",76,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",77,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",77,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",77,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",173,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",173,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",173,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",78,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",78,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",78,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",79,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",79,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",79,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",80,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",80,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",80,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",81,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",81,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",81,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",82,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",82,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",82,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",83,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",83,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",83,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",84,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",84,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",84,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::source_map","",182,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",182,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",182,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",183,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",183,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",183,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::span","",184,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",184,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",184,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",89,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",89,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",89,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::tir","",114,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",114,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",114,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",115,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",115,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",115,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",116,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",116,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",116,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",117,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",117,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",117,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",118,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",118,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",118,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",119,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",119,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",119,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",120,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",120,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",120,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",121,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",121,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",121,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",122,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",122,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",122,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",123,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",123,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",123,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",124,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",124,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",124,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",125,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",125,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",125,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",126,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",126,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",126,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",127,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",127,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",127,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",128,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",128,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",128,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",129,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",129,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",129,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",130,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",130,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",130,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",131,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",131,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",131,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",132,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",132,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",132,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",133,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",133,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",133,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",134,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",134,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",134,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",135,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",135,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",135,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",136,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",136,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",136,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",137,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",137,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",137,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::ir::ty","",185,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",185,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",185,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",186,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",186,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",186,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",187,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",187,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",187,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",188,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",188,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",188,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",189,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",189,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",189,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",151,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",151,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",151,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",190,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",190,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",190,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",191,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",191,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",191,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",192,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",192,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",192,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",193,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",193,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",193,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",194,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",194,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",194,[[["objectptr",3],["option",4]]]],[11,"as_ptr","","",152,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",152,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",152,[[["objectptr",3],["option",4]]]],[11,"as_ptr","tvm::transform","",158,[[],[["objectptr",3],["option",4]]]],[11,"into_ptr","","",158,[[],[["objectptr",3],["option",4]]]],[11,"from_ptr","","",158,[[["objectptr",3],["option",4]]]],[11,"from_raw_tvm","tvm::runtime","",3,[[],["error",4]]],[11,"downcast","","",3,[[["string",3]],["error",4]]],[11,"null","","",160,[[],["function",3]]],[11,"get","","For a given function, it returns a function by name.",160,[[],[["function",3],["option",4]]]],[11,"get_boxed","","",160,[[],[["option",4],["box",3]]]],[11,"handle","","Returns the underlying TVM function handle.",160,[[]]],[11,"is_global","","Returns `true` if the underlying TVM function is global…",160,[[]]],[11,"invoke","","Calls the function that created from `Builder`.",160,[[["argvalue",4],["vec",3]],[["retvalue",4],["result",4],["error",4]]]],[11,"entry","","",161,[[],[["function",3],["option",4]]]],[11,"get_function","","Gets a function by name from a registered module.",161,[[],[["function",3],["result",4],["error",4]]]],[11,"import_module","","Imports a dependent module such as `.ptx` for gpu.",161,[[["module",3]]]],[11,"load","","Loads a module shared library from path.",161,[[],[["error",4],["module",3],["result",4]]]],[11,"enabled","","Checks if a target device is enabled for a module.",161,[[]]],[11,"handle","","Returns the underlying module handle.",161,[[]]],[11,"as_dltensor","","",162,[[],["dltensor",3]]],[11,"is_view","","",162,[[]]],[11,"shape","","Returns the shape of the NDArray.",162,[[]]],[11,"shape_usize","","Returns the shape of the NDArray as a &[usize]",162,[[],["cow",4]]],[11,"strides","","Returns the strides of the underlying NDArray.",162,[[],["option",4]]],[11,"strides_usize","","Returns the strides of the NDArray as a &[usize]",162,[[],[["cow",4],["option",4]]]],[11,"is_empty","","Returns true if the tensor is empty",162,[[]]],[11,"len","","Returns the total number of entries of the NDArray.",162,[[]]],[11,"size","","Returns the total bytes taken up by the data. This is…",162,[[]]],[11,"ctx","","Returns the context which the NDArray was defined.",162,[[],["context",3]]],[11,"dtype","","Returns the type of the entries of the NDArray.",162,[[],["datatype",3]]],[11,"ndim","","Returns the number of dimensions of the NDArray.",162,[[]]],[11,"is_contiguous","","Shows whether the underlying ndarray is contiguous in…",162,[[]]],[11,"byte_offset","","",162,[[]]],[11,"to_vec","","Flattens the NDArray to a `Vec` of the same type in cpu.",162,[[],[["ndarrayerror",4],["result",4],["vec",3]]]],[11,"to_bytearray","","Converts the NDArray to [`ByteArray`].",162,[[],[["result",4],["bytearray",3],["ndarrayerror",4]]]],[11,"copy_from_buffer","","Creates an NDArray from a mutable buffer of types i32, u32…",162,[[]]],[11,"copy_to_buffer","","",162,[[]]],[11,"fill_from_iter","","",162,[[]]],[11,"copy_to_ndarray","","Copies the NDArray to another target NDArray.",162,[[["ndarray",3]],[["ndarrayerror",4],["result",4],["ndarray",3]]]],[11,"copy_to_ctx","","Copies the NDArray to a target context.",162,[[["context",3]],[["ndarrayerror",4],["result",4],["ndarray",3]]]],[11,"from_rust_ndarray","","Converts a Rust\'s ndarray to TVM NDArray.",162,[[["datatype",3],["arraybase",3],["context",3]],[["ndarrayerror",4],["result",4],["ndarray",3]]]],[11,"empty","","Allocates and creates an empty NDArray given the shape,…",162,[[["datatype",3],["context",3]],["ndarray",3]]],[11,"zeroed","","",162,[[],["ndarray",3]]],[11,"new","","",4,[[["devicetype",4]],["context",3]]],[11,"cpu","","",4,[[],["context",3]]],[11,"llvm","","",4,[[],["context",3]]],[11,"stackvm","","",4,[[],["context",3]]],[11,"gpu","","",4,[[],["context",3]]],[11,"cuda","","",4,[[],["context",3]]],[11,"nvptx","","",4,[[],["context",3]]],[11,"cl","","",4,[[],["context",3]]],[11,"metal","","",4,[[],["context",3]]],[11,"vpi","","",4,[[],["context",3]]],[11,"rocm","","",4,[[],["context",3]]],[11,"ext_dev","","",4,[[],["context",3]]],[11,"new","","",163,[[],["datatype",3]]],[11,"itemsize","","Returns the number of bytes occupied by an element of this…",163,[[]]],[11,"is_type","","Returns whether this `DataType` represents primitive type…",163,[[]]],[11,"code","","",163,[[]]],[11,"bits","","",163,[[]]],[11,"lanes","","",163,[[]]],[11,"int","","",163,[[],["datatype",3]]],[11,"float","","",163,[[],["datatype",3]]],[11,"uint","","",163,[[],["datatype",3]]],[11,"n","","",5,[[],[["devicetype",4],["option",4]]]],[11,"cpu","tvm::runtime::function::ffi","",8,[[],["dlcontext",3]]],[11,"llvm","","",8,[[],["dlcontext",3]]],[11,"stackvm","","",8,[[],["dlcontext",3]]],[11,"gpu","","",8,[[],["dlcontext",3]]],[11,"cuda","","",8,[[],["dlcontext",3]]],[11,"nvptx","","",8,[[],["dlcontext",3]]],[11,"cl","","",8,[[],["dlcontext",3]]],[11,"metal","","",8,[[],["dlcontext",3]]],[11,"vpi","","",8,[[],["dlcontext",3]]],[11,"rocm","","",8,[[],["dlcontext",3]]],[11,"ext_dev","","",8,[[],["dlcontext",3]]],[11,"from_tvm_value","tvm::runtime","",15,[[["tvmvalue",19]],["argvalue",4]]],[11,"to_tvm_value","","",15,[[]]],[11,"from_tvm_value","","",16,[[["tvmvalue",19]],["retvalue",4]]],[11,"to_tvm_value","","",16,[[]]],[11,"leak","tvm::runtime::ndarray","",165,[[["ndarraycontainer",3],["objectptr",3]],["ndarraycontainer",3]]],[11,"count","tvm::runtime","",195,[[]]],[11,"base","","Allocates a base object value for an object subtype of…",195,[[],["object",3]]],[11,"from_raw","","",155,[[],[["option",4],["objectptr",3]]]],[11,"leak","","",155,[[["objectptr",3]]]],[11,"new","","",155,[[],["objectptr",3]]],[11,"count","","",155,[[]]],[11,"upcast","","",155,[[],["objectptr",3]]],[11,"downcast","","",155,[[],[["objectptr",3],["result",4],["error",4]]]],[11,"is_empty","","",198,[[]]],[11,"len","","",198,[[]]],[11,"as_bytes","","",198,[[]]],[11,"as_str","","",198,[[],[["utf8error",3],["result",4]]]],[11,"to_string_lossy","","",198,[[],["cow",4]]],[11,"from_vec","tvm::runtime::array","",199,[[["vec",3]],[["array",3],["result",4],["error",4]]]],[11,"get","","",199,[[],[["result",4],["error",4]]]],[11,"len","","",199,[[]]],[11,"from_data","tvm::runtime::map","",201,[[["argvalue",4],["vec",3]],[["error",4],["result",4],["map",3]]]],[11,"get","","",201,[[],[["result",4],["error",4]]]],[11,"data","tvm::runtime","Gets the underlying byte-array",203,[[]]],[11,"len","","Gets the length of the underlying byte-array",203,[[]]],[11,"to_vec","","Converts the underlying byte-array to `Vec<u8>`",203,[[],["vec",3]]],[11,"is_empty","","",203,[[]]]],"p":[[3,"TypeMismatchError"],[4,"NDArrayError"],[13,"DataTypeMismatch"],[4,"Error"],[3,"Context"],[4,"DeviceType"],[8,"ToFunction"],[8,"Typed"],[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[19,"TVMValue"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[4,"ArgValue"],[4,"RetValue"],[8,"Num32"],[3,"ConstIntBoundNode"],[3,"ConstIntBound"],[3,"BaseAttrsNode"],[3,"DiagnosticNode"],[3,"DiagnosticBuilder"],[3,"DiagnosticRendererNode"],[3,"DiagnosticContextNode"],[4,"DiagnosticLevel"],[3,"Diagnostic"],[3,"DiagnosticRenderer"],[3,"DiagnosticContext"],[3,"BaseExprNode"],[3,"PrimExprNode"],[3,"GlobalVarNode"],[3,"GlobalVar"],[3,"BaseFuncNode"],[3,"IRModuleNode"],[4,"Error"],[3,"IRModule"],[3,"OpNode"],[3,"ExprNode"],[3,"IdNode"],[3,"ConstantNode"],[3,"TupleNode"],[3,"VarNode"],[3,"CallNode"],[3,"LetNode"],[3,"IfNode"],[3,"TupleGetItemNode"],[3,"RefCreateNode"],[3,"RefReadNode"],[3,"RefWriteNode"],[3,"ConstructorNode"],[3,"PatternNode"],[3,"PatternWildcardNode"],[3,"PatternVarNode"],[3,"PatternConstructorNode"],[3,"PatternTupleNode"],[3,"ClauseNode"],[3,"MatchNode"],[3,"FunctionNode"],[3,"Conv2DAttrsNode"],[3,"BiasAddAttrsNode"],[3,"DenseAttrsNode"],[3,"GlobalPool2DAttrsNode"],[3,"MaxPool2DAttrsNode"],[3,"SoftmaxAttrsNode"],[3,"BatchNormAttrsNode"],[3,"ExpandDimsAttrsNode"],[3,"Constant"],[3,"Tuple"],[3,"Var"],[3,"Call"],[3,"Let"],[3,"If"],[3,"TupleGetItem"],[3,"RefCreate"],[3,"RefRead"],[3,"RefWrite"],[3,"Constructor"],[3,"PatternWildcard"],[3,"PatternVar"],[3,"PatternConstructor"],[3,"PatternTuple"],[3,"Clause"],[3,"Match"],[3,"Function"],[3,"SourceNode"],[3,"SourceMapNode"],[3,"SourceNameNode"],[3,"SpanNode"],[3,"Span"],[3,"IntImmNode"],[3,"VarNode"],[3,"AddNode"],[3,"SubNode"],[3,"MulNode"],[3,"DivNode"],[3,"ModNode"],[3,"FloorDivNode"],[3,"FloorModNode"],[3,"MinNode"],[3,"MaxNode"],[3,"CastNode"],[3,"RampNode"],[3,"SelectNode"],[3,"EqNode"],[3,"NeNode"],[3,"LtNode"],[3,"LeNode"],[3,"GtNode"],[3,"GeNode"],[3,"AndNode"],[3,"OrNode"],[3,"NotNode"],[3,"LetNode"],[3,"IntImm"],[3,"Var"],[3,"Add"],[3,"Sub"],[3,"Mul"],[3,"Div"],[3,"Mod"],[3,"FloorDiv"],[3,"FloorMod"],[3,"Min"],[3,"Max"],[3,"Cast"],[3,"Ramp"],[3,"Select"],[3,"Eq"],[3,"Ne"],[3,"Lt"],[3,"Le"],[3,"Gt"],[3,"Ge"],[3,"And"],[3,"Or"],[3,"Not"],[3,"Let"],[3,"TypeNode"],[3,"PrimTypeNode"],[3,"PointerTypeNode"],[3,"TypeVarNode"],[3,"GlobalTypeVarNode"],[3,"TupleTypeNode"],[3,"TypeConstraintNode"],[3,"FuncTypeNode"],[3,"IncompleteTypeNode"],[3,"RelayRefTypeNode"],[3,"BaseTensorTypeNode"],[3,"TensorTypeNode"],[4,"TypeKind"],[3,"TupleType"],[3,"TensorType"],[8,"IsObjectRef"],[8,"IsObject"],[3,"ObjectPtr"],[3,"GraphRt"],[3,"PassInfoNode"],[3,"PassInfo"],[3,"FunctionNotFoundError"],[3,"Function"],[3,"Module"],[3,"NDArray"],[3,"DataType"],[3,"UnsupportedDeviceError"],[3,"NDArrayContainer"],[3,"Attrs"],[3,"BaseExpr"],[3,"PrimExpr"],[3,"BaseFunc"],[3,"Op"],[3,"Expr"],[3,"Id"],[3,"Pattern"],[3,"Conv2DAttrs"],[3,"BiasAddAttrs"],[3,"DenseAttrs"],[3,"GlobalPool2DAttrs"],[3,"MaxPool2DAttrs"],[3,"SoftmaxAttrs"],[3,"BatchNormAttrs"],[3,"ExpandDimsAttrs"],[3,"Source"],[3,"SourceMap"],[3,"SourceName"],[3,"Type"],[3,"PrimType"],[3,"PointerType"],[3,"TypeVar"],[3,"GlobalTypeVar"],[3,"TypeConstraint"],[3,"FuncType"],[3,"IncompleteType"],[3,"RefType"],[3,"BaseTensorType"],[3,"Object"],[3,"ObjectRef"],[3,"StringObj"],[3,"String"],[3,"Array"],[3,"IntoIter"],[3,"Map"],[3,"IntoIter"],[3,"ByteArray"]]},\
"tvm_graph_rt":{"doc":"This crate is an implementation of the TVM runtime for…","i":[[14,"import_module","tvm_graph_rt","",null,null],[14,"call_packed","","Calls a packed function and returns a `RetValue`.",null,null],[3,"ValueDowncastError","","",null,null],[12,"actual_type","","",0,null],[12,"expected_type","","",0,null],[3,"FuncCallError","","",null,null],[0,"ffi","","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm_graph_rt::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",1,null],[12,"device_id","","\\\\brief The device index",1,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",2,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",2,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",2,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",3,null],[12,"ctx","","\\\\brief The device context of the tensor",3,null],[12,"ndim","","\\\\brief Number of dimensions",3,null],[12,"dtype","","\\\\brief The data type of the pointer",3,null],[12,"shape","","\\\\brief The shape of the tensor",3,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",3,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",3,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",4,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",4,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",4,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",5,null],[12,"v_float64","","",5,null],[12,"v_handle","","",5,null],[12,"v_str","","",5,null],[12,"v_type","","",5,null],[12,"v_ctx","","",5,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",6,null],[12,"size","","",6,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMFuncRemoveGlobal","","\\\\brief Remove a global function. \\\\param name The name of…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",7,null],[12,"num_task","","\\\\brief total amount of task",7,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[3,"DLTensor","tvm_graph_rt","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",3,null],[12,"ctx","","\\\\brief The device context of the tensor",3,null],[12,"ndim","","\\\\brief Number of dimensions",3,null],[12,"dtype","","\\\\brief The data type of the pointer",3,null],[12,"shape","","\\\\brief The shape of the tensor",3,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",3,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",3,null],[0,"packed_func","","",null,null],[8,"PackedFunc","tvm_graph_rt::packed_func","",null,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",8,null],[13,"UInt","","",8,null],[13,"Float","","",8,null],[13,"Null","","",8,null],[13,"DataType","","",8,null],[13,"String","","",8,null],[13,"Context","","",8,null],[13,"Handle","","",8,null],[13,"ArrayHandle","","",8,null],[13,"ObjectHandle","","",8,null],[13,"ModuleHandle","","",8,null],[13,"FuncHandle","","",8,null],[13,"NDArrayHandle","","",8,null],[13,"Bytes","","",8,null],[13,"Str","","",8,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",9,null],[13,"UInt","","",9,null],[13,"Float","","",9,null],[13,"Null","","",9,null],[13,"DataType","","",9,null],[13,"String","","",9,null],[13,"Context","","",9,null],[13,"Handle","","",9,null],[13,"ArrayHandle","","",9,null],[13,"ObjectHandle","","",9,null],[13,"ModuleHandle","","",9,null],[13,"FuncHandle","","",9,null],[13,"NDArrayHandle","","",9,null],[13,"Bytes","","",9,null],[13,"Str","","",9,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",5,null],[12,"v_float64","","",5,null],[12,"v_handle","","",5,null],[12,"v_str","","",5,null],[12,"v_type","","",5,null],[12,"v_ctx","","",5,null],[8,"PackedFunc","tvm_graph_rt","",null,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",8,null],[13,"UInt","","",8,null],[13,"Float","","",8,null],[13,"Null","","",8,null],[13,"DataType","","",8,null],[13,"String","","",8,null],[13,"Context","","",8,null],[13,"Handle","","",8,null],[13,"ArrayHandle","","",8,null],[13,"ObjectHandle","","",8,null],[13,"ModuleHandle","","",8,null],[13,"FuncHandle","","",8,null],[13,"NDArrayHandle","","",8,null],[13,"Bytes","","",8,null],[13,"Str","","",8,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",9,null],[13,"UInt","","",9,null],[13,"Float","","",9,null],[13,"Null","","",9,null],[13,"DataType","","",9,null],[13,"String","","",9,null],[13,"Context","","",9,null],[13,"Handle","","",9,null],[13,"ArrayHandle","","",9,null],[13,"ObjectHandle","","",9,null],[13,"ModuleHandle","","",9,null],[13,"FuncHandle","","",9,null],[13,"NDArrayHandle","","",9,null],[13,"Bytes","","",9,null],[13,"Str","","",9,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",5,null],[12,"v_float64","","",5,null],[12,"v_handle","","",5,null],[12,"v_str","","",5,null],[12,"v_type","","",5,null],[12,"v_ctx","","",5,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",8,null],[13,"UInt","","",8,null],[13,"Float","","",8,null],[13,"Null","","",8,null],[13,"DataType","","",8,null],[13,"String","","",8,null],[13,"Context","","",8,null],[13,"Handle","","",8,null],[13,"ArrayHandle","","",8,null],[13,"ObjectHandle","","",8,null],[13,"ModuleHandle","","",8,null],[13,"FuncHandle","","",8,null],[13,"NDArrayHandle","","",8,null],[13,"Bytes","","",8,null],[13,"Str","","",8,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",9,null],[13,"UInt","","",9,null],[13,"Float","","",9,null],[13,"Null","","",9,null],[13,"DataType","","",9,null],[13,"String","","",9,null],[13,"Context","","",9,null],[13,"Handle","","",9,null],[13,"ArrayHandle","","",9,null],[13,"ObjectHandle","","",9,null],[13,"ModuleHandle","","",9,null],[13,"FuncHandle","","",9,null],[13,"NDArrayHandle","","",9,null],[13,"Bytes","","",9,null],[13,"Str","","",9,null],[3,"Tensor","","A n-dimensional array type which can be converted to/from…",null,null],[3,"Graph","","A TVM computation graph.",null,null],[12,"nodes","","",10,null],[12,"arg_nodes","","",10,null],[12,"heads","","",10,null],[12,"node_row_ptr","","",10,null],[12,"attrs","","",10,null],[3,"Entry","","",null,null],[12,"id","","",11,null],[12,"index","","",11,null],[12,"version","","",11,null],[3,"Node","","",null,null],[12,"op","","",12,null],[12,"name","","",12,null],[12,"inputs","","",12,null],[12,"attrs","","",12,null],[12,"control_deps","","",12,null],[3,"GraphExecutor","","A executor for a TVM computation graph.",null,null],[3,"DsoModule","","A module backed by a Dynamic Shared Object (dylib).",null,null],[3,"SystemLibModule","","",null,null],[4,"Storage","","A `Storage` is a container which holds `Tensor` data.",null,null],[13,"Owned","","A `Storage` which owns its contained bytes.",13,null],[13,"View","","A view of an existing `Storage`.",13,null],[5,"load_param_dict","","Loads a param dict saved using `relay.save_param_dict`.",null,[[],[["result",4],["graphformaterror",4],["hashmap",3]]]],[5,"TVMBackendParallelLaunch","","",null,[[],["c_int",6]]],[5,"TVMBackendParallelBarrier","","",null,[[]]],[5,"remove_item","","",null,[[["vec",3]],[["option",4],["partialeq",8]]]],[5,"TVMBackendAllocWorkspace","","",null,[[["c_int",6]]]],[5,"TVMBackendFreeWorkspace","","",null,[[["c_int",6]],["c_int",6]]],[5,"TVMAPISetLastError","","",null,[[]]],[5,"TVMGetLastError","","",null,[[]]],[11,"new","","",13,[[["option",4]],[["result",4],["layouterr",3],["storage",4]]]],[11,"as_mut_ptr","","",13,[[]]],[11,"size","","",13,[[]]],[11,"align","","",13,[[]]],[11,"as_ptr","","",13,[[]]],[11,"view","","Returns a `Storage::View` which points to an owned…",13,[[],["storage",4]]],[11,"is_owned","","",13,[[]]],[11,"to_owned","","Returns an owned version of this storage via cloning.",13,[[],["storage",4]]],[11,"as_slice","","Returns a view of the stored data.",13,[[]]],[11,"as_mut_slice","","Returns a mutable view of the stored data.",13,[[]]],[11,"shape","","",14,[[],["vec",3]]],[11,"data","","",14,[[],["storage",4]]],[11,"data_mut","","",14,[[],["storage",4]]],[11,"to_vec","","Returns the data of this `Tensor` as a `Vec`.",14,[[],[["clone",8],["vec",3],["debug",8]]]],[11,"is_contiguous","","Returns `true` iff this `Tensor` is represented by a…",14,[[]]],[11,"copy","","Returns a clone of this `Tensor`.",14,[[["tensor",3]]]],[11,"to_owned","","Returns an owned version of this `Tensor` via cloning.",14,[[],["tensor",3]]],[11,"as_dltensor","","",14,[[],["dltensor",3]]],[0,"errors","","",null,null],[3,"FunctionNotFound","tvm_graph_rt::errors","",null,null],[12,"0","","",15,null],[3,"InvalidPointer","","",null,null],[12,"0","","",16,null],[4,"GraphFormatError","","",null,null],[13,"Parse","","",17,null],[13,"Params","","",17,null],[13,"MissingAttr","","",17,null],[13,"InvalidAttr","","",17,null],[13,"MissingField","","",17,null],[13,"InvalidDLType","","",17,null],[13,"UnsupportedOp","","",17,null],[4,"ArrayError","","",null,null],[13,"IncompatibleDataType","","",18,null],[13,"ShapeError","","",18,null],[11,"new","tvm_graph_rt","",19,[[["graph",3]],[["result",4],["box",3]]]],[11,"run","","Runs the computation graph.",19,[[]]],[11,"load_params","","",19,[[["string",3],["tensor",3],["hashmap",3]]]],[11,"set_input","","",19,[[["tensor",3],["asref",8]]]],[11,"get_input","","Returns the graph input with name `name`, if it exists.",19,[[["asref",8]],[["tensor",3],["option",4]]]],[11,"get_output","","Returns the graph output with index `index`, if it exists.",19,[[],[["tensor",3],["option",4]]]],[11,"get_input_index","","Returns the index for graph input with name `name`, if it…",19,[[["asref",8]],["option",4]]],[11,"new","","",20,[[["asref",8],["osstr",3]],[["pin",3],["error",3],["result",4]]]],[17,"DTYPE_INT32","","",null,null],[17,"DTYPE_UINT32","","",null,null],[17,"DTYPE_FLOAT32","","",null,null],[17,"DTYPE_FLOAT64","","",null,null],[8,"Module","","",null,null],[10,"get_function","","",21,[[["asref",8]],[["packedfunc",8],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","tvm_graph_rt::ffi","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","tvm_graph_rt","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tvm_graph_rt::ffi","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","tvm_graph_rt","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","tvm_graph_rt::ffi","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","tvm_graph_rt","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tvm_graph_rt::errors","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"eq","tvm_graph_rt","",3,[[["dltensor",3]]]],[11,"ne","","",3,[[["dltensor",3]]]],[11,"eq","tvm_graph_rt::ffi","",4,[[["dlmanagedtensor",3]]]],[11,"ne","","",4,[[["dlmanagedtensor",3]]]],[11,"eq","","",1,[[["dlcontext",3]]]],[11,"ne","","",1,[[["dlcontext",3]]]],[11,"eq","","",2,[[["dldatatype",3]]]],[11,"ne","","",2,[[["dldatatype",3]]]],[11,"eq","","",7,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",7,[[["tvmparallelgroupenv",3]]]],[11,"eq","","",6,[[["tvmbytearray",3]]]],[11,"ne","","",6,[[["tvmbytearray",3]]]],[11,"clone","","",6,[[],["tvmbytearray",3]]],[11,"clone","","",7,[[],["tvmparallelgroupenv",3]]],[11,"clone","","",4,[[],["dlmanagedtensor",3]]],[11,"clone","tvm_graph_rt","",5,[[],["tvmvalue",19]]],[11,"clone","tvm_graph_rt::ffi","",2,[[],["dldatatype",3]]],[11,"clone","","",1,[[],["dlcontext",3]]],[11,"clone","tvm_graph_rt","",9,[[],["retvalue",4]]],[11,"clone","","",3,[[],["dltensor",3]]],[11,"clone","","",8,[[],["argvalue",4]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt::ffi","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt::ffi","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt::ffi","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_graph_rt::ffi","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",2,[[["argvalue",4]],[["dldatatype",3],["result",4]]]],[11,"try_from","","",2,[[["retvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","","",2,[[["argvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","tvm_graph_rt","",9,[[["result",4]],[["retvalue",4],["result",4]]]],[11,"try_from","tvm_graph_rt::ffi","",6,[[["retvalue",4]],[["tvmbytearray",3],["result",4]]]],[11,"try_from","","",1,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","","",1,[[["retvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","","",1,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"default","","",7,[[],["tvmparallelgroupenv",3]]],[11,"default","tvm_graph_rt","",5,[[],["tvmvalue",19]]],[11,"default","tvm_graph_rt::ffi","",1,[[],["dlcontext",3]]],[11,"default","tvm_graph_rt","",3,[[],["dltensor",3]]],[11,"default","tvm_graph_rt::ffi","",6,[[],["tvmbytearray",3]]],[11,"default","","",2,[[],["dldatatype",3]]],[11,"default","tvm_graph_rt","",9,[[],["retvalue",4]]],[11,"default","tvm_graph_rt::ffi","",4,[[],["dlmanagedtensor",3]]],[11,"fmt","tvm_graph_rt","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",9,[[["tvmbytearray",3]],["retvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",9,[[["dldatatype",3]],["retvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",8,[[["string",3]],["argvalue",4]]],[11,"from","","",5,[[["dlcontext",3]],["tvmvalue",19]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[["tvmbytearray",3]],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",3,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_graph_rt::ffi","",1,[[["tvmvalue",19]],["dlcontext",3]]],[11,"from","tvm_graph_rt","",8,[[],["argvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",9,[[["dlcontext",3]],["retvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",8,[[["cstring",3]],["argvalue",4]]],[11,"from","tvm_graph_rt::ffi","",2,[[["tvmvalue",19]],["dldatatype",3]]],[11,"from","tvm_graph_rt","",9,[[],["retvalue",4]]],[11,"from","","",3,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",3,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",8,[[["context",3]],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",3,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_graph_rt::ffi","",2,[[["datatype",3]],["dldatatype",3]]],[11,"from","tvm_graph_rt","",9,[[],["retvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",9,[[["datatype",3]],["retvalue",4]]],[11,"from","","",3,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",8,[[["devicetype",4]],["argvalue",4]]],[11,"from","tvm_graph_rt::ffi","",1,[[["context",3]],["dlcontext",3]]],[11,"from","tvm_graph_rt","",8,[[],["argvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",3,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_graph_rt::ffi","",1,[[["context",3]],["dlcontext",3]]],[11,"from","tvm_graph_rt","",8,[[["dltensor",3]],["argvalue",4]]],[11,"from","tvm_graph_rt::ffi","",2,[[["datatype",3]],["dldatatype",3]]],[11,"from","tvm_graph_rt","",5,[[],["tvmvalue",19]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",9,[[["context",3]],["retvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",9,[[["bytearray",3]],["retvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",8,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",5,[[],["tvmvalue",19]]],[11,"from","","",9,[[],["retvalue",4]]],[11,"from","","",5,[[["dldatatype",3]],["tvmvalue",19]]],[11,"from","","",8,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",8,[[["cstr",3]],["argvalue",4]]],[11,"from","","",9,[[["string",3]],["retvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from","","",8,[[["bytearray",3]],["argvalue",4]]],[11,"from","","",8,[[["context",3]],["argvalue",4]]],[11,"from","","",8,[[],["argvalue",4]]],[11,"from_str","tvm_graph_rt::ffi","",1,[[],[["dlcontext",3],["result",4]]]],[11,"get_function","tvm_graph_rt","",20,[[["asref",8]],[["packedfunc",8],["option",4]]]],[11,"get_function","","",23,[[["asref",8]],[["packedfunc",8],["option",4]]]],[11,"drop","","",20,[[]]],[11,"from","","",13,[[]]],[11,"from","","",3,[[["tensor",3]]]],[11,"from","","",3,[[["tensor",3]]]],[11,"from","","",14,[[["dltensor",3]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"from","","",14,[[["array",6]]]],[11,"default","","",23,[[]]],[11,"eq","","",13,[[["storage",4]]]],[11,"ne","","",13,[[["storage",4]]]],[11,"eq","","",14,[[["tensor",3]]]],[11,"ne","","",14,[[["tensor",3]]]],[11,"fmt","tvm_graph_rt::errors","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_graph_rt","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_graph_rt::errors","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"try_from","tvm_graph_rt","",10,[[["string",3]],[["graphformaterror",4],["result",4]]]],[11,"try_from","","",10,[[],["result",4]]],[11,"source","tvm_graph_rt::errors","",17,[[],[["option",4],["error",8]]]],[11,"serialize","tvm_graph_rt","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"get_with_context","","",22,[[["string",3]],["funccallerror",3]]],[11,"cpu","tvm_graph_rt::ffi","",1,[[],["dlcontext",3]]],[11,"llvm","","",1,[[],["dlcontext",3]]],[11,"stackvm","","",1,[[],["dlcontext",3]]],[11,"gpu","","",1,[[],["dlcontext",3]]],[11,"cuda","","",1,[[],["dlcontext",3]]],[11,"nvptx","","",1,[[],["dlcontext",3]]],[11,"cl","","",1,[[],["dlcontext",3]]],[11,"metal","","",1,[[],["dlcontext",3]]],[11,"vpi","","",1,[[],["dlcontext",3]]],[11,"rocm","","",1,[[],["dlcontext",3]]],[11,"ext_dev","","",1,[[],["dlcontext",3]]],[11,"from_tvm_value","tvm_graph_rt","",8,[[["tvmvalue",19]],["argvalue",4]]],[11,"to_tvm_value","","",8,[[]]],[11,"from_tvm_value","","",9,[[["tvmvalue",19]],["retvalue",4]]],[11,"to_tvm_value","","",9,[[]]]],"p":[[3,"ValueDowncastError"],[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[19,"TVMValue"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[4,"ArgValue"],[4,"RetValue"],[3,"Graph"],[3,"Entry"],[3,"Node"],[4,"Storage"],[3,"Tensor"],[3,"FunctionNotFound"],[3,"InvalidPointer"],[4,"GraphFormatError"],[4,"ArrayError"],[3,"GraphExecutor"],[3,"DsoModule"],[8,"Module"],[3,"FuncCallError"],[3,"SystemLibModule"]]},\
"tvm_macros":{"doc":"","i":[[14,"import_module","tvm_macros","",null,null],[24,"Object","","",null,null],[14,"external","","",null,null]],"p":[]},\
"tvm_rt":{"doc":"TVM is a compiler stack for deep learning systems.","i":[[3,"Context","tvm_rt","",null,null],[12,"device_type","","",0,null],[12,"device_id","","",0,null],[4,"DeviceType","","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",1,null],[13,"GPU","","",1,null],[13,"CPUPinned","","",1,null],[13,"OpenCL","","",1,null],[13,"Vulkan","","",1,null],[13,"Metal","","",1,null],[13,"VPI","","",1,null],[13,"ROCM","","",1,null],[13,"ExtDev","","",1,null],[4,"ArgValue","","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",2,null],[13,"UInt","","",2,null],[13,"Float","","",2,null],[13,"Null","","",2,null],[13,"DataType","","",2,null],[13,"String","","",2,null],[13,"Context","","",2,null],[13,"Handle","","",2,null],[13,"ArrayHandle","","",2,null],[13,"ObjectHandle","","",2,null],[13,"ModuleHandle","","",2,null],[13,"FuncHandle","","",2,null],[13,"NDArrayHandle","","",2,null],[13,"Bytes","","",2,null],[13,"Str","","",2,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",3,null],[13,"UInt","","",3,null],[13,"Float","","",3,null],[13,"Null","","",3,null],[13,"DataType","","",3,null],[13,"String","","",3,null],[13,"Context","","",3,null],[13,"Handle","","",3,null],[13,"ArrayHandle","","",3,null],[13,"ObjectHandle","","",3,null],[13,"ModuleHandle","","",3,null],[13,"FuncHandle","","",3,null],[13,"NDArrayHandle","","",3,null],[13,"Bytes","","",3,null],[13,"Str","","",3,null],[3,"ByteArray","","A newtype wrapping a raw TVM byte-array.",null,null],[3,"DataType","","",null,null],[14,"external","","",null,null],[5,"get_last_error","","Gets the last error message.",null,[[]]],[5,"version","","Outputs the current TVM version.",null,[[]]],[0,"object","","",null,null],[3,"Object","tvm_rt::object","A TVM intrusive smart pointer header, in TVM all FFI…",null,null],[3,"ObjectPtr","","A smart pointer for types which implement IsObject. This…",null,null],[12,"ptr","","",4,null],[3,"ObjectRef","","",null,null],[5,"debug_print","","",null,[[["objectref",3]],[["cstring",3],["result",6]]]],[5,"structural_hash","","",null,[[["objectref",3]],[["objectref",3],["result",6]]]],[5,"structural_equal","","",null,[[["objectref",3]],[["objectref",3],["result",6]]]],[11,"count","","",5,[[]]],[11,"base","","Allocates a base object value for an object subtype of…",5,[[],["object",3]]],[11,"from_raw","","",4,[[],[["objectptr",3],["option",4]]]],[11,"leak","","",4,[[["objectptr",3]]]],[11,"new","","",4,[[],["objectptr",3]]],[11,"count","","",4,[[]]],[11,"upcast","","",4,[[],["objectptr",3]]],[11,"downcast","","",4,[[],[["objectptr",3],["error",4],["result",4]]]],[8,"IsObject","","An unsafe trait which should be implemented for an object…",null,null],[18,"TYPE_KEY","","",6,null],[11,"typed_delete","","",6,[[]]],[8,"IsObjectRef","","",null,null],[16,"Object","","",7,null],[10,"as_ptr","","",7,[[],[["option",4],["objectptr",3]]]],[10,"into_ptr","","",7,[[],[["option",4],["objectptr",3]]]],[10,"from_ptr","","",7,[[["option",4],["objectptr",3]]]],[11,"null","","",7,[[]]],[11,"into_arg_value","","",7,[[],["argvalue",4]]],[11,"from_arg_value","","",7,[[["argvalue",4]],[["result",4],["error",4]]]],[11,"into_ret_value","","",7,[[],["retvalue",4]]],[11,"from_ret_value","","",7,[[["retvalue",4]],[["result",4],["error",4]]]],[11,"upcast","","",7,[[]]],[11,"downcast","","",7,[[],[["result",4],["error",4]]]],[0,"string","tvm_rt","",null,null],[3,"StringObj","tvm_rt::string","",null,null],[3,"String","","",null,null],[11,"is_empty","","",8,[[]]],[11,"len","","",8,[[]]],[11,"as_bytes","","",8,[[]]],[11,"as_str","","",8,[[],[["result",4],["utf8error",3]]]],[11,"to_string_lossy","","",8,[[],["cow",4]]],[0,"array","tvm_rt","",null,null],[3,"Array","tvm_rt::array","",null,null],[3,"IntoIter","","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["objectref",3],["result",6]]]],[5,"array_size","","",null,[[["objectref",3]],["result",6]]],[11,"from_vec","","",9,[[["vec",3]],[["result",6],["array",3]]]],[11,"get","","",9,[[],["result",6]]],[11,"len","","",9,[[]]],[0,"context","tvm_rt","",null,null],[4,"DeviceType","tvm_rt::context","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",1,null],[13,"GPU","","",1,null],[13,"CPUPinned","","",1,null],[13,"OpenCL","","",1,null],[13,"Vulkan","","",1,null],[13,"Metal","","",1,null],[13,"VPI","","",1,null],[13,"ROCM","","",1,null],[13,"ExtDev","","",1,null],[3,"Context","","",null,null],[12,"device_type","","",0,null],[12,"device_id","","",0,null],[3,"UnsupportedDeviceError","","",null,null],[5,"get_device_attr","","",null,[[],["result",6]]],[0,"errors","tvm_rt","",null,null],[3,"FunctionNotFoundError","tvm_rt::errors","",null,null],[3,"TypeMismatchError","","",null,null],[12,"expected","","",10,null],[12,"actual","","",10,null],[4,"NDArrayError","","",null,null],[13,"EmptyArray","","",11,null],[13,"InvalidDatatype","","",11,null],[13,"ShapeError","","",11,null],[13,"DataTypeMismatch","","",11,null],[12,"expected","tvm_rt::errors::NDArrayError","",12,null],[12,"actual","","",12,null],[4,"Error","tvm_rt::errors","",null,null],[13,"Downcast","","",13,null],[13,"Null","","",13,null],[13,"ModuleLoadPath","","",13,null],[13,"ToCString","","",13,null],[13,"FromCString","","",13,null],[13,"NullHandle","","",13,null],[13,"NDArray","","",13,null],[13,"CallFailed","","",13,null],[13,"Infallible","","",13,null],[13,"Panic","","",13,null],[13,"DiagnosticError","","",13,null],[13,"Raw","","",13,null],[11,"from_raw_tvm","","",13,[[],["error",4]]],[11,"downcast","","",13,[[["string",3]],["error",4]]],[0,"function","tvm_rt","This module provides an idiomatic Rust API for creating…",null,null],[0,"ffi","tvm_rt::function","The low-level C runtime FFI API for TVM.",null,null],[17,"TVM_VERSION","tvm_rt::function::ffi","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[3,"DLContext","","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",14,null],[12,"device_id","","\\\\brief The device index",14,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",15,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",15,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",15,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",16,null],[12,"ctx","","\\\\brief The device context of the tensor",16,null],[12,"ndim","","\\\\brief Number of dimensions",16,null],[12,"dtype","","\\\\brief The data type of the pointer",16,null],[12,"shape","","\\\\brief The shape of the tensor",16,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",16,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",16,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",17,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",17,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",17,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",18,null],[12,"v_float64","","",18,null],[12,"v_handle","","",18,null],[12,"v_str","","",18,null],[12,"v_type","","",18,null],[12,"v_ctx","","",18,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",19,null],[12,"size","","",19,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,[[]]],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,[[]]],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,[[]]],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,[[]]],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,[[]]],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,[[]]],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,[[]]],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,[[]]],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,[[]]],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,[[]]],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,[[["option",4],["option",4]]]],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,[[]]],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,[[]]],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,[[]]],[5,"TVMFuncRemoveGlobal","","\\\\brief Remove a global function. \\\\param name The name of…",null,[[]]],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,[[]]],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,[[]]],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,[[]]],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,[[]]],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,[[]]],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,[[]]],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,[[]]],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,[[]]],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,[[]]],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,[[]]],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,[[]]],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,[[]]],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,[[]]],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,[[]]],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,[[]]],[5,"TVMObjectFree","","\\\\brief Free the object.",null,[[]]],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,[[["dlcontext",3]]]],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,[[["dlcontext",3],["dldatatype",3]]]],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,[[]]],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,[[]]],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,[[]]],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,[[]]],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,[[]]],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",20,null],[12,"num_task","","\\\\brief total amount of task",20,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,[[["option",4]]]],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,[[]]],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,[[["option",4]]]],[6,"BackendPackedCFunc","","",null,null],[4,"ArgValue","tvm_rt::function","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",2,null],[13,"UInt","","",2,null],[13,"Float","","",2,null],[13,"Null","","",2,null],[13,"DataType","","",2,null],[13,"String","","",2,null],[13,"Context","","",2,null],[13,"Handle","","",2,null],[13,"ArrayHandle","","",2,null],[13,"ObjectHandle","","",2,null],[13,"ModuleHandle","","",2,null],[13,"FuncHandle","","",2,null],[13,"NDArrayHandle","","",2,null],[13,"Bytes","","",2,null],[13,"Str","","",2,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",3,null],[13,"UInt","","",3,null],[13,"Float","","",3,null],[13,"Null","","",3,null],[13,"DataType","","",3,null],[13,"String","","",3,null],[13,"Context","","",3,null],[13,"Handle","","",3,null],[13,"ArrayHandle","","",3,null],[13,"ObjectHandle","","",3,null],[13,"ModuleHandle","","",3,null],[13,"FuncHandle","","",3,null],[13,"NDArrayHandle","","",3,null],[13,"Bytes","","",3,null],[13,"Str","","",3,null],[3,"Function","","Wrapper around TVM function handle which includes…",null,null],[5,"register","","Registers a Rust function with an arbitrary type signature…",null,[[["string",3],["into",8]],["result",6]]],[5,"register_override","","Register a function with explicit control over whether to…",null,[[["string",3],["into",8]],["result",6]]],[5,"register_untyped","","",null,[[["string",3],["into",8]],["result",6]]],[6,"Result","","",null,null],[8,"ToFunction","","",null,null],[16,"Handle","","",21,null],[10,"into_raw","","",21,[[]]],[10,"call","","",21,[[["argvalue",4],["vec",3]],[["retvalue",4],["result",6]]]],[10,"drop","","",21,[[]]],[11,"to_function","","",21,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",21,[[["c_int",6],["tvmretvaluehandle",6]],["c_int",6]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",21,[[]]],[8,"Typed","","A trait representing whether the function arguments and…",null,null],[10,"args","","",22,[[["argvalue",4],["vec",3]],["result",6]]],[10,"ret","","",22,[[],[["retvalue",4],["result",6]]]],[11,"null","","",23,[[]]],[11,"get","","For a given function, it returns a function by name.",23,[[["asref",8]],[["function",3],["option",4]]]],[11,"get_boxed","","",23,[[],[["option",4],["box",3]]]],[11,"handle","","Returns the underlying TVM function handle.",23,[[],["tvmfunctionhandle",6]]],[11,"is_global","","Returns `true` if the underlying TVM function is global…",23,[[]]],[11,"invoke","","Calls the function that created from `Builder`.",23,[[["vec",3],["argvalue",4]],[["retvalue",4],["result",6]]]],[0,"map","tvm_rt","",null,null],[3,"Map","tvm_rt::map","",null,null],[3,"IntoIter","","",null,null],[5,"array_get_item","","",null,[[["objectref",3]],[["objectref",3],["result",6]]]],[5,"map_size","","",null,[[["objectref",3]],["result",6]]],[5,"map_get_item","","",null,[[["objectref",3]],[["objectref",3],["result",6]]]],[5,"map_count","","",null,[[["objectref",3]],[["objectref",3],["result",6]]]],[5,"map_items","","",null,[[["objectref",3]],[["array",3],["result",6]]]],[11,"from_data","","",24,[[["vec",3],["argvalue",4]],[["result",6],["map",3]]]],[11,"get","","",24,[[],["result",6]]],[0,"module","tvm_rt","Provides the [`Module`] type and methods for working with…",null,null],[3,"Module","tvm_rt::module","Wrapper around TVM module handle which contains an entry…",null,null],[5,"runtime_enabled","","",null,[[["cstring",3]],["result",6]]],[5,"load_from_file","","",null,[[["cstring",3]],[["module",3],["result",6]]]],[11,"entry","","",25,[[],[["function",3],["option",4]]]],[11,"get_function","","Gets a function by name from a registered module.",25,[[],[["error",4],["result",4],["function",3]]]],[11,"import_module","","Imports a dependent module such as `.ptx` for gpu.",25,[[["module",3]]]],[11,"load","","Loads a module shared library from path.",25,[[],[["error",4],["result",4],["module",3]]]],[11,"enabled","","Checks if a target device is enabled for a module.",25,[[]]],[11,"handle","","Returns the underlying module handle.",25,[[],["tvmmodulehandle",6]]],[0,"ndarray","tvm_rt","This module implements the [`NDArray`] type for working…",null,null],[3,"NDArrayContainer","tvm_rt::ndarray","See the `module-level documentation` for more details.",null,null],[3,"NDArray","","",null,null],[8,"Num32","","A trait for the supported 32-bits numerical types in…",null,null],[18,"BITS","","",26,null],[11,"leak","","",27,[[["ndarraycontainer",3],["objectptr",3]],["ndarraycontainer",3]]],[11,"as_dltensor","","",28,[[],["dltensor",3]]],[11,"is_view","","",28,[[]]],[11,"shape","","Returns the shape of the NDArray.",28,[[]]],[11,"shape_usize","","Returns the shape of the NDArray as a &[usize]",28,[[],["cow",4]]],[11,"strides","","Returns the strides of the underlying NDArray.",28,[[],["option",4]]],[11,"strides_usize","","Returns the strides of the NDArray as a &[usize]",28,[[],[["option",4],["cow",4]]]],[11,"is_empty","","Returns true if the tensor is empty",28,[[]]],[11,"len","","Returns the total number of entries of the NDArray.",28,[[]]],[11,"size","","Returns the total bytes taken up by the data. This is…",28,[[]]],[11,"ctx","","Returns the context which the NDArray was defined.",28,[[],["context",3]]],[11,"dtype","","Returns the type of the entries of the NDArray.",28,[[],["datatype",3]]],[11,"ndim","","Returns the number of dimensions of the NDArray.",28,[[]]],[11,"is_contiguous","","Shows whether the underlying ndarray is contiguous in…",28,[[]]],[11,"byte_offset","","",28,[[]]],[11,"to_vec","","Flattens the NDArray to a `Vec` of the same type in cpu.",28,[[],[["vec",3],["result",4],["ndarrayerror",4]]]],[11,"to_bytearray","","Converts the NDArray to [`ByteArray`].",28,[[],[["result",4],["ndarrayerror",4],["bytearray",3]]]],[11,"copy_from_buffer","","Creates an NDArray from a mutable buffer of types i32, u32…",28,[[]]],[11,"copy_to_buffer","","",28,[[]]],[11,"fill_from_iter","","",28,[[]]],[11,"copy_to_ndarray","","Copies the NDArray to another target NDArray.",28,[[["ndarray",3]],[["result",4],["ndarray",3],["ndarrayerror",4]]]],[11,"copy_to_ctx","","Copies the NDArray to a target context.",28,[[["context",3]],[["result",4],["ndarray",3],["ndarrayerror",4]]]],[11,"from_rust_ndarray","","Converts a Rust\'s ndarray to TVM NDArray.",28,[[["context",3],["arrayd",6],["datatype",3]],[["ndarrayerror",4],["result",4]]]],[11,"empty","","Allocates and creates an empty NDArray given the shape,…",28,[[["context",3],["datatype",3]],["ndarray",3]]],[11,"zeroed","","",28,[[],["ndarray",3]]],[11,"to_function","tvm_rt::function","",21,[[],["function",3]]],[11,"tvm_callback","","The callback function which is wrapped converted by TVM…",21,[[["c_int",6],["tvmretvaluehandle",6]],["c_int",6]]],[11,"tvm_finalizer","","The finalizer which is invoked when the packed function\'s…",21,[[]]],[0,"value","tvm_rt","This module implements [`ArgValue`] and [`RetValue`] types…",null,null],[14,"tvm_call","","",null,null],[14,"check_call","","",null,null],[11,"from","tvm_rt::context","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tvm_rt::function","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tvm_rt","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","tvm_rt::object","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","tvm_rt::string","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tvm_rt::array","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","tvm_rt::context","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","tvm_rt::errors","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tvm_rt::function::ffi","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","tvm_rt::function","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","tvm_rt::map","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","tvm_rt::module","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","tvm_rt::ndarray","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"eq","tvm_rt::context","",0,[[["context",3]]]],[11,"ne","","",0,[[["context",3]]]],[11,"eq","tvm_rt::function::ffi","",16,[[["dltensor",3]]]],[11,"ne","","",16,[[["dltensor",3]]]],[11,"eq","tvm_rt::context","",1,[[["devicetype",4]]]],[11,"eq","tvm_rt::function::ffi","",17,[[["dlmanagedtensor",3]]]],[11,"ne","","",17,[[["dlmanagedtensor",3]]]],[11,"eq","","",14,[[["dlcontext",3]]]],[11,"ne","","",14,[[["dlcontext",3]]]],[11,"eq","","",15,[[["dldatatype",3]]]],[11,"ne","","",15,[[["dldatatype",3]]]],[11,"eq","","",20,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",20,[[["tvmparallelgroupenv",3]]]],[11,"eq","","",19,[[["tvmbytearray",3]]]],[11,"ne","","",19,[[["tvmbytearray",3]]]],[11,"eq","tvm_rt","",30,[[["datatype",3]]]],[11,"ne","","",30,[[["datatype",3]]]],[11,"clone","tvm_rt::function::ffi","",19,[[],["tvmbytearray",3]]],[11,"clone","tvm_rt::context","",0,[[],["context",3]]],[11,"clone","","",1,[[],["devicetype",4]]],[11,"clone","tvm_rt::function::ffi","",20,[[],["tvmparallelgroupenv",3]]],[11,"clone","","",17,[[],["dlmanagedtensor",3]]],[11,"clone","","",18,[[],["tvmvalue",19]]],[11,"clone","","",15,[[],["dldatatype",3]]],[11,"clone","","",14,[[],["dlcontext",3]]],[11,"clone","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"clone","tvm_rt","",30,[[],["datatype",3]]],[11,"clone","tvm_rt::function::ffi","",16,[[],["dltensor",3]]],[11,"clone","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"fmt","tvm_rt::function::ffi","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::context","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function::ffi","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::context","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt::function::ffi","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","tvm_rt::function::ffi","",15,[[["argvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","","",15,[[["retvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","","",15,[[["argvalue",4]],[["result",4],["dldatatype",3]]]],[11,"try_from","tvm_rt::function","",3,[[["result",4]],[["retvalue",4],["result",4]]]],[11,"try_from","tvm_rt::context","",0,[[["retvalue",4]],[["error",3],["result",4],["context",3]]]],[11,"try_from","tvm_rt","",29,[[["argvalue",4]],[["bytearray",3],["result",4]]]],[11,"try_from","tvm_rt::function::ffi","",19,[[["retvalue",4]],[["tvmbytearray",3],["result",4]]]],[11,"try_from","","",14,[[["argvalue",4]],[["result",4],["dlcontext",3]]]],[11,"try_from","","",14,[[["retvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","tvm_rt","",30,[[["retvalue",4]],[["error",3],["datatype",3],["result",4]]]],[11,"try_from","tvm_rt::function::ffi","",14,[[["argvalue",4]],[["dlcontext",3],["result",4]]]],[11,"try_from","tvm_rt","",29,[[["retvalue",4]],[["result",4],["bytearray",3]]]],[11,"default","tvm_rt::context","",0,[[],["context",3]]],[11,"default","","default device is cpu.",1,[[],["devicetype",4]]],[11,"default","tvm_rt::function::ffi","",20,[[],["tvmparallelgroupenv",3]]],[11,"default","","",18,[[],["tvmvalue",19]]],[11,"default","","",14,[[],["dlcontext",3]]],[11,"default","","",16,[[],["dltensor",3]]],[11,"default","","",19,[[],["tvmbytearray",3]]],[11,"default","","",15,[[],["dldatatype",3]]],[11,"default","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"default","tvm_rt::function::ffi","",17,[[],["dlmanagedtensor",3]]],[11,"hash","tvm_rt","",30,[[]]],[11,"hash","tvm_rt::context","",1,[[]]],[11,"hash","","",0,[[]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tvm_rt","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","tvm_rt::function","",3,[[["tvmbytearray",3]],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",3,[[["dldatatype",3]],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[["string",3]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[["dlcontext",3]],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[["tvmbytearray",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::context","",1,[[],["devicetype",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::context","",0,[[["dlcontext",3]],["context",3]]],[11,"from","tvm_rt::function::ffi","",14,[[["tvmvalue",19]],["dlcontext",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[["dlcontext",3]],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[["cstring",3]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",15,[[["tvmvalue",19]],["dldatatype",3]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt","",29,[[],["bytearray",3]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","","",16,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt::function","",2,[[["context",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",15,[[["datatype",3]],["dldatatype",3]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[["datatype",3]],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["arraybase",3]],["dltensor",3]]],[11,"from","tvm_rt","",30,[[["dldatatype",3]],["datatype",3]]],[11,"from","tvm_rt::function","",2,[[["devicetype",4]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",14,[[["context",3]],["dlcontext",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",16,[[["arraybase",3]],["dltensor",3]]],[11,"from","","",14,[[["context",3]],["dlcontext",3]]],[11,"from","tvm_rt::context","",1,[[],["devicetype",4]]],[11,"from","tvm_rt::function","",2,[[["dltensor",3]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",15,[[["datatype",3]],["dldatatype",3]]],[11,"from","","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[["context",3]],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[["dlcontext",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[["bytearray",3]],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",3,[[],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[["dlcontext",3]],["argvalue",4]]],[11,"from","tvm_rt::context","",0,[[],["context",3]]],[11,"from","tvm_rt::function","",2,[[],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[["dldatatype",3]],["argvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[],["tvmvalue",19]]],[11,"from","tvm_rt::function","",3,[[],["retvalue",4]]],[11,"from","tvm_rt::function::ffi","",18,[[["dldatatype",3]],["tvmvalue",19]]],[11,"from","tvm_rt::function","",2,[[["dltensor",3]],["argvalue",4]]],[11,"from","","",2,[[["cstr",3]],["argvalue",4]]],[11,"from","","",3,[[["string",3]],["retvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[["dldatatype",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"from","","",2,[[["bytearray",3]],["argvalue",4]]],[11,"from","","",2,[[["context",3]],["argvalue",4]]],[11,"from","","",2,[[],["argvalue",4]]],[11,"partial_cmp","tvm_rt","",30,[[["datatype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",30,[[["datatype",3]]]],[11,"le","","",30,[[["datatype",3]]]],[11,"gt","","",30,[[["datatype",3]]]],[11,"ge","","",30,[[["datatype",3]]]],[11,"cmp","","",30,[[["datatype",3]],["ordering",4]]],[11,"from_str","","",30,[[],[["result",4],["datatype",3]]]],[11,"from_str","tvm_rt::function::ffi","",14,[[],[["dlcontext",3],["result",4]]]],[11,"from_str","tvm_rt::context","",0,[[],[["result",4],["context",3]]]],[11,"as_ptr","tvm_rt::object","",31,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",31,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",31,[[["option",4],["objectptr",3]]]],[11,"as_ptr","tvm_rt::string","",8,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",8,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",8,[[["option",4],["objectptr",3]]]],[11,"as_ptr","tvm_rt::ndarray","",28,[[],[["option",4],["objectptr",3]]]],[11,"into_ptr","","",28,[[],[["option",4],["objectptr",3]]]],[11,"from_ptr","","",28,[[["option",4],["objectptr",3]]]],[11,"drop","tvm_rt::object","",4,[[]]],[11,"drop","tvm_rt::module","",25,[[]]],[11,"as_ref","tvm_rt::object","",5,[[]]],[11,"as_ref","tvm_rt::string","",32,[[]]],[11,"as_ref","","",32,[[]]],[11,"as_ref","","",8,[[]]],[11,"as_ref","tvm_rt::ndarray","",27,[[]]],[11,"as_ref","","",27,[[]]],[11,"from","tvm_rt::object","",31,[[["object",3]]]],[11,"from","","",31,[[["objectptr",3],["object",3]]]],[11,"from","tvm_rt::function","",2,[[["objectref",3]],["argvalue",4]]],[11,"from","","",2,[[["objectref",3]],["argvalue",4]]],[11,"from","","",3,[[["objectref",3]],["retvalue",4]]],[11,"from","","",3,[[["objectptr",3]],["retvalue",4]]],[11,"from","","",2,[[["objectptr",3]],["argvalue",4]]],[11,"from","tvm_rt::string","",8,[[["stringobj",3]]]],[11,"from","","",8,[[["objectptr",3],["stringobj",3]]]],[11,"from","tvm_rt::function","",2,[[["string",3]],["argvalue",4]]],[11,"from","","",2,[[["string",3]],["argvalue",4]]],[11,"from","","",3,[[["string",3]],["retvalue",4]]],[11,"from","tvm_rt::string","",8,[[["string",3]]]],[11,"from","","",8,[[]]],[11,"from","tvm_rt::function","",2,[[["array",3]],["argvalue",4]]],[11,"from","","",3,[[["array",3]],["retvalue",4]]],[11,"from","tvm_rt::errors","",11,[[["parsedatatypeerror",4]]]],[11,"from","","",11,[[["shapeerror",3]]]],[11,"from","","",13,[[["valuedowncasterror",3]]]],[11,"from","","",13,[[["nulerror",3]]]],[11,"from","","",13,[[["intostringerror",3]]]],[11,"from","","",13,[[["ndarrayerror",4]]]],[11,"from","","",13,[[["infallible",4]]]],[11,"from","tvm_rt::function","",3,[[["function",3]],["retvalue",4]]],[11,"from","","",2,[[["function",3]],["argvalue",4]]],[11,"from","","",2,[[["map",3]],["argvalue",4]]],[11,"from","","",3,[[["map",3]],["retvalue",4]]],[11,"from","tvm_rt::ndarray","",28,[[["ndarraycontainer",3]]]],[11,"from","","",28,[[["objectptr",3],["ndarraycontainer",3]]]],[11,"from","tvm_rt::function","",2,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",2,[[["ndarray",3]],["argvalue",4]]],[11,"from","","",3,[[["ndarray",3]],["retvalue",4]]],[11,"from","","",2,[[["module",3]]]],[11,"from","","",2,[[["module",3]]]],[11,"from","","",3,[[["module",3]],["retvalue",4]]],[11,"into_iter","tvm_rt::array","",9,[[]]],[11,"into_iter","tvm_rt::map","",24,[[],["intoiter",3]]],[11,"next","tvm_rt::array","",33,[[],["option",4]]],[11,"next","tvm_rt::map","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"clone","tvm_rt::object","",31,[[],["objectref",3]]],[11,"clone","","",4,[[]]],[11,"clone","tvm_rt::string","",8,[[],["string",3]]],[11,"clone","tvm_rt::array","",9,[[],["array",3]]],[11,"clone","tvm_rt::function","",23,[[],["function",3]]],[11,"clone","tvm_rt::map","",24,[[],["map",3]]],[11,"clone","tvm_rt::module","",25,[[],["module",3]]],[11,"clone","tvm_rt::ndarray","",28,[[],["ndarray",3]]],[11,"cmp","tvm_rt::string","",8,[[],["ordering",4]]],[11,"eq","","",8,[[]]],[11,"partial_cmp","","",8,[[],[["ordering",4],["option",4]]]],[11,"deref","tvm_rt::object","",31,[[]]],[11,"deref","","",4,[[]]],[11,"deref","tvm_rt::string","",8,[[]]],[11,"deref","tvm_rt::ndarray","",28,[[]]],[11,"fmt","tvm_rt::object","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::string","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::errors","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::function","",23,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::map","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::module","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::string","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_rt::errors","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","tvm_rt::string","",8,[[]]],[11,"hash","tvm_rt::function","",23,[[]]],[11,"from_iter","tvm_rt::map","",24,[[["intoiterator",8]]]],[11,"try_from","tvm_rt::object","",31,[[["retvalue",4]],[["objectref",3],["result",6]]]],[11,"try_from","","",31,[[["argvalue",4]],[["objectref",3],["result",6]]]],[11,"try_from","","",4,[[["retvalue",4]],[["result",4],["objectptr",3]]]],[11,"try_from","","",4,[[["argvalue",4]],[["result",4],["objectptr",3]]]],[11,"try_from","tvm_rt::string","",8,[[["retvalue",4]],[["result",6],["string",3]]]],[11,"try_from","","",8,[[["argvalue",4]],[["result",6],["string",3]]]],[11,"try_from","tvm_rt::array","",9,[[["argvalue",4]],[["result",6],["array",3]]]],[11,"try_from","","",9,[[["retvalue",4]],[["result",6],["array",3]]]],[11,"try_from","tvm_rt::function","",23,[[["retvalue",4]],[["function",3],["result",6]]]],[11,"try_from","","",23,[[["argvalue",4]],[["function",3],["result",6]]]],[11,"try_from","","",23,[[["argvalue",4]],[["function",3],["result",6]]]],[11,"try_from","tvm_rt::map","",24,[[["argvalue",4]],[["result",6],["map",3]]]],[11,"try_from","","",24,[[["retvalue",4]],[["result",6],["map",3]]]],[11,"try_from","tvm_rt::ndarray","",28,[[["retvalue",4]],[["result",6],["ndarray",3]]]],[11,"try_from","","",28,[[["argvalue",4]],[["result",6],["ndarray",3]]]],[11,"try_from","tvm_rt::module","",25,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",25,[[["argvalue",4]],[["result",4],["module",3]]]],[11,"try_from","","",25,[[["retvalue",4]],[["result",4],["module",3]]]],[11,"source","tvm_rt::errors","",11,[[],[["option",4],["error",8]]]],[11,"source","","",13,[[],[["option",4],["error",8]]]],[11,"new","tvm_rt::context","",0,[[["devicetype",4]],["context",3]]],[11,"cpu","","",0,[[],["context",3]]],[11,"llvm","","",0,[[],["context",3]]],[11,"stackvm","","",0,[[],["context",3]]],[11,"gpu","","",0,[[],["context",3]]],[11,"cuda","","",0,[[],["context",3]]],[11,"nvptx","","",0,[[],["context",3]]],[11,"cl","","",0,[[],["context",3]]],[11,"metal","","",0,[[],["context",3]]],[11,"vpi","","",0,[[],["context",3]]],[11,"rocm","","",0,[[],["context",3]]],[11,"ext_dev","","",0,[[],["context",3]]],[11,"n","","",1,[[],[["devicetype",4],["option",4]]]],[11,"from_tvm_value","tvm_rt::function","",2,[[["tvmvalue",19]],["argvalue",4]]],[11,"to_tvm_value","","",2,[[]]],[11,"from_tvm_value","","",3,[[["tvmvalue",19]],["retvalue",4]]],[11,"to_tvm_value","","",3,[[]]],[11,"data","tvm_rt","Gets the underlying byte-array",29,[[]]],[11,"len","","Gets the length of the underlying byte-array",29,[[]]],[11,"to_vec","","Converts the underlying byte-array to `Vec<u8>`",29,[[],["vec",3]]],[11,"is_empty","","",29,[[]]],[11,"new","","",30,[[],["datatype",3]]],[11,"itemsize","","Returns the number of bytes occupied by an element of this…",30,[[]]],[11,"is_type","","Returns whether this `DataType` represents primitive type…",30,[[]]],[11,"code","","",30,[[]]],[11,"bits","","",30,[[]]],[11,"lanes","","",30,[[]]],[11,"int","","",30,[[],["datatype",3]]],[11,"float","","",30,[[],["datatype",3]]],[11,"uint","","",30,[[],["datatype",3]]],[18,"TYPE_KEY","tvm_rt::object","",6,null],[11,"typed_delete","","",6,[[]]],[11,"cpu","tvm_rt::function::ffi","",14,[[],["dlcontext",3]]],[11,"llvm","","",14,[[],["dlcontext",3]]],[11,"stackvm","","",14,[[],["dlcontext",3]]],[11,"gpu","","",14,[[],["dlcontext",3]]],[11,"cuda","","",14,[[],["dlcontext",3]]],[11,"nvptx","","",14,[[],["dlcontext",3]]],[11,"cl","","",14,[[],["dlcontext",3]]],[11,"metal","","",14,[[],["dlcontext",3]]],[11,"vpi","","",14,[[],["dlcontext",3]]],[11,"rocm","","",14,[[],["dlcontext",3]]],[11,"ext_dev","","",14,[[],["dlcontext",3]]]],"p":[[3,"Context"],[4,"DeviceType"],[4,"ArgValue"],[4,"RetValue"],[3,"ObjectPtr"],[3,"Object"],[8,"IsObject"],[8,"IsObjectRef"],[3,"String"],[3,"Array"],[3,"TypeMismatchError"],[4,"NDArrayError"],[13,"DataTypeMismatch"],[4,"Error"],[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[19,"TVMValue"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[8,"ToFunction"],[8,"Typed"],[3,"Function"],[3,"Map"],[3,"Module"],[8,"Num32"],[3,"NDArrayContainer"],[3,"NDArray"],[3,"ByteArray"],[3,"DataType"],[3,"ObjectRef"],[3,"StringObj"],[3,"IntoIter"],[3,"UnsupportedDeviceError"],[3,"FunctionNotFoundError"],[3,"IntoIter"]]},\
"tvm_sys":{"doc":"This crate contains the minimal interface over TVM\'s C…","i":[[0,"ffi","tvm_sys","The low-level C runtime FFI API for TVM.",null,null],[3,"DLContext","tvm_sys::ffi","\\\\brief A Device context for Tensor and operator.",null,null],[12,"device_type","","\\\\brief The device type used in the device.",0,null],[12,"device_id","","\\\\brief The device index",0,null],[3,"DLDataType","","\\\\brief The data type the tensor can hold.",null,null],[12,"code","","\\\\brief Type code of base types. We keep it uint8_t instead…",1,null],[12,"bits","","\\\\brief Number of bits, common choices are 8, 16, 32.",1,null],[12,"lanes","","\\\\brief Number of lanes in the type, used for vector types.",1,null],[3,"DLTensor","","\\\\brief Plain C Tensor object, does not manage memory.",null,null],[12,"data","","\\\\brief The opaque data pointer points to the allocated…",2,null],[12,"ctx","","\\\\brief The device context of the tensor",2,null],[12,"ndim","","\\\\brief Number of dimensions",2,null],[12,"dtype","","\\\\brief The data type of the pointer",2,null],[12,"shape","","\\\\brief The shape of the tensor",2,null],[12,"strides","","\\\\brief strides of the tensor (in number of elements, not…",2,null],[12,"byte_offset","","\\\\brief The offset in bytes to the beginning pointer to data",2,null],[3,"DLManagedTensor","","\\\\brief C Tensor object, manage memory of DLTensor. This…",null,null],[12,"dl_tensor","","\\\\brief DLTensor which is being memory managed",3,null],[12,"manager_ctx","","\\\\brief the context of the original host framework of…",3,null],[12,"deleter","","\\\\brief Destructor signature void ()(void) - this should be…",3,null],[3,"TVMByteArray","","\\\\brief Byte array type used to pass in byte array When…",null,null],[12,"data","","",4,null],[12,"size","","",4,null],[3,"TVMParallelGroupEnv","","\\\\brief Environment for TVM parallel task.",null,null],[12,"sync_handle","","\\\\brief Auxiliary used for synchronization",5,null],[12,"num_task","","\\\\brief total amount of task",5,null],[19,"TVMValue","","\\\\brief Union type of values being passed through API and…",null,null],[12,"v_int64","","",6,null],[12,"v_float64","","",6,null],[12,"v_handle","","",6,null],[12,"v_str","","",6,null],[12,"v_type","","",6,null],[12,"v_ctx","","",6,null],[5,"TVMAPISetLastError","","\\\\brief Used for implementing C API function. Set last…",null,null],[5,"TVMGetLastError","","\\\\brief return str message of the last error all function…",null,null],[5,"TVMModLoadFromFile","","\\\\brief Load module from file. \\\\param file_name The file…",null,null],[5,"TVMModImport","","\\\\brief Add dep to mod\'s dependency. This allows functions…",null,null],[5,"TVMModGetFunction","","\\\\brief Get function from the module. \\\\param mod The module…",null,null],[5,"TVMModFree","","\\\\brief Free the Module \\\\param mod The module to be freed.",null,null],[5,"TVMFuncFree","","\\\\brief Free the function when it is no longer needed.…",null,null],[5,"TVMFuncCall","","\\\\brief Call a Packed TVM Function.",null,null],[5,"TVMCFuncSetReturn","","\\\\brief Set the return value of TVMPackedCFunc.",null,null],[5,"TVMCbArgToReturn","","\\\\brief Inplace translate callback argument value to return…",null,null],[5,"TVMFuncCreateFromCFunc","","\\\\brief Wrap a TVMPackedCFunc to become a FunctionHandle.",null,null],[5,"TVMFuncRegisterGlobal","","\\\\brief Register the function to runtime\'s global table.",null,null],[5,"TVMFuncGetGlobal","","\\\\brief Get a global function.",null,null],[5,"TVMFuncListGlobalNames","","\\\\brief List all the globally registered function name…",null,null],[5,"TVMFuncRemoveGlobal","","\\\\brief Remove a global function. \\\\param name The name of…",null,null],[5,"TVMArrayAlloc","","\\\\brief Allocate a nd-array\'s memory, including space of…",null,null],[5,"TVMArrayFree","","\\\\brief Free the TVM Array. \\\\param handle The array handle…",null,null],[5,"TVMArrayCopyFromBytes","","\\\\brief Copy array data from CPU byte array. \\\\param handle…",null,null],[5,"TVMArrayCopyToBytes","","\\\\brief Copy array data to CPU byte array. \\\\param handle…",null,null],[5,"TVMArrayCopyFromTo","","\\\\brief Copy the array, both from and to must be valid…",null,null],[5,"TVMArrayFromDLPack","","\\\\brief Produce an array from the DLManagedTensor that…",null,null],[5,"TVMArrayToDLPack","","\\\\brief Produce a DLMangedTensor from the array that shares…",null,null],[5,"TVMDLManagedTensorCallDeleter","","\\\\brief Delete (free) a DLManagedTensor\'s data. \\\\param…",null,null],[5,"TVMStreamCreate","","\\\\brief Create a new runtime stream.",null,null],[5,"TVMStreamFree","","\\\\brief Free a created stream handle.",null,null],[5,"TVMSetStream","","\\\\brief Set the runtime stream of current thread to be…",null,null],[5,"TVMSynchronize","","\\\\brief Wait until all computations on stream completes.",null,null],[5,"TVMStreamStreamSynchronize","","\\\\brief Synchronize two streams of execution.",null,null],[5,"TVMObjectGetTypeIndex","","\\\\brief Get the type_index from an object.",null,null],[5,"TVMObjectTypeKey2Index","","\\\\brief Convert type key to type index. \\\\param type_key The…",null,null],[5,"TVMObjectRetain","","\\\\brief Increase the reference count of an object.",null,null],[5,"TVMObjectFree","","\\\\brief Free the object.",null,null],[5,"TVMDeviceAllocDataSpace","","\\\\brief Allocate a data space on device. \\\\param ctx The…",null,null],[5,"TVMDeviceFreeDataSpace","","\\\\brief Free a data space on device. \\\\param ctx The device…",null,null],[5,"TVMDeviceCopyDataFromTo","","\\\\brief Copy data from one place to another. \\\\param from…",null,null],[5,"TVMObjectDerivedFrom","","\\\\brief Check that an object is derived from another.…",null,null],[5,"TVMBackendGetFuncFromEnv","","\\\\brief Backend function for modules to get function from…",null,null],[5,"TVMBackendRegisterSystemLibSymbol","","\\\\brief Backend function to register system-wide library…",null,null],[5,"TVMBackendAllocWorkspace","","\\\\brief Backend function to allocate temporal workspace.",null,null],[5,"TVMBackendFreeWorkspace","","\\\\brief Backend function to free temporal workspace.",null,null],[5,"TVMBackendParallelLaunch","","\\\\brief Backend function for running parallel jobs.",null,null],[5,"TVMBackendParallelBarrier","","\\\\brief BSP barrrier between parallel threads \\\\param…",null,null],[5,"TVMBackendRunOnce","","\\\\brief Simple static initialization function. Run f once…",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"wchar_t","","",null,null],[6,"DLDeviceType","","\\\\brief The device type in DLContext.",null,null],[6,"DLDataTypeCode","","\\\\brief The type code options DLDataType.",null,null],[6,"tvm_index_t","","\\\\brief type of array index.",null,null],[6,"TVMDeviceExtType","","\\\\brief Extension device types in TVM",null,null],[6,"TVMArgTypeCode","","\\\\brief The type code in used and only used in TVM FFI for…",null,null],[6,"TVMContext","","\\\\brief The Device information, abstract away common device…",null,null],[6,"TVMArrayHandle","","\\\\brief the array handle",null,null],[6,"TVMModuleHandle","","\\\\brief Handle to TVM runtime modules.",null,null],[6,"TVMFunctionHandle","","\\\\brief Handle to packed function handle.",null,null],[6,"TVMRetValueHandle","","\\\\brief Handle to hold return value.",null,null],[6,"TVMStreamHandle","","\\\\brief The stream that is specific to device can be NULL,…",null,null],[6,"TVMObjectHandle","","\\\\brief Handle to Object.",null,null],[6,"TVMPackedCFunc","","\\\\brief C type of packed function.",null,null],[6,"TVMPackedCFuncFinalizer","","\\\\brief C callback to free the resource handle in C packed…",null,null],[6,"TVMExtensionFuncDeclarer","","\\\\brief Signature for extension function declarer.",null,null],[6,"TVMBackendPackedCFunc","","\\\\brief Signature for backend functions exported as DLL.",null,null],[6,"FTVMParallelLambda","","\\\\brief The callback function to execute a parallel lambda…",null,null],[6,"BackendPackedCFunc","","",null,null],[17,"TVM_VERSION","","",null,null],[17,"DLPACK_VERSION","","",null,null],[17,"_STDINT_H","","",null,null],[17,"_FEATURES_H","","",null,null],[17,"_DEFAULT_SOURCE","","",null,null],[17,"__USE_ISOC11","","",null,null],[17,"__USE_ISOC99","","",null,null],[17,"__USE_ISOC95","","",null,null],[17,"__USE_POSIX_IMPLICITLY","","",null,null],[17,"_POSIX_SOURCE","","",null,null],[17,"_POSIX_C_SOURCE","","",null,null],[17,"__USE_POSIX","","",null,null],[17,"__USE_POSIX2","","",null,null],[17,"__USE_POSIX199309","","",null,null],[17,"__USE_POSIX199506","","",null,null],[17,"__USE_XOPEN2K","","",null,null],[17,"__USE_XOPEN2K8","","",null,null],[17,"_ATFILE_SOURCE","","",null,null],[17,"__USE_MISC","","",null,null],[17,"__USE_ATFILE","","",null,null],[17,"__USE_FORTIFY_LEVEL","","",null,null],[17,"_STDC_PREDEF_H","","",null,null],[17,"__STDC_IEC_559__","","",null,null],[17,"__STDC_IEC_559_COMPLEX__","","",null,null],[17,"__STDC_ISO_10646__","","",null,null],[17,"__STDC_NO_THREADS__","","",null,null],[17,"__GNU_LIBRARY__","","",null,null],[17,"__GLIBC__","","",null,null],[17,"__GLIBC_MINOR__","","",null,null],[17,"_SYS_CDEFS_H","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"__WORDSIZE_TIME64_COMPAT32","","",null,null],[17,"__SYSCALL_WORDSIZE","","",null,null],[17,"_BITS_WCHAR_H","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"DLDeviceType_kDLCPU","","\\\\brief CPU device",null,null],[17,"DLDeviceType_kDLGPU","","\\\\brief CUDA GPU device",null,null],[17,"DLDeviceType_kDLCPUPinned","","\\\\brief Pinned CUDA GPU device by cudaMallocHost \\\\note…",null,null],[17,"DLDeviceType_kDLOpenCL","","\\\\brief OpenCL devices.",null,null],[17,"DLDeviceType_kDLVulkan","","\\\\brief Vulkan buffer for next generation graphics.",null,null],[17,"DLDeviceType_kDLMetal","","\\\\brief Metal for Apple GPU.",null,null],[17,"DLDeviceType_kDLVPI","","\\\\brief Verilog simulator buffer",null,null],[17,"DLDeviceType_kDLROCM","","\\\\brief ROCm GPUs for AMD GPUs",null,null],[17,"DLDeviceType_kDLExtDev","","\\\\brief Reserved extension device type, used for quickly…",null,null],[17,"DLDataTypeCode_kDLInt","","",null,null],[17,"DLDataTypeCode_kDLUInt","","",null,null],[17,"DLDataTypeCode_kDLFloat","","",null,null],[17,"DLDataTypeCode_kDLBfloat","","",null,null],[17,"TVMDeviceExtType_kDLAOCL","","",null,null],[17,"TVMDeviceExtType_kDLSDAccel","","",null,null],[17,"TVMDeviceExtType_kOpenGL","","",null,null],[17,"TVMDeviceExtType_kDLMicroDev","","",null,null],[17,"TVMDeviceExtType_kDLHexagon","","",null,null],[17,"TVMDeviceExtType_kDLWebGPU","","",null,null],[17,"TVMArgTypeCode_kTVMArgInt","","",null,null],[17,"TVMArgTypeCode_kTVMArgFloat","","",null,null],[17,"TVMArgTypeCode_kTVMOpaqueHandle","","",null,null],[17,"TVMArgTypeCode_kTVMNullptr","","",null,null],[17,"TVMArgTypeCode_kTVMDataType","","",null,null],[17,"TVMArgTypeCode_kTVMContext","","",null,null],[17,"TVMArgTypeCode_kTVMDLTensorHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectHandle","","",null,null],[17,"TVMArgTypeCode_kTVMModuleHandle","","",null,null],[17,"TVMArgTypeCode_kTVMPackedFuncHandle","","",null,null],[17,"TVMArgTypeCode_kTVMStr","","",null,null],[17,"TVMArgTypeCode_kTVMBytes","","",null,null],[17,"TVMArgTypeCode_kTVMNDArrayHandle","","",null,null],[17,"TVMArgTypeCode_kTVMObjectRValueRefArg","","",null,null],[17,"TVMArgTypeCode_kTVMExtBegin","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMFirst","","",null,null],[17,"TVMArgTypeCode_kTVMNNVMLast","","",null,null],[17,"TVMArgTypeCode_kTVMExtReserveEnd","","",null,null],[17,"TVMArgTypeCode_kTVMExtEnd","","",null,null],[0,"array","tvm_sys","",null,null],[0,"byte_array","","",null,null],[3,"ByteArray","tvm_sys::byte_array","A newtype wrapping a raw TVM byte-array.",null,null],[11,"data","","Gets the underlying byte-array",7,[[]]],[11,"len","","Gets the length of the underlying byte-array",7,[[]]],[11,"to_vec","","Converts the underlying byte-array to `Vec<u8>`",7,[[],["vec",3]]],[11,"is_empty","","",7,[[]]],[0,"context","tvm_sys","Provides [`Context`] and related device queries.",null,null],[3,"Context","tvm_sys::context","",null,null],[12,"device_type","","",8,null],[12,"device_id","","",8,null],[3,"UnsupportedDeviceError","","",null,null],[4,"DeviceType","","Device type represents the set of devices supported by  TVM.",null,null],[13,"CPU","","",9,null],[13,"GPU","","",9,null],[13,"CPUPinned","","",9,null],[13,"OpenCL","","",9,null],[13,"Vulkan","","",9,null],[13,"Metal","","",9,null],[13,"VPI","","",9,null],[13,"ROCM","","",9,null],[13,"ExtDev","","",9,null],[11,"n","","",9,[[],["option",4]]],[11,"new","","",8,[[["devicetype",4]],["context",3]]],[11,"cpu","","",8,[[]]],[11,"llvm","","",8,[[]]],[11,"stackvm","","",8,[[]]],[11,"gpu","","",8,[[]]],[11,"cuda","","",8,[[]]],[11,"nvptx","","",8,[[]]],[11,"cl","","",8,[[]]],[11,"metal","","",8,[[]]],[11,"vpi","","",8,[[]]],[11,"rocm","","",8,[[]]],[11,"ext_dev","","",8,[[]]],[0,"datatype","tvm_sys","",null,null],[3,"DataType","tvm_sys::datatype","",null,null],[4,"ParseDataTypeError","","",null,null],[13,"InvalidNumber","","",10,null],[13,"MissingDataType","","",10,null],[13,"UnknownType","","",10,null],[11,"new","","",11,[[],["datatype",3]]],[11,"itemsize","","Returns the number of bytes occupied by an element of this…",11,[[]]],[11,"is_type","","Returns whether this `DataType` represents primitive type…",11,[[]]],[11,"code","","",11,[[]]],[11,"bits","","",11,[[]]],[11,"lanes","","",11,[[]]],[11,"int","","",11,[[],["datatype",3]]],[11,"float","","",11,[[],["datatype",3]]],[11,"uint","","",11,[[],["datatype",3]]],[0,"errors","tvm_sys","",null,null],[3,"ValueDowncastError","tvm_sys::errors","",null,null],[12,"actual_type","","",12,null],[12,"expected_type","","",12,null],[3,"FuncCallError","","",null,null],[11,"get_with_context","","",13,[[["string",3]]]],[0,"packed_func","tvm_sys","",null,null],[4,"ArgValue","tvm_sys::packed_func","A borrowed TVMPODValue. Can be constructed using `into()`…",null,null],[13,"Int","","",14,null],[13,"UInt","","",14,null],[13,"Float","","",14,null],[13,"Null","","",14,null],[13,"DataType","","",14,null],[13,"String","","",14,null],[13,"Context","","",14,null],[13,"Handle","","",14,null],[13,"ArrayHandle","","",14,null],[13,"ObjectHandle","","",14,null],[13,"ModuleHandle","","",14,null],[13,"FuncHandle","","",14,null],[13,"NDArrayHandle","","",14,null],[13,"Bytes","","",14,null],[13,"Str","","",14,null],[4,"RetValue","","An owned TVMPODValue. Can be converted from a variety of…",null,null],[13,"Int","","",15,null],[13,"UInt","","",15,null],[13,"Float","","",15,null],[13,"Null","","",15,null],[13,"DataType","","",15,null],[13,"String","","",15,null],[13,"Context","","",15,null],[13,"Handle","","",15,null],[13,"ArrayHandle","","",15,null],[13,"ObjectHandle","","",15,null],[13,"ModuleHandle","","",15,null],[13,"FuncHandle","","",15,null],[13,"NDArrayHandle","","",15,null],[13,"Bytes","","",15,null],[13,"Str","","",15,null],[8,"PackedFunc","","",null,null],[11,"from_tvm_value","","",14,[[["tvmvalue",19]]]],[11,"to_tvm_value","","",14,[[]]],[11,"from_tvm_value","","",15,[[["tvmvalue",19]]]],[11,"to_tvm_value","","",15,[[]]],[0,"value","tvm_sys","",null,null],[3,"UnsupportedDeviceError","tvm_sys::value","",null,null],[11,"cpu","tvm_sys::ffi","",0,[[]]],[11,"llvm","","",0,[[]]],[11,"stackvm","","",0,[[]]],[11,"gpu","","",0,[[]]],[11,"cuda","","",0,[[]]],[11,"nvptx","","",0,[[]]],[11,"cl","","",0,[[]]],[11,"metal","","",0,[[]]],[11,"vpi","","",0,[[]]],[11,"rocm","","",0,[[]]],[11,"ext_dev","","",0,[[]]],[11,"cpu","tvm_sys::value","",16,[[]]],[11,"llvm","","",16,[[]]],[11,"stackvm","","",16,[[]]],[11,"gpu","","",16,[[]]],[11,"cuda","","",16,[[]]],[11,"nvptx","","",16,[[]]],[11,"cl","","",16,[[]]],[11,"metal","","",16,[[]]],[11,"vpi","","",16,[[]]],[11,"rocm","","",16,[[]]],[11,"ext_dev","","",16,[[]]],[14,"call_packed","tvm_sys","Calls a packed function and returns a `RetValue`.",null,null],[14,"try_downcast","","",null,null],[11,"from","tvm_sys::ffi","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","tvm_sys::byte_array","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","tvm_sys::context","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","tvm_sys::datatype","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tvm_sys::errors","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tvm_sys::packed_func","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","tvm_sys::value","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tvm_sys::ffi","",2,[[["array",6]]]],[11,"from","","",2,[[["array",6]]]],[11,"from","","",2,[[["array",6]]]],[11,"from","","",2,[[["array",6]]]],[11,"from","","",2,[[["array",6]]]],[11,"from","","",2,[[["array",6]]]],[11,"from","tvm_sys::byte_array","",7,[[]]],[11,"from","tvm_sys::packed_func","",14,[[["bytearray",3]],["argvalue",4]]],[11,"from","","",15,[[["bytearray",3]],["retvalue",4]]],[11,"from","tvm_sys","",19,[[["devicetype",4]]]],[11,"from","tvm_sys::context","",9,[[["dldevicetype",6]]]],[11,"from","","",9,[[]]],[11,"from","tvm_sys::packed_func","",14,[[["devicetype",4]]]],[11,"from","tvm_sys::ffi","",0,[[["context",3]]]],[11,"from","tvm_sys::context","",8,[[]]],[11,"from","","",8,[[["dlcontext",3]]]],[11,"from","tvm_sys::ffi","",0,[[["context",3]]]],[11,"from","tvm_sys::packed_func","",14,[[["context",3]]]],[11,"from","","",14,[[["context",3]]]],[11,"from","","",15,[[["context",3]],["retvalue",4]]],[11,"from","tvm_sys::ffi","",1,[[["datatype",3]]]],[11,"from","tvm_sys::datatype","",11,[[["dldatatype",3]]]],[11,"from","tvm_sys::ffi","",1,[[["datatype",3]]]],[11,"from","tvm_sys::packed_func","",15,[[["datatype",3]],["retvalue",4]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",14,[[["dldatatype",3]]]],[11,"from","","",14,[[["dldatatype",3]]]],[11,"from","","",15,[[["dldatatype",3]]]],[11,"from","","",14,[[["tvmcontext",6]]]],[11,"from","","",14,[[["tvmcontext",6]]]],[11,"from","","",15,[[["tvmcontext",6]]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[["string",3]]]],[11,"from","","",14,[[["cstr",3]]]],[11,"from","","",14,[[["cstring",3]]]],[11,"from","","",14,[[["tvmbytearray",3]]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[]]],[11,"from","","",14,[[["dltensor",3]]]],[11,"from","","",14,[[["dltensor",3]]]],[11,"from","","",15,[[["string",3]]]],[11,"from","","",15,[[["tvmbytearray",3]]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",15,[[]]],[11,"from","tvm_sys::ffi","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[["dldatatype",3]]]],[11,"from","","",1,[[["tvmvalue",19]]]],[11,"from","","",6,[[["tvmcontext",6]]]],[11,"from","tvm_sys","",16,[[["tvmvalue",19]]]],[11,"clone","tvm_sys::ffi","",0,[[],["dlcontext",3]]],[11,"clone","","",1,[[],["dldatatype",3]]],[11,"clone","","",2,[[],["dltensor",3]]],[11,"clone","","",3,[[],["dlmanagedtensor",3]]],[11,"clone","","",6,[[],["tvmvalue",19]]],[11,"clone","","",4,[[],["tvmbytearray",3]]],[11,"clone","","",5,[[],["tvmparallelgroupenv",3]]],[11,"clone","tvm_sys::context","",9,[[],["devicetype",4]]],[11,"clone","","",8,[[],["context",3]]],[11,"clone","tvm_sys::datatype","",11,[[],["datatype",3]]],[11,"clone","tvm_sys::packed_func","",14,[[],["argvalue",4]]],[11,"clone","","",15,[[],["retvalue",4]]],[11,"default","tvm_sys::ffi","",0,[[]]],[11,"default","","",1,[[],["dldatatype",3]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",6,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","tvm_sys::context","default device is cpu.",9,[[]]],[11,"default","","",8,[[]]],[11,"default","tvm_sys::packed_func","",15,[[]]],[11,"cmp","tvm_sys::datatype","",11,[[["datatype",3]],["ordering",4]]],[11,"eq","tvm_sys::ffi","",0,[[["dlcontext",3]]]],[11,"ne","","",0,[[["dlcontext",3]]]],[11,"eq","","",1,[[["dldatatype",3]]]],[11,"ne","","",1,[[["dldatatype",3]]]],[11,"eq","","",2,[[["dltensor",3]]]],[11,"ne","","",2,[[["dltensor",3]]]],[11,"eq","","",3,[[["dlmanagedtensor",3]]]],[11,"ne","","",3,[[["dlmanagedtensor",3]]]],[11,"eq","","",4,[[["tvmbytearray",3]]]],[11,"ne","","",4,[[["tvmbytearray",3]]]],[11,"eq","","",5,[[["tvmparallelgroupenv",3]]]],[11,"ne","","",5,[[["tvmparallelgroupenv",3]]]],[11,"eq","tvm_sys::context","",9,[[["devicetype",4]]]],[11,"eq","","",8,[[["context",3]]]],[11,"ne","","",8,[[["context",3]]]],[11,"eq","tvm_sys::datatype","",11,[[["datatype",3]]]],[11,"ne","","",11,[[["datatype",3]]]],[11,"partial_cmp","","",11,[[["datatype",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["datatype",3]]]],[11,"le","","",11,[[["datatype",3]]]],[11,"gt","","",11,[[["datatype",3]]]],[11,"ge","","",11,[[["datatype",3]]]],[11,"fmt","tvm_sys::ffi","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::context","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::datatype","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::errors","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::packed_func","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::value","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::context","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::datatype","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::errors","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tvm_sys::value","",18,[[["formatter",3]],["result",6]]],[11,"hash","tvm_sys::context","",9,[[]]],[11,"hash","","",8,[[]]],[11,"hash","tvm_sys::datatype","",11,[[]]],[11,"try_from","tvm_sys::byte_array","",7,[[["argvalue",4]],[["bytearray",3],["result",4]]]],[11,"try_from","","",7,[[["retvalue",4]],[["bytearray",3],["result",4]]]],[11,"try_from","tvm_sys::context","",8,[[["retvalue",4]],[["context",3],["result",6]]]],[11,"try_from","tvm_sys::datatype","",11,[[["retvalue",4]],[["datatype",3],["result",6]]]],[11,"try_from","tvm_sys::ffi","",1,[[["argvalue",4]],["result",4]]],[11,"try_from","","",1,[[["argvalue",4]],["result",4]]],[11,"try_from","","",1,[[["retvalue",4]],["result",4]]],[11,"try_from","tvm_sys","",16,[[["argvalue",4]],["result",4]]],[11,"try_from","","",16,[[["argvalue",4]],["result",4]]],[11,"try_from","","",16,[[["retvalue",4]],["result",4]]],[11,"try_from","tvm_sys::ffi","",4,[[["retvalue",4]],["result",4]]],[11,"try_from","tvm_sys::packed_func","",15,[[["result",4]],[["result",4],["retvalue",4]]]],[11,"from_str","tvm_sys::context","",8,[[],["result",6]]],[11,"from_str","tvm_sys::datatype","",11,[[],["result",4]]],[11,"from_str","tvm_sys","",16,[[],["result",4]]]],"p":[[3,"DLContext"],[3,"DLDataType"],[3,"DLTensor"],[3,"DLManagedTensor"],[3,"TVMByteArray"],[3,"TVMParallelGroupEnv"],[19,"TVMValue"],[3,"ByteArray"],[3,"Context"],[4,"DeviceType"],[4,"ParseDataTypeError"],[3,"DataType"],[3,"ValueDowncastError"],[3,"FuncCallError"],[4,"ArgValue"],[4,"RetValue"],[6,"TVMContext"],[3,"UnsupportedDeviceError"],[3,"UnsupportedDeviceError"],[6,"DLDeviceType"]]},\
"tyck":{"doc":"","i":[[3,"Opt","tyck","",null,null],[12,"input","","Input file",0,null],[5,"main","","",null,[[],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_py","","",0,[[["python",3]]]],[11,"into_py","","",0,[[["python",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]]],"p":[[3,"Opt"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);